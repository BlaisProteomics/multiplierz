<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sciex.FMan</name>
    </assembly>
    <members>
        <member name="T:Sciex.FMan.FManMassSpectrum">
            <summary>
            This subclass of FManXYData is used to create a spectrum. This
            class itself is still abstract, so subclasses are responsible for
            creating the actual data. This class itself defines methods which 
            are common to all spectra.
            </summary>
        </member>
        <member name="T:Sciex.FMan.FManXYData">
            <summary>
            This class defines "FMan" data. There are specific concrete subclasses for
            dealing with chromatograms and with spectra. This class itself defines a few 
            methods which are common for both.
            </summary>
        </member>
        <member name="M:Sciex.FMan.FManXYData.#ctor(Sciex.FMan.IFMan)">
            <summary>
            Constructor.
            </summary>
            <param name="fMan">Used to get info, etc.</param>
        </member>
        <member name="M:Sciex.FMan.FManXYData.#ctor(Sciex.FMan.FManXYData)">
            <summary>
            Copy constructor.
            </summary>
            <param name="toCopy">The object to copy.</param>
        </member>
        <member name="M:Sciex.FMan.FManXYData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used when de-serialising.
            </summary>
            <param name="info">Object with data.</param>
            <param name="context">Not used.</param>
        </member>
        <member name="M:Sciex.FMan.FManXYData.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialises this object.
            </summary>
            <param name="info">Object which holds data to write.</param>
            <param name="context">Not used.</param>
        </member>
        <member name="M:Sciex.FMan.FManXYData.RealTimeUpdate">
            <summary>
            This method is called to update this data for the case in which new data
            is available since it was originally calculated. This method itself does
            nothing but subclasses will override.
            </summary>
        </member>
        <member name="M:Sciex.FMan.FManXYData.UpdateTitles">
            <summary>
            This method is called to force an update to the graph titles for custom
            purposes such as adding a prefix or a suffix. The base class does nothing.
            </summary>
        </member>
        <member name="M:Sciex.FMan.FManXYData.FindCycle(System.Double)">
            <summary>
            This utility method returns the cycle closest to the provided time for the experiment
            and period with which we are associated. NOTE: The return value always refers to our
            associated period and also note that it is an error to call this method for a
            multi-period object (i.e. if this.Info.PeriodIndex is -1) - although the single-period
            but multi-experiment case is okay.
            </summary>
            <param name="time">Retention time.</param>
            <returns>Cycle for specified time.</returns>
        </member>
        <member name="M:Sciex.FMan.FManXYData.VerifyExperiment(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Boolean)">
            <summary>
            This routine throws a UserException if the period or experiment indices are out
            of range. Note that if "allowAll" is true we allow a period or experiment of -1 
            (which indicates "all").
            </summary>
            <param name="sample">Sample to check.</param>
            <param name="period">Period number to check.</param>
            <param name="experiment">Experiment number to check.</param>
            <param name="allowAll">Allow "-1" for period or experiment?</param>
        </member>
        <member name="M:Sciex.FMan.FManXYData.Initialise(Sciex.FMan.FManSample,Sciex.FMan.MSMethod,Sciex.FMan.FManDataInfo,System.String,System.String,System.String,System.Double[],System.Double[])">
            <summary>
            This method MUST be called by subclasses so that we can store the
            various objects for later retrieval, set the x and y values, etc.
            </summary>
            <param name="sample">Sample identifier.</param>
            <param name="method">MSMethod object.</param>
            <param name="info">Spetrum or chromatogram info.</param>
            <param name="shortName">Short description.</param>
            <param name="longName">Long description.</param>
            <param name="id">ID.</param>
            <param name="xValues">Array of x-values.</param>
            <param name="yValues">Array of y-values.</param>
        </member>
        <member name="P:Sciex.FMan.FManXYData.GetFManDuringDeserialisation">
            <summary>
            This static property MUST be set prior to trying to de-serialise an instance of
            FManXYData. This is necessary because objects implementing IFMan (to which we 
            store a reference) are not generally serialisable. We will call this provided
            interface to obtain the IFMan dynamically when being de-serialised.
            </summary>
        </member>
        <member name="P:Sciex.FMan.FManXYData.FMan">
            <summary>
            Returns our file manager interface object.
            </summary>
        </member>
        <member name="P:Sciex.FMan.FManXYData.Sample">
            <summary>
            Returns an object which identifies our sample. Note that this object
            is not used in any direct way by the various FMan objects - it will
            presumably be used by subclasses.
            </summary>
        </member>
        <member name="P:Sciex.FMan.FManXYData.SampleInfo">
            <summary>
            Returns an object which holds information about the sample associated
            with this object.
            </summary>
        </member>
        <member name="P:Sciex.FMan.FManXYData.Method">
            <summary>
            Returns the MS acquisition method used to acquire this spectrum or
            chromatogram.
            </summary>
        </member>
        <member name="P:Sciex.FMan.FManXYData.Experiment">
            <summary>
            Returns the MS experiment associated with this spectrum or
            chromatogram. If we're not associated with a specific experiment
            (for example a multi-period or multi-experiment TIC) we return
            null.
            </summary>
        </member>
        <member name="P:Sciex.FMan.FManXYData.Info">
            <summary>
            Returns the acquisition information associated with this spectrum or
            chromatogram. Subclasses will override this method to return a
            specific subclass of FManDataInfo.
            </summary>
        </member>
        <member name="P:Sciex.FMan.FManXYData.IsAcquiringInRealTime">
            <summary>
            Determines if the data is a running acquisition or not.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.IsMassSpectrum(Sciex.Data.XYData.GenericXYData)">
            <summary>
            This utility method returns true if the provided data represents a mass spectrum.
            This is done by looking at the units of the data. Note that a return value of
            true does NOT imply that the data is necessarily of type FManMassSpectrum; also
            note that the return value for an MRM "spectrum" is false.
            </summary>
            <param name="data">Data to check.</param>
            <returns>True iff data is a mass spectrum.</returns>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.#ctor(Sciex.FMan.IFMan)">
            <summary>
            Constructor.
            </summary>
            <param name="fMan">Used to get info, etc.</param>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.#ctor(Sciex.FMan.FManMassSpectrum)">
            <summary>
            Copy constructor.
            </summary>
            <param name="toCopy">The object to copy.</param>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used when de-serialising.
            </summary>
            <param name="info">Object with data.</param>
            <param name="context">Not used.</param>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialises this object.
            </summary>
            <param name="info">Object which holds data to write.</param>
            <param name="context">Not used.</param>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.SetToSpectrum(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets our XY data to a mass spectrum for the specified sample, experiment, etc.
            Subclasses must override this method; they should also override the
            SetToSpectrum(FManSample, int,int, int, int) method if they have an optimised 
            means of obtaining an averaged spectrum.
            </summary>
            <param name="sample">Sample to use.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="cycle">Cycle.</param>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.SetToSpectrum(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets our XY data to a mass spectrum for the specified sample, experiment, etc.
            Subclasses should override this method if they have an optimised means of
            obtaining an averaged spectrum.
            </summary>
            <param name="sample">Sample to use.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="startCycle">First cycle to average.</param>
            <param name="endCycle">Last cycle to average.</param>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.SetToSpectrum(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Boolean)">
            <summary>
            Sets our XY data to a mass spectrum for the specified sample, experiment, etc. If
            "startMass" is less than or equal to "endMass" the mass range is restricted to that 
            range - for some subclasses this may be more efficient than retrieving the
            entire mass range and then limiting it. If "allowLargerRange" is true and there is 
            no optimisation we set the spectrum to the full (or a larger) range, otherwise we
            do extra work to remove points outside the specified range.
            </summary>
            <param name="sample">Sample to use.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="startCycle">First cycle to average.</param>
            <param name="endCycle">Last cycle to average.</param>
            <param name="startMass">Start mass (if less than or equal to end mass).</param>
            <param name="endMass">End mass (if greater than or equal to end mass).</param>
            <param name="allowLargerRange">Allow larger than requested range to be returned?</param>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.SetToOrthogonalSpectrum(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets our XY data to a mass spectrum for the specified sample, experiment, etc. for 
            the special case of so-called "orthogonal" data. This is a spectrum which is associated
            with not just a particular time or cycle range, but also with a particular mass or
            mass range from a parent or precursor spectrum. For details see the description of the
            OrthogonalMSExperiment class.<p></p>
            
            This method itself throws a not-implemented exception. Subclasses which support
            such orthogonal data must override this method.
            </summary>
            <param name="sample">Sample to use.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="startCycle">First cycle to average.</param>
            <param name="endCycle">Last cycle to average.</param>
            <param name="startParentMassIndex">Start index of mass in parent data.</param>
            <param name="endParentMassIndex">End index of mass in parent data.</param>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.VerifyCycle(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32)">
            <summary>
            This utility method throws an exception if the specified cycle number is out
            of range.
            </summary>
            <param name="sample">Sample to use.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="cycle">Cycle index.</param>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.CreatePeakList">
            <summary>
            Returns a peak list for our current data. If our FMan object has a custom
            peak-finder it is used to find peaks, otherwise we use a default peak finder.
            </summary>
            <returns>Peak list for our data.</returns>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.Clearcore2#Data#CommonInterfaces#ICreatePeakList#CreatePeakList(Clearcore2.Data.CommonInterfaces.IRawXYData)">
            <summary>
            We implement ICreatePeakList by deferring to our FMan object - if it supports
            ICreatePeakList we use it, otherwise we return null.
            </summary>
            <param name="data">Data to integrate.</param>
            <returns>Peak list for "data" or null.</returns>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.FinishSetToSpectrum(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32,System.Double[],System.Double[])">
            <summary>
            Called by SetToSpectrum to finish the work. The last two parameters are the
            arrays of x and y values. For a description of the rest of the parameters see
            SetToSpectrum.
            </summary>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.RealTimeUpdate">
            <summary>
            This method is called to update this spectrum for the case in which new data
            is available since it was originally calculated.
            </summary>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.GetStepSizeInternal(System.Double)">
            <summary>
            Returns our step size for the given x-value (mass). We support three
            different cases (subclasses can override this method if this is
            insufficient): data with a constant step size (generally quadrupole
            spectra), data with a calibration, and data with a series of different 
            mass ranges, each of which has a (different) constant step size.
            </summary>
            <param name="xValue">X-value at which to get step.</param>
            <returns>The step size.</returns>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.GetBracketingXValuesUsingStep(System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>
            This method returns the x-values lying just below (or equal to) "xValue" and just
            above this value which lie on even step sizes. 
            </summary>
            <param name="xValue">X-value for which to get bracketing even-step x-values.</param>
            <param name="lowerX">Largest x-value less than or equal to xValue lying on an even step.</param>
            <param name="higherX">Higher x-value lying on an even step.</param>
            <param name="step">Step size at x-value.</param>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.GetDataPointName(System.Int32)">
            <summary>
            Returns the "name" of the requested data point. This is only used
            if we have SIM or MRM data.
            </summary>
            <param name="index">Index of data point.</param>
            <returns>The name.</returns>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.SetDefaultDescription">
            <summary>
            This method resets our title. The title is set automatically when SetToSpectrum() is
            called, so it is only necessary to call this method if any of the information associated
            with our Info object has changed.
            </summary>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.GetDefaultDescription(Sciex.FMan.FManSample,Sciex.FMan.MassSpectrumInfo)">
            <summary>
            Returns a string describing the requested mass spectrum.
            </summary>
            <param name="sample">Sample.</param>
            <param name="info">Info object.</param>
            <returns>The description.</returns>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.GetCDPDescription(Sciex.FMan.MSExperiment,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Given an experiment and a cycle range, this method returns the description of the
            cycle dependent parameters (these are experiment parameters which are not constant).
            </summary>
            <param name="experiment">Experiment object.</param>
            <param name="startCycle">Start cycle.</param>
            <param name="endCycle">End cycle.</param>
            <param name="havePrecursor">Does main description include precursor m/z?</param>
            <returns>Description of CDP (may be empty).</returns>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.Initialise(Sciex.FMan.FManSample,Sciex.FMan.MSMethod,Sciex.FMan.MassSpectrumInfo,System.String,System.String,System.String,System.Double[],System.Double[])">
            <summary>
            This method MUST be called by subclasses so that we can perform 
            remaining work which needs to be done after a new spectrum is
            created.
            </summary>
            <param name="sample">Sample identifier.</param>
            <param name="method">MSMethod object.</param>
            <param name="info">Spectrum info.</param>
            <param name="shortName">Short description of data.</param>
            <param name="longName">Long description of data.</param>
            <param name="id">ID.</param>
            <param name="masses">Array of retention times.</param>
            <param name="yValues">Array of intensities.</param>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.UpdateStepSizeInfo(Sciex.FMan.MSExperiment,Sciex.FMan.MassSpectrumInfo)">
            <summary>
            This routine updates our instance variables which keep track of the
            step size of the data. We support three cases: constant step data,
            data with a calibration and data with multiple mass ranges (but constant 
            steps within each range). Subclasses can override this method if they
            require different methods of calculating the step size; if so, they
            will probably also override GetStepSizeInternal.
            </summary>
            <param name="experiment">Information about MS experiment.</param>
            <param name="info">Info about spectrum.</param>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.FindMassRange(System.Double)">
            <summary>
            Finds the mass range in which "xValue" lies; if it does not lie within
            any range we return null.
            </summary>
            <param name="xValue">Mass for which to get range.</param>
            <returns>The mass range.</returns>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.IsMrmMiSpectrumType(System.Object)">
            <summary>
            Check if spectrum data is a MRM or MI type
            </summary>
            <param name="data">spectrum data</param>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.Save(Sciex.FMan.FManMassSpectrum,System.String,System.String,System.String)">
            <summary>
            Saves the data to the text file whose name is provided. If both "xName" and
            "yName" are non-null, a header line containing these names is written. If 
            "filePath" is null the user is prompted for the filename.
            The data must be of type MRM or MI
            </summary>
            <param name="data">Data to save.</param>
            <param name="xName">X-values name (or null).</param>
            <param name="yName">Y-values name (or null).</param>
            <param name="filePath">File path for text file.</param>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.Save(Sciex.FMan.FManMassSpectrum,Clearcore2.Data.CommonInterfaces.IPeakList,System.Double,System.String,System.String,System.String)">
            <summary>
            Saves the provided peak list to the text file. If "filePath" is null the user
            is prompted for the name of the text file. If the IPeakList object also 
            implements ISpectralPeakList and/or IPeakListExtra information obtained from
            those interfaces is also saved.
            The data must be of type MRM or MI
            </summary>
            <param name="peaks">Peak list to save.</param>
            <param name="threshold">Peaks with apex-Y smaller than threshold are not saved.</param>
            <param name="xName">Name of x-values or null for default name.</param>
            <param name="filePath">File path for text file.</param>
            <param name="yName">Name of y-values or null for default name.</param>
            <param name="data">Data to save.</param>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.GetHeader(Sciex.FMan.FManMassSpectrum,Clearcore2.Data.CommonInterfaces.IPeakListExtra,System.String,System.String)">
            <summary>
            Returns the file header when saving a peak list.
            </summary>
            <param name="extraPeaks">Another interface of peaks (or null).</param>
            <param name="xName">Name of x-values or null for default name.</param>
            <param name="yName">Name of y-values or null for default name.</param>
            <param name="data">Data to save.</param>
            <returns>The file header.</returns>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.GetPeakLine(Sciex.FMan.FManMassSpectrum,Clearcore2.Data.CommonInterfaces.IPeakListExtra,System.Int32)">
            <summary>
            Returns the line for writing to the text file for the provided peak index.
            </summary>
            <param name="extraPeaks">Another interface of peaks (or null).</param>
            <param name="index">Peak index.</param>
            <param name="data">Data to save.</param>
            <returns>The line to write.</returns>
        </member>
        <member name="M:Sciex.FMan.FManMassSpectrum.Cleanup(System.IO.StreamWriter,System.String)">
            <summary>
            Utility routine which performs cleanup if there is an exception while
            writing to the text file.
            </summary>
            <param name="writer">Object used to write..</param>
            <param name="filePath">Path to file.</param>
        </member>
        <member name="P:Sciex.FMan.FManMassSpectrum.Experiment">
            <summary>
            Returns the MS experiment associated with this spectrum.
            </summary>
        </member>
        <member name="P:Sciex.FMan.FManMassSpectrum.Info">
            <summary>
            This method hides the "Info" method of our base class. We do this 
            because we return a subclass of FManDataInfo, namely MassSpectrumInfo.
            This object holds information about our spectrum.
            </summary>
        </member>
        <member name="P:Sciex.FMan.FManMassSpectrum.ConstantStepSizeInternal">
            <summary>
            Returns whether or not we have a constant step size.
            </summary>
        </member>
        <member name="P:Sciex.FMan.FManMassSpectrum.HaveDataPointNames">
            <summary>
            Returns true if we have data point names. This is the case iff we have
            SIM or MRM data.
            </summary>
        </member>
        <member name="T:Sciex.FMan.FManChromatogram">
            <summary>
            This subclass of FManXYData is used to create a chromatogram. It is
            POSSIBLE to create instances of this class directly, however this
            is not in general recommended. This class implements TIC, BPC and
            XIC calculations by iterating over all FManMassSpectrum objects in
            a given period/experiment. This works, but is much slower than
            retrieving "cached" information for TICs and BPCs. So, it is strongly
            recommended for objects implementing IFMan to create subclasses of
            FManChromatogram which override SetToTIC() etc.
            </summary>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.#ctor(Sciex.FMan.IFMan)">
            <summary>
            Constructor.
            </summary>
            <param name="fMan">Used to get info, etc.</param>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.#ctor(Sciex.FMan.FManChromatogram)">
            <summary>
            Copy constructor.
            </summary>
            <param name="toCopy">The object to copy.</param>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used when de-serialising.
            </summary>
            <param name="info">Object with data.</param>
            <param name="context">Not used.</param>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialises this object.
            </summary>
            <param name="info">Object which holds data to write.</param>
            <param name="context">Not used.</param>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.Clone">
            <summary>
            Returns a copy of this object.
            </summary>
            <returns>The copy.</returns>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.SetToTIC(Sciex.FMan.FManSample,System.Int32,System.Int32)">
            <summary>
            Sets our XY data to a TIC for the specified sample and experiment.
            </summary>
            It is *strongly* recommended that subclasses be created and that this
            method (or SetToSpecificTic) be overridden. Our implementation is not efficient.
            <param name="sample">Sample for TIC.</param>
            <param name="period">Period index or -1 for all.</param>
            <param name="experiment">Experiment index or -1 for all.</param>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.SetToSpecificTic(Sciex.FMan.FManSample,System.Int32,System.Int32)">
            <summary>
            Sets our XY data to a TIC for the specified period and experiment where it is 
            guaranteed that neither the period nor experiment are "-1" (to represent all).
            This method is called by SetToTIC for the "-1" or "all" case multiple times to
            perform any required summing. This method is not efficient, so subclasses which
            have a faster way of calculating a single experiment TIC should override this
            method. Subclasses which also have a faster way of calculating multiple-period
            or multiple-experiment TICs should override SetToTIC.
            </summary>
            <param name="sample">Sample for TIC.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.SetToXIC(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            Sets our XY data to a scan XIC for the specified sample, experiment and
            mass range.
            </summary>
            It is *strongly* recommended that subclasses be created and that this
            method be overridden. Our implementation is not efficient.
            <param name="sample">Sample for XIC.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="startMass">Start mass for XIC.</param>
            <param name="endMass">End mass for XIC.</param>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.SetToXIC(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Sets our XY data to a scan XIC for the specified sample, experiment and
            mass range.
            </summary>
            It is *strongly* recommended that subclasses be created and that this
            method be overridden. Our implementation is not efficient.
            <param name="sample">Sample for XIC.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="startMass">Start mass for XIC.</param>
            <param name="endMass">End mass for XIC.</param>
            <param name="startCycle">Start cycle.</param>
            <param name="endCycle">End cycle or -1 for all.</param>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.ValidateXIC(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            This method throws a UserException if we cannot calculate a valid XIC for the sample.
            </summary>
            <param name="sample">Sample for XIC.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="startMass">Start mass.</param>
            <param name="endMass">End mass.</param>
            <param name="startCycle">Start cycle.</param>
            <param name="endCycle">End cycle or -1 for all.</param>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.Initialise(Sciex.FMan.ChromatogramHelperData)">
            <summary>
            This method is called to perform initialisation when a "ChromatogramHelperData"
            object is available. 
            </summary>
            <param name="chd">Used to initialise this chromatogram.</param>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.SetToIndexedXIC(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets our XY data to a so-called indexed XIC for the specified sample, 
            experiment and mass range. This is used with SIM and MRM data.
            </summary>
            It is *strongly* recommended that subclasses be created and that this
            method be overridden. Our implementation is not efficient.
            <param name="sample">Sample for XIC.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="massIndex">Index of mass range.</param>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.ValidateIndexedXIC(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32)">
            <summary>
            This method throws a UserException if we cannot calculate a valid indexed XIC
            for the sample.
            </summary>
            <param name="sample">Sample for XIC.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="massIndex">Index of mass range.</param>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.SetToBPC(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Double)">
            <summary>c
            Sets our XY data to a base peak chromatogram for the specified sample and
            experiment using the provided mass tolerance.
            </summary>
            It is *strongly* recommended that subclasses be created and that this
            method be overridden. Our implementation is not efficient.
            <param name="sample">Sample for BPC.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="massTolerance">Mass tolerance.</param>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.SetToBPC(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Double,System.Double[],System.Double[],System.Int32,System.Int32)">
            <summary>
            Sets our XY data to a base peak chromatogram for the specified sample and
            experiment using the provided mass tolerance.
            </summary>
            It is *strongly* recommended that subclasses be created and that this
            method be overridden. Our implementation is not efficient.
            <param name="sample">Sample for BPC.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="massTolerance">Mass tolerance.</param>
            <param name="startMasses">Array of starting masses or null for default range.</param>
            <param name="endMasses">Array of ending masses or null for default range.</param>
            <param name="startCycle">Start cycle.</param>
            <param name="endCycle">End cycle or -1 for all.</param>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.ValidateCycleRange(Sciex.FMan.MSExperiment,System.Int32,System.Int32)">
            <summary>
            This method throws a UserException if the cycle range is invalid.
            </summary>
            <param name="msExpt">MSExperiment object.</param>
            <param name="startCycle">Start cycle.</param>
            <param name="endCycle">End cycle or -1 for all.</param>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.SetToADC(Sciex.FMan.FManSample,System.Int32)">
            <summary>
            Sets our XY data to an ADC chromatogram for the specified sample and
            channnel index.
            </summary>
            Note that this method itself just raises an exception -- it must be 
            overriden by subclasses if ADC data is supported.
            <param name="sample">Sample for ADC.</param>
            <param name="channelIndex">ADC channel index.</param>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.VerifyADC(Sciex.FMan.FManSample,System.Int32)">
            <summary>
            This routine throws a UserException if channelIndex is out of range.
            </summary>
            <param name="sample">Sample for ADC.</param>
            <param name="channelIndex">ADC channel index.</param>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.SetToTWC(Sciex.FMan.FManSample)">
            <summary>
            Sets our XY data to a diode array total wavelength chromatogram for the specified 
            sample.
            </summary>
            Note that this method itself just raises an exception -- it must be overridden
            by subclasses if DAD data is supported.
            <param name="sample">Sample for TWC.</param>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.ValidateTWC(Sciex.FMan.FManSample)">
            <summary>
            This method throws a UserException if we cannot calculate a valid TWC for the sample.
            </summary>
            <param name="sample">Sample for TWC.</param>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.SetToXWC(Sciex.FMan.FManSample,System.Double,System.Double)">
            <summary>
            Sets our XY data to a diode array extracted wavelength chromatogram for the 
            specified sample and wavelength range.
            </summary>
            Note that this method itself just raises an exception -- it must be overridden
            by subclasses if DAD data is supported.
            <param name="sample">Sample for XWC.</param>
            <param name="startWavelength">Starting wavelength.</param>
            <param name="endWavelength">Ending wavelength.</param>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.ValidateXWC(Sciex.FMan.FManSample,System.Double,System.Double)">
            <summary>
            This method throws a UserException if we cannot calculate a valid XWC for the sample.
            </summary>
            <param name="sample">Sample for XWC.</param>
            <param name="startWavelength">Start wavelength.</param>
            <param name="endWavelength">End wavelength.</param>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.RealTimeUpdate">
            <summary>
            This method is called to update this chromatogram for the case in which new data
            is available since it was originally calculated.
            </summary>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.GetStepSizeAtIndex(System.Int32)">
            <summary>
            Returns the step size for the given point.
            </summary>
            <param name="index">Data point index.</param>
            <returns>Step size.</returns>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.GetStepSizeInternal(System.Double)">
            <summary>
            Returns our step size.
            </summary>
            <param name="xValue">X-value at which to get step.</param>
            <returns>The step size.</returns>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.GetTimeFromXValue(System.Double)">
            <summary>
            Given an x-value, this method returns the corresponding time (in minutes). In most
            cases the xValue will be returned directly, however if the XValueToTimeSlope property
            is set to a non-zero value this will be:<para></para>
            	xValue * XValueToTimeSlope + XValueToTimeIntercept<para></para>
            otherwise just:<para></para>
            	xValue + XValueToTimeIntercept<para></para>
            This can be useful for a few reasons. One is to use the intercept to shift a UV
            chromatogram so that it lines-up with MS data (or vice versa). Another is to allow 
            the x-axis to display cycle-dependent parameters. This method allows the actual time 
            to be obtained from an x-value so that the corresonding MS cycle can be determined.<para></para>
            One exception to the above description is that for non-MS data if an offset has been
            applied but no slope factor, we return the x-value as-is. The reason is that we assume
            the chromatogram has been offset to align with MS data and we want the adjusted time in
            this case.
            </summary>
            <param name="xValue">Chromatogram's x-value.</param>
            <returns>Time in minutes.</returns>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.GetTimeFromCDP(System.Double)">
            <summary>
            Returns the time using cycle-dependent-parameter information. If this is not 
            applicable we return double.NaN. In the case that the cycle time is constant
            for the entire experiment (the usual case) this method is identical to using
            "fXToTimeSlope" and "fXToTimeIntercept" to calculate the time. However if the
            cycle time is not constant (IDA) this method gives an accurate value for the 
            time whereas the other method gives a linear approximation.
            </summary>
            <param name="xValue">Potential CDP value.</param>
            <returns>Time or double.NaN for N/A.</returns>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.GetXValueFromTime(System.Double)">
            <summary>
            This method is the inverse of "GetTimeFromXValue" - see that method for details.
            </summary>
            <param name="time">Time in minutes.</param>
            <returns>Chromatogram's x-value.</returns>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.GetTransitionXValues">
            <summary>
            Returns an array of so-called "transition" points. In this context, this
            is the starting time of each period other than the first. The idea is
            to indicate "breaks" in the data so that it can be plotted properly.
            </summary>
            <returns>Period starts, if any, otherwise null.</returns>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.GetCategory(System.Int32)">
            <summary>
            Returns the "category" for the given data point. Note that this method
            should only be called if HasDataCategories returns true - see that method
            for additional details.
            </summary>
            <param name="index">Index of data point.</param>
            <returns>Category for data point.</returns>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.Initialise(Sciex.FMan.FManSample,Sciex.FMan.MSMethod,Sciex.FMan.ChromatogramInfo,System.String,System.String,System.String,System.Double[],System.Double[])">
            <summary>
            This method MUST be called by subclasses so that we can perform 
            remaining work which needs to be done after a new chromatogram is
            created. Although not absolutely required, for consistency it is 
            strongly recommended that the array of times be in minutes; if this
            is not the case, subclasses should call SetAxisNamesAndUnits() to
            set the x-units since we otherwise assume minutes.
            </summary>
            <param name="sample">Sample identifier.</param>
            <param name="method">MSMethod object.</param>
            <param name="info">Chromatogram info.</param>
            <param name="shortName">Short description of data.</param>
            <param name="longName">Long description of data.</param>
            <param name="id">ID.</param>
            <param name="times">Array of retention times.</param>
            <param name="yValues">Array of intensities.</param>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.AdjustTimesAndXNameForCDP(Sciex.FMan.FManSample,Sciex.FMan.MSMethod,Sciex.FMan.ChromatogramInfo,System.Double[])">
            <summary>
            This method modifies "times" to account for the first cycle- dependent parameter. 
            If we have no such parameter this method does nothing.
            </summary>
            <param name="sample">Sample identifier.</param>
            <param name="method">MSMethod object.</param>
            <param name="info">Chromatogram info.</param>
            <param name="times">Times to potentially adjust.</param>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.AdjustTimesAndXNameForCDP(System.Double[],System.Double,System.Double,System.Int32,Sciex.FMan.InstrumentParameter)">
            <summary>
            This utility method modifies "times" to account for the specified cycle-
            dependent parameter. In addition to adjusting the times we set the 
            "XValueToTimeSlope" and "XValueToTimeIntercept" properties appropriately and
            set the x-axis name. If the specified parameter is null this method does 
            nothing.
            </summary>
            <param name="times">Times to potentially adjust.</param>
            <param name="exptStartTime">Start time for experiment.</param>
            <param name="exptEndTime">End time for experiment.</param>
            <param name="exptCycles">Number of cycles for experiment.</param>
            <param name="parameter">Parameter or null.</param>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.GetStepSize(System.Double[],Sciex.FMan.ChromatogramInfo,System.Boolean@)">
            <summary>
            This routine returns our step size. NOTE: We calculate
            the step size as the maximum difference between any two data points.
            It doesn't work to look at the cycle time from the method for IDA
            data (since the time can vary considerably from the expected value).
            </summary>
            <param name="times">Array of retention times.</param>
            <param name="info">Chromatogram info.</param>
            <param name="constantStep">Is step constant?</param>
            <returns>The step size.</returns>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.SetPeriodTransitions(Sciex.FMan.MSMethod,Sciex.FMan.ChromatogramInfo)">
            <summary>
            This routine sets our "fPeriodTransitions" instance variable. We
            populate it with the start times for all periods (other than the
            first) to indicate transitions or "breaks" in the data.
            </summary>
            <param name="method">The mass spec method info.</param>
            <param name="info">Info about this chromatogram.</param>
        </member>
        <member name="M:Sciex.FMan.FManChromatogram.CalculateBPCCategories">
            <summary>
            This routine calculates our so-called BPC "cateogories". The
            categories represent changes in the base peak mass (using our
            mass tolerance) which ultimately are reflected as colour changes
            in graphs. We arbitrarily set the category to "0" for the first
            data point and then alternate between 0 and 1 when the mass
            changes.
            </summary>
        </member>
        <member name="P:Sciex.FMan.FManChromatogram.Info">
            <summary>
            This method hides the "Info" method of our base class. We do this 
            because we return a subclass of FManDataInfo, namely ChromatogramInfo.
            This object holds information about our chromatogram.
            </summary>
        </member>
        <member name="P:Sciex.FMan.FManChromatogram.BPCMassTolerance">
            <summary>
            Sets the mass tolerance for the BPC calculation. This affects our return 
            value from "GetCategory" and (ultimately) affects colour changes in graphs. 
            This property is only used if our chromatogram type is "kBPC" and should not 
            be called otherwise. To retrieve the current tolerance use Info.BPCMassTolerance.
            </summary>
        </member>
        <member name="P:Sciex.FMan.FManChromatogram.ConstantStepSizeInternal">
            <summary>
            Returns true: We assume that we always DO have a constant step size.
            Subclasses can override this if needed.
            </summary>
        </member>
        <member name="P:Sciex.FMan.FManChromatogram.XValueToTimeSlope">
            <summary>
            Gets or sets a slope which is used to convert our x-values to actual
            times for use by the GetTimeFromXValue() method, however if the set value
            is 0.0 it is not used. See GetTimeFromXValue for why this is useful.
            </summary>
        </member>
        <member name="P:Sciex.FMan.FManChromatogram.XValueToTimeIntercept">
            <summary>
            Gets or sets an offset which is used to convert our x-values to actual
            tines for use by the GetTimeForXValue() method - see that method for why
            this is useful.
            </summary>
        </member>
        <member name="P:Sciex.FMan.FManChromatogram.HasDataCategories">
            <summary>
            Returns whether we have so-called data point "categories". This is an 
            integral identifier for each data point. In this context, this is used
            to indicate changes in the base peak mass for a BPC.
            </summary>
        </member>
        <member name="T:Sciex.FMan.RecalibrateSampleHelper">
            <summary>
            This class helps to implement recalibration of a sample by determining which
            cycle ranges of which experiments need to be updated. Subclasses must override
            the RecalibrateExperiment() method.
            </summary>
        </member>
        <member name="M:Sciex.FMan.RecalibrateSampleHelper.#ctor(Sciex.FMan.IFMan)">
            <summary>
            Constructor.
            </summary>
            <param name="fman">Owning IFMan.</param>
        </member>
        <member name="M:Sciex.FMan.RecalibrateSampleHelper.AllCalibrationsSame(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This method returns true iff all calibrations for the specified range are equal.
            If we have at least two different ones we return false.
            </summary>
            <param name="sample">Sample.</param>
            <param name="period">Period index or -1 for all.</param>
            <param name="experiment">Experiment index or -1 for all.</param>
            <param name="startCycle">Start cycle or -1 for all.</param>
            <param name="endCycle">End cycle.</param>
            <returns>True iff all requested calibrations are equal.</returns>
        </member>
        <member name="M:Sciex.FMan.RecalibrateSampleHelper.RecalibrateExperiment(Sciex.FMan.Calibration,Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32,Sciex.FMan.Calibration,System.Boolean)">
            <summary>
            Subclasses must override this method to recalibrate the specified cycle range
            of the provided period. Note that "period", "experiment", "startCycle" and "endCycle" 
            will always be set to actual values and not -1 (which indicates "all" in some 
            other situations).
            </summary>
            <param name="newCalibration">New calibration.</param>
            <param name="sample">Sample.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="startCycle">First cycle to recalibrate.</param>
            <param name="endCycle">Last cycle to recalibrate.</param>
            <param name="oldCalibration">Old calibration.</param>
            <param name="useRelativeCalibration">True to use relative calibration.</param>
        </member>
        <member name="M:Sciex.FMan.RecalibrateSampleHelper.RecalibrateSample(Sciex.FMan.Calibration,Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32,Sciex.FMan.Calibration,System.Boolean)">
            <summary>
            This method is overridden to help support the case in which a recalibration is
            persisted. We determine which experiments need to be recalibrated and call our
            virtual RecalibrateExperiment for each one separately. Subclasses which override
            CanRecalibrateSample to return true must either override this method or the
            RecalibrateExperiment method.
            </summary>
            <param name="newCalibration">New calibration.</param>
            <param name="sample">Sample.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index or -1 for all.</param>
            <param name="startCycle">First cycle to recalibrate or -1 for all.</param>
            <param name="endCycle">Last cycle to recalibrate or -1 for all.</param>
            <param name="oldCalibration">Old calibration.</param>
            <param name="useRelativeCalibration">True to use relative calibration.</param>
        </member>
        <member name="M:Sciex.FMan.RecalibrateSampleHelper.RecalibrateSample(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,Sciex.FMan.Calibration[])">
            <summary>
            Recalibrates the specified sample using the provided calibrations. In some cases this
            method may be more efficient than calling the overloaded method multiple times. Subclasses
            which support recalibration should override this method or RecalibrateExperiment(FManSample,
            int, int, int, Calibration[]) (the single experiment version) if they have an efficient
            way to write multiple calibrations at one time.
            </summary>
            <param name="sample">Sample.</param>
            <param name="period">Period (cannot be -1).</param>
            <param name="experiment">Experiment index or -1 for all.</param>
            <param name="startCycle">Start cycle (often 0).</param>
            <param name="calibrations">New calibrations.</param>
        </member>
        <member name="M:Sciex.FMan.RecalibrateSampleHelper.RecalibrateExperiment(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,Sciex.FMan.Calibration[])">
            <summary>
            Recalibrates the specified sample and experiment using the provided calibrations. Subclasses
            which support recalibration should override this method or RecalibrateSample(FManSample,
            int, int, int, Calibration[]) (the multiple experiment version) if they have an efficient
            way to write multiple calibrations at one time.
            </summary>
            <param name="sample">Sample.</param>
            <param name="period">Period (cannot be -1).</param>
            <param name="experiment">Experiment index (never -1).</param>
            <param name="startCycle">Start cycle (often 0).</param>
            <param name="calibrations">New calibrations.</param>
        </member>
        <member name="M:Sciex.FMan.RecalibrateSampleHelper.RecalibratePeriod(Sciex.FMan.Calibration,Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32,Sciex.FMan.Calibration,System.Boolean)">
            <summary>
            Calls the virtual RecalibrateExperiment() method for each experiment needing to
            be recalibrated for the specified period.
            </summary>
            <param name="newCalibration">New calibration.</param>
            <param name="sample">Sample.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index or -1 for all.</param>
            <param name="startCycle">First cycle to recalibrate or -1 for all.</param>
            <param name="endCycle">Last cycle to recalibrate or -1 for all.</param>
            <param name="oldCalibration">Old calibration.</param>
            <param name="useRelativeCalibration">True to use relative calibration.</param>
        </member>
        <member name="M:Sciex.FMan.RecalibrateSampleHelper.GetPeriodRange(Sciex.FMan.FManSample,System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Returns the period range. If "period" is -1 then this is the actual range
            from 0 to the number of periods (minus one), otherwise it is the period range
            as-is.
            </summary>
            <param name="sample">Sample.</param>
            <param name="period">Period index or -1.</param>
            <param name="startPeriod">Set to starting period index.</param>
            <param name="endPeriod">Set to ending period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="startCycle">Starting cycle index.</param>
            <param name="endCycle">Ending cycle index.</param>
        </member>
        <member name="M:Sciex.FMan.RecalibrateSampleHelper.GetExperimentRange(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Returns the experiment range. If "experiment" is -1 this is the actual range from
            0 to the number of experiments (minus one) for the period, otherwise it is the
            experiment range as-is.
            </summary>
            <param name="sample">Sample.</param>
            <param name="period">Period index (NOT -1).</param>
            <param name="experiment">Experiment index.</param>
            <param name="startExpt">Set to starting experiment index.</param>
            <param name="endExpt">Set to ending experiment index.</param>
        </member>
        <member name="M:Sciex.FMan.RecalibrateSampleHelper.GetCycleRange(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Returns the cycle range. If "startCycle" is -1 then this is the actual range from
            0 to the number of cycles (minus one) for the experiment, otherwise it is the
            cycle range as-is.
            </summary>
            <param name="sample">Sample.</param>
            <param name="period">Period index (not -1).</param>
            <param name="experiment">Experiment index (not -1).</param>
            <param name="startCycle">Starting cycle (or -1).</param>
            <param name="endCycle">Ending cycle (or -1).</param>
            <param name="actualStartCycle">Set to actual starting cycle.</param>
            <param name="actualEndCycle">Set to actual ending cycle.</param>
        </member>
        <member name="P:Sciex.FMan.RecalibrateSampleHelper.FMan">
            <summary>
            Returns our IFMan.
            </summary>
        </member>
        <member name="T:Sciex.FMan.ChromatogramHelper">
            <summary>
            This class is a helper used for calculating TICs, XICs and BPCs and is
            used by the FManChromatogram class - most callers will not need to use
            this class directly. As described in the FManChromatogram class, it is
            strongly recommended that subclasses of FManChromatogram be created whenever
            possible and that they override SetToTIC(), etc. The reason is that the
            method used here to calculate the chromatograms is not at all efficient.
            This is especially true for TICs and BPCs if previously cached information
            exists, but is also true of XICs since we have the overhead of populating
            an FManMassSpectrum object for each spectrum. It is also possible to use
            this class obtain only the descriptions of a chromatogram, as opposed to
            also performing the actual calculation.
            </summary>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelper.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelper.#ctor(System.Boolean)">
            <summary>
            Constructor. If calculate is true then the chromatram is calculated in the usual
            way. If false, the calculation of the actual masses and intensities is NOT
            performed - but the Description and Info properties may still be accessed.
            </summary>
            <param name="calculate">Perform actual calculations?</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelper.SetTIC(Sciex.FMan.IFMan,Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns an object with TIC information. Note that this method is not very efficient: 
            We iterate over all spectra in the period/experiment - it would be much better to use 
            cached information if available (subclasses of FMANChromatogram should be created in 
            this case instead of using this method).
            </summary>
            <param name="fman">Used to get spectra.</param>
            <param name="sample">Sample to process.</param>
            <param name="period">Period index (or -1 for all).</param>
            <param name="experiment">Experiment index (or -1 for all).</param>
            <param name="startCycle">Start cycle.</param>
            <param name="endCycle">End cycle or -1 for all.</param>
            <returns>Data object with TIC.</returns>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelper.SetScanXIC(Sciex.FMan.IFMan,Sciex.FMan.FManSample,System.Int32,System.Int32,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Returns an object with XIC information. Note that this method is not very efficient: 
            We iterate over all spectra in the period/experiment - it would be much better to use 
            lower-level data access if possible (subclasses of FMANChromatogram should be created 
            in this case instead of using this method).
            </summary>
            <param name="fman">Used to get spectra.</param>
            <param name="sample">Sample to process.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="startMass">Start mass of XIC.</param>
            <param name="endMass">End mass of XIC.</param>
            <param name="startCycle">Start cycle.</param>
            <param name="endCycle">End cycle or -1 for all.</param>
            <returns>Data object with XIC.</returns>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelper.SetScanXICs(Sciex.FMan.IFMan,Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32,System.Double[],System.Double[])">
            <summary>
            Returns an array of objects with XIC information. Using this method is more efficient
            than making multiple calls to SetScanXIC, however it would still be more efficient too
            use lower-level data access if possible. Note that it is possible to limit the time 
            range of the calculation by specifying the cycle range - however if startCycle is
            greater than endCycle the full range is used.
            </summary>
            <param name="fman">Used to get spectra.</param>
            <param name="sample">Sample to process.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="startCycle">Starting cycle (if used).</param>
            <param name="endCycle">Ending cycle (if used).</param>
            <param name="startMasses">Start masses of XICs.</param>
            <param name="endMasses">End masses of XICs.</param>
            <returns>Data object with XIC.</returns>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelper.SetIndexedXIC(Sciex.FMan.IFMan,Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns an object with "indexed" XIC information. Note that this method is not very 
            efficient: We iterate over all spectra in the period/experiment - it would be better 
            to use lower-level data access if possible (subclasses of FMANChromatogram should be 
            created in this case instead of using this method).
            </summary>
            <param name="fman">Used to get spectra.</param>
            <param name="sample">Sample to process.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="startCycle">Start cycle.</param>
            <param name="endCycle">End cycle or -1 for all.</param>
            <param name="xicIndex">Index of XIC.</param>
            <returns>Data object with XIC.</returns>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelper.SetIndexedXICs(Sciex.FMan.IFMan,Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32[])">
            <summary>
            This method is similar to SetScanXICs except that indexed (MRM or SIM)
            XICs are calculated rather than full-scan XICs - see that method for details.
            </summary>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelper.SetBPC(Sciex.FMan.IFMan,Sciex.FMan.FManSample,System.Int32,System.Int32,System.Double)">
            <summary>
            Returns an object with BPC information. Note that this method is not very efficient: We 
            iterate over all spectra in the period/experiment - it would be much better to use cached 
            information if available (subclasses of FMANChromatogram should be created in this case 
            instead of using this method).
            </summary>
            <param name="fman">Used to get spectra.</param>
            <param name="sample">Sample to process.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="massTolerance">Mass tolerance for BPC.</param>
            <returns>Data object with BPC.</returns>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelper.SetBPC(Sciex.FMan.IFMan,Sciex.FMan.FManSample,System.Int32,System.Int32,System.Double,System.Double[],System.Double[],System.Int32,System.Int32)">
            <summary>
            Returns an object with BPC information. Note that this method is not very efficient: We 
            iterate over all spectra in the period/experiment - it would be much better to use cached 
            information if available (subclasses of FMANChromatogram should be created in this case 
            instead of using this method). If "startMasses" and "endMasses" are null the entire mass
            range is used; otherwise just the union of these mass ranges. Note that it is possible to 
            limit the time range of the calculation by specifying the cycle range - however if startCycle 
            is greater than endCycle the full range is used.
            </summary>
            <param name="fman">Used to get spectra.</param>
            <param name="sample">Sample to process.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="massTolerance">Mass tolerance for BPC.</param>
            <param name="startMasses">Array of starting masses.</param>
            <param name="endMasses">Array of ending masses.</param>
            <param name="startCycle">Starting cycle (if used).</param>
            <param name="endCycle">Ending cycle (if used).</param>
            <returns>Data object with BPC.</returns>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelper.GetAllPeriodsTic(Sciex.FMan.IFMan,Sciex.FMan.FManSample)">
            <summary>
            This method calculates a multiple-period TIC by creating a new chromatogram
            for each period and summing the result.
            </summary>
            <param name="fman">FMan object used to create single-experiment chromatograms.</param>
            <param name="sample">Sample for TIC.</param>
            <returns>Object with TIC information.</returns>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelper.GetAllExperimentsTic(Sciex.FMan.IFMan,Sciex.FMan.FManSample,System.Int32)">
            <summary>
            This method calculates a multiple-experiment TIC for a single period by 
            creating a new chromatogram for each experiment and summing the result.
            </summary>
            <param name="fman">FMan object used to create single-experiment chromatograms.</param>
            <param name="sample">Sample for TIC.</param>
            <param name="period">Period index.</param>
            <returns>Object with TIC information.</returns>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelper.GetTic(Sciex.FMan.IFMan,Sciex.FMan.FManSample,System.Int32,System.Int32,Sciex.FMan.FManChromatogram[],System.Boolean)">
            <summary>
            Given a collection of chromatograms, returns an information object representing
            the summed result.
            </summary>
            <param name="fman">FMan object.</param>
            <param name="sample">Sample for TIC.</param>
            <param name="period">Period index (or -1 for all).</param>
            <param name="experiment">Experiment index (or -1 for all).</param>
            <param name="chros">List of chromatograms to sum.</param>
            <param name="samePeriod">All Tics in same period as one another?</param>
            <returns>Object with TIC information.</returns>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelper.GetSummationTolerance(Sciex.FMan.FManChromatogram[])">
            <summary>
            Given a list of chromatograms returns a tolerance which is suitable to
            use for summing them together. We use the smallest non-zero step 
            existing in any of the data sets.
            </summary>
            <param name="chros">Chromatograms to sum.</param>
            <returns>Step size to use.</returns>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelper.Init(Sciex.FMan.IFMan,Sciex.FMan.FManSample,System.Int32,System.Int32,Sciex.FMan.ChromatogramHelper.ChroType,System.Int32)">
            <summary>
            Initialises this object.
            </summary>
            <param name="fman">Used to get spectra.</param>
            <param name="sample">Sample to process.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="chroType">Type of chromatogram to (soon) create.</param>
            <param name="numChromatograms">Total number of chromatograms.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelper.SetSpectrumStartAndStopMasses(System.Double[],System.Double[])">
            <summary>
            This method sets "fSpectrumStartMass" to the smallest value in "startMasses" and
            "fSpectrumEndMass" to the largest value in "endMasses". The idea is that when
            requesting a spectrum for each cycle (in the main Calculate loop) we can restrict
            the mass range requested to that required. In some cases this can speed the 
            retrieval of the data.
            </summary>
            <param name="startMasses">Start masses for XIC or BPC.</param>
            <param name="endMasses">End masses for XIC or BPC.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelper.CreateSpectrumOrIntensitySumGetter(Sciex.FMan.IFMan,Sciex.FMan.FManSample,System.Int32,System.Int32)">
            <summary>
            Creates "fSpectrum" unless we are calculating an XIC and an optimised way or doing
            so is supported by "fman" - in which case we create "fGetIntensitySum".
            </summary>
            <param name="fman">Used to get spectra.</param>
            <param name="sample">Sample to process.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelper.SetExperimentRange(System.Int32,System.Int32)">
            <summary>
            Sets the period and experiment range which we will use. If "period"
            and "experiment" are both non-negative we just use them directly;
            otherwise we use all available. This method also performs error
            checking on the period and experiment.
            </summary>
            <param name="period">Period number.</param>
            <param name="experiment">Experiment number.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelper.Calculate(Sciex.FMan.IFMan,Sciex.FMan.FManSample,System.Int32,System.Int32)">
            <summary>
            Calculates our TIC, BPC or XIC if needed.
            </summary>
            <param name="fman">Used to get spectra.</param>
            <param name="sample">Sample to process.</param>
            <param name="startCycle">Starting cycle (if used).</param>
            <param name="endCycle">Ending cycle (if used).</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelper.SetCycleRange(System.Int32,System.Int32)">
            <summary>
            This routine sets "fUseCycleRange" true iff startCycle is less than or equal to
            endCycle and stores the range. We also perform error checking on the range.
            </summary>
            <param name="startCycle">Start cycle (if used).</param>
            <param name="endCycle">End cycle (if used).</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelper.AllocateArrays">
            <summary>
            Asks each of our data objects to allocate the space required for the
            (x, y) values.
            </summary>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelper.CalculateLoop(Sciex.FMan.IFMan,Sciex.FMan.FManSample)">
            <summary>
            Calculates our TIC, BPC or XIC.
            </summary>
            <param name="fman">Used to get spectra.</param>
            <param name="sample">Sample to process.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelper.SetArrayValues(Sciex.FMan.IFMan,Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the value at "chroIndex" in each of our chromatograms.
            </summary>
            <param name="fman">Used to get spectra.</param>
            <param name="sample">Sample.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="cycle">Cycle index.</param>
            <param name="chroIndex">Index of current point in chromatograms.</param>
            <param name="firstExperiment">Is this first experiment for cycle?</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelper.FinishCalculate">
            <summary>
            Calls the FinishCalculate method on each of our ChromatogramHelperData objects.
            </summary>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelper.SetDescriptions(Sciex.FMan.IFMan,Sciex.FMan.FManSample)">
            <summary>
            Before calculating our chromatograms, this method is called to create set the
            their descriptions.
            </summary>
            <param name="fman">Used to get sample name.</param>
            <param name="sample">Sample to process.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelper.GetExperimentString">
            <summary>
            Returns a string describing the period and experiment for our description
            string. This string will be empty if we only have one period/experiment or
            if we are associated with all periods and experiments.
            </summary>
            <returns>Experiment description.</returns>
        </member>
        <member name="P:Sciex.FMan.ChromatogramHelper.Progress">
            <summary>
            Sets the progress delegate; if this is not null it will be called during calculation.
            </summary>
        </member>
        <member name="T:Sciex.FMan.ChromatogramHelper.ChroType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Sciex.FMan.ChromatogramHelper.ChroType.kTIC">
            <summary>
            
            </summary>
        </member>
        <member name="F:Sciex.FMan.ChromatogramHelper.ChroType.kScanXIC">
            <summary>
            
            </summary>
        </member>
        <member name="F:Sciex.FMan.ChromatogramHelper.ChroType.kIndexedXIC">
            <summary>
            
            </summary>
        </member>
        <member name="F:Sciex.FMan.ChromatogramHelper.ChroType.kBPC">
            <summary>
            
            </summary>
        </member>
        <member name="T:Sciex.FMan.XicCalculatorItem">
            <summary>
            An array of this class is used as the input to an XicCalculator object and specifies
            the mass ranges for which XICs are wanted. Each XicCalculatorItem specifies one or
            more mass ranges (if more than one range is specified the XICs for these ranges
            are calculated together). A limited time or cycle range can optionally be specified
            for each item.
            </summary>
        </member>
        <member name="M:Sciex.FMan.XicCalculatorItem.#ctor(System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            This constructor is used with a scan experiment.
            </summary>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="startMass">Start mass.</param>
            <param name="endMass">End mass.</param>
        </member>
        <member name="M:Sciex.FMan.XicCalculatorItem.#ctor(System.Int32,System.Int32,System.Double[],System.Double[])">
            <summary>
            This constructor is used with a scan experiment.
            </summary>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="startMasses">List of start masses.</param>
            <param name="endMasses">List of end masses.</param>
        </member>
        <member name="M:Sciex.FMan.XicCalculatorItem.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            This constructor is used with an 'indexed' experiment (for example MRM).
            </summary>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="massIndex">Mass index.</param>
        </member>
        <member name="M:Sciex.FMan.XicCalculatorItem.#ctor(System.Int32,System.Int32,System.Int32[])">
            <summary>
            This constructor is used with an 'indexed' experiment (for example MRM).
            </summary>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="massIndices">List of mass indices.</param>
        </member>
        <member name="M:Sciex.FMan.XicCalculatorItem.Init(System.Int32,System.Int32)">
            <summary>
            Performs common initialisation.
            </summary>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
        </member>
        <member name="M:Sciex.FMan.XicCalculatorItem.SetMassRange(System.Double,System.Double)">
            <summary>
            Sets the mass range for a scan experiment.
            </summary>
            <param name="start">Start mass.</param>
            <param name="end">End mass.</param>
        </member>
        <member name="M:Sciex.FMan.XicCalculatorItem.SetMassRanges(System.Double[],System.Double[])">
            <summary>
            Sets the mass ranges for a scan experiment.
            </summary>
            <param name="starts">List of start masses.</param>
            <param name="ends">List of end masses.</param>
        </member>
        <member name="M:Sciex.FMan.XicCalculatorItem.SetMassIndex(System.Int32)">
            <summary>
            Sets the mass index for an 'indexed' experiment.
            </summary>
            <param name="index">Mass index.</param>
        </member>
        <member name="M:Sciex.FMan.XicCalculatorItem.SetMassIndices(System.Int32[])">
            <summary>
            Sets the mass indices for an 'indexed' experiment.
            </summary>
            <param name="indices">List of mass range indices.</param>
        </member>
        <member name="M:Sciex.FMan.XicCalculatorItem.SetTimeRange(System.Double,System.Double)">
            <summary>
            Sets a limited time range (as opposed to a cycle range).
            </summary>
            <param name="start">Start time for XIC.</param>
            <param name="end">End time for XIC.</param>
        </member>
        <member name="M:Sciex.FMan.XicCalculatorItem.SetCycleRange(System.Int32,System.Int32)">
            <summary>
            Sets a limited cycle range (it is also possible to set a limited time range).
            If 'end' is less than 'start' (the default) then the entire available range
            is used.
            </summary>
            <param name="start">Start cycle.</param>
            <param name="end">End cycle or -1 for all available.</param>
        </member>
        <member name="M:Sciex.FMan.XicCalculatorItem.SetUseFullTimeRange">
            <summary>
            This method causes all cycles to be used for the XIC calculation (the default).
            </summary>
        </member>
        <member name="M:Sciex.FMan.XicCalculatorItem.GetActualCycleRange(Sciex.FMan.IFMan,Sciex.FMan.FManSample,System.Int32@,System.Int32@)">
            <summary>
            Given an IFMan and a sample, calculates the required cycle range. This will 
            depend on whether we're using a limited time or cycle range or not.
            </summary>
            <param name="fman">IFMan object.</param>
            <param name="sample">Sample for which to get range.</param>
            <param name="startCycle">Set to start cycle.</param>
            <param name="endCycle">Set to end cycle.</param>
        </member>
        <member name="P:Sciex.FMan.XicCalculatorItem.Period">
            <summary>
            Gets or sets the period index.
            </summary>
        </member>
        <member name="P:Sciex.FMan.XicCalculatorItem.Experiment">
            <summary>
            Gets or sets the experiment index.
            </summary>
        </member>
        <member name="P:Sciex.FMan.XicCalculatorItem.NumXics">
            <summary>
            Returns the number of XICs associated with this item.
            </summary>
        </member>
        <member name="P:Sciex.FMan.XicCalculatorItem.StartMasses">
            <summary>
            Returns the list of start masses - this value is null for an 'indexed' (for
            example MRM) experiment in which case the MassIndices property is used instead.
            </summary>
        </member>
        <member name="P:Sciex.FMan.XicCalculatorItem.EndMasses">
            <summary>
            Returns the list of end masses - this value is null for an 'indexed' (for
            example MRM) experiment in which case the MassIndices property is used instead.
            </summary>
        </member>
        <member name="P:Sciex.FMan.XicCalculatorItem.MassIndices">
            <summary>
            Returns the list of indicies for an 'indexed' (for example MRM) experiment - 
            this value is null for a scan experiment in which case StartMasses and
            EndMasses are used instead.
            </summary>
        </member>
        <member name="P:Sciex.FMan.XicCalculatorItem.UseTimeRange">
            <summary>
            Returns true if we are using a limited time range and the range is expressed as
            actual time and not a cycle range. In this case the StartTime and EndTime
            properties define the limited range (or define an unlimited one).
            </summary>
        </member>
        <member name="P:Sciex.FMan.XicCalculatorItem.StartTime">
            <summary>
            Returns the start time for the XIC; this value is only used if UseTimeRange
            is true.
            </summary>
        </member>
        <member name="P:Sciex.FMan.XicCalculatorItem.EndTime">
            <summary>
            Returns the end time for the XIC; this value is only used if UseTimeRange
            is true.
            </summary>
        </member>
        <member name="P:Sciex.FMan.XicCalculatorItem.StartCycle">
            <summary>
            Returns the start cycle for the XIC; this value is only used if UseTimeRange
            is false.
            </summary>
        </member>
        <member name="P:Sciex.FMan.XicCalculatorItem.EndCycle">
            <summary>
            Returns the end cycle for the XIC; this value is only used if UseTimeRange
            is false. A return value of -1 indicates to use all available cycles.
            </summary>
        </member>
        <member name="P:Sciex.FMan.XicCalculatorItem.GroupingKey">
            <summary>
            If this property is set to a non-null value then any items with the same value
            are guaranteed to be kept in the same "chunk" by the XicCalculator object.
            Since it is possible to specify multiple mass ranges for this XicCalculatorItem
            object, this is most useful for Xics from different experiments which need to be
            processed together. It can be somewhat less efficient to calculate Xics for a
            given chunk for multiple experiments, so this property should only be used if
            needed.
            </summary>
        </member>
        <member name="P:Sciex.FMan.XicCalculatorItem.Token">
            <summary>
            This field provides an object which the caller can use as desired. Since the
            XicCalculator returns XICs not in the original order supplied, this field can
            sometimes be useful for tracking this item.
            </summary>
        </member>
        <member name="T:Sciex.FMan.MSMethod">
            <summary>
            This class defines method information for an MS analysis.
            </summary>
        </member>
        <member name="M:Sciex.FMan.MSMethod.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="msInstrumentName">Name of instrument.</param>
            <param name="isMaldi">Is this a MALDI method?</param>
            <param name="isIDA">Is this an IDA method?</param>
        </member>
        <member name="M:Sciex.FMan.MSMethod.SetEqual(Sciex.FMan.MSMethod)">
            <summary>
            This method sets itself equal to the provided method by TAKING OWNERSHIP
            of the various instance variables of that method. (So if "method" is modified
            this object will be modified too since they'll share the same fields).
            </summary>
            <param name="method">Method to which we set ourself equal.</param>
        </member>
        <member name="M:Sciex.FMan.MSMethod.AddPeriod(System.Double)">
            <summary>
            Adds a new period.
            </summary>
            <param name="startTime">Starting retention time for period.</param>
        </member>
        <member name="M:Sciex.FMan.MSMethod.AddExperiment(System.Int32,Sciex.FMan.MSExperiment)">
            <summary>
            Adds a new experiment to our list. "Period" must  be within our current
            period range.
            </summary>
            <param name="period">Period index.</param>
            <param name="experiment">The experiment to add.</param>
        </member>
        <member name="M:Sciex.FMan.MSMethod.PeriodStart(System.Int32)">
            <summary>
            Returns the start time for the given period.
            </summary>
            <param name="period">Period index.</param>
            <returns>The period's start time.</returns>
        </member>
        <member name="M:Sciex.FMan.MSMethod.NumExperiments(System.Int32)">
            <summary>
            Returns the number of experiments for the given period.
            </summary>
            <param name="period">Period index.</param>
            <returns>The number of experiments.</returns>
        </member>
        <member name="M:Sciex.FMan.MSMethod.GetExperiment(System.Int32,System.Int32)">
            <summary>
            Returns the requested experiment.
            </summary>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <returns>The experiment.</returns>
        </member>
        <member name="M:Sciex.FMan.MSMethod.FindPeriod(System.Double)">
            <summary>
            Returns the period for the given retention time. If the time is before
            the first period, the first is returned; if it's after the last, the
            last is returned.
            </summary>
            <param name="time">Retention time.</param>
            <returns>Period for time.</returns>
        </member>
        <member name="M:Sciex.FMan.MSMethod.GetAllPeriodAndExperimentIndices(System.Int32@,System.Int32@)">
            <summary>
            This utility method sets both "period" and "experiment" to -1 IF this method represents 
            multiple period, multiple experiment data. Otherwise period and experiment are simplified 
            to zero as possible.
            </summary>
            <param name="period">Set to period index.</param>
            <param name="experiment">Set to experiment index.</param>
        </member>
        <member name="P:Sciex.FMan.MSMethod.InstrumentName">
            <summary>
            Returns the name of the MS instrument.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MSMethod.IsMaldi">
            <summary>
            Returns true if we definitely have MALDI data. Note that we may return false
            for QStar MALDI methods.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MSMethod.IsIDA">
            <summary>
            Returns true iff this is an information-dependent acquisition (aka
            intelligent data acquisition).
            </summary>
        </member>
        <member name="P:Sciex.FMan.MSMethod.IsScheduledMRM">
            <summary>
            Returns true iff this method uses scheduled MRM.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MSMethod.NumPeriods">
            <summary>
            Returns the number of periods.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MSMethod.ADCMethod">
            <summary>
            Returns our ADC method object. The return value will never be null, but
            the method may have an empty channel list.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MSMethod.DADMethod">
            <summary>
            Returns our diode-arrray-device method object. The return value will never
            be null, but the resulting method is only valid if its HasData property
            is true.
            </summary>
        </member>
        <member name="T:Sciex.FMan.InstrumentParameterCollection">
            <summary>
            This class holds a collection of "InstrumentParameter" objects.
            </summary>
        </member>
        <member name="M:Sciex.FMan.InstrumentParameterCollection.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Sciex.FMan.InstrumentParameterCollection.Add(Sciex.FMan.InstrumentParameter)">
            <summary>
            Adds the specified parameter to our list. It is an error if the name of the
            parameter is null or empty or if we already have a parameter with the same name.
            </summary>
            <param name="parameter">Parameter to add.</param>
        </member>
        <member name="M:Sciex.FMan.InstrumentParameterCollection.AddAll(Sciex.FMan.InstrumentParameterCollection)">
            <summary>
            This method adds all parameters from the provided collection to our list. It
            is an error if we already have a parameter with the same name. Note that we
            add the parameter as-is and not a copy since these parameters are immutable.
            </summary>
            <param name="ipc">Object from which to get parameters.</param>
        </member>
        <member name="M:Sciex.FMan.InstrumentParameterCollection.ToString">
            <summary>
            Converts our parameters to a string of the form: "Param1=Value1, Param2=Value2".
            </summary>
            <returns>The string.</returns>
        </member>
        <member name="M:Sciex.FMan.InstrumentParameterCollection.ToString(System.String)">
            <summary>
            Converts our parameters to a string of the form: "Param1=Value1, Param2=Value2".
            For numerical values the provided format string is used.
            </summary>
            <param name="format">Format for numbers.</param>
            <returns>The string.</returns>
        </member>
        <member name="M:Sciex.FMan.InstrumentParameterCollection.GetEnumerator">
            <summary>
            Returns an enumerator which is used to allow "foreach" loops.
            </summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="M:Sciex.FMan.InstrumentParameterCollection.Remove(System.String)">
            <summary>
            This method removes the parameter with the specified name. If we currently have
            no such parameter this method does nothing.
            </summary>
            <param name="name">Name of parameter to remove.</param>
        </member>
        <member name="M:Sciex.FMan.InstrumentParameterCollection.HaveIdenticalNames(Sciex.FMan.InstrumentParameterCollection)">
            <summary>
            Returns true if the provided parameter collection contains items with the same
            names as this object. Note that the actual values are not considered, just the
            "keys".
            </summary>
            <param name="ipc">Parameter collection.</param>
            <returns>True iff all names are the same.</returns>
        </member>
        <member name="P:Sciex.FMan.InstrumentParameterCollection.Count">
            <summary>
            Returns the number of parameters.
            </summary>
        </member>
        <member name="P:Sciex.FMan.InstrumentParameterCollection.Item(System.Int32)">
            <summary>
            Returns the parameter with the specified index (which runs from zero to
            Count - 1).
            </summary>
            <param name="index">Index of desired parameter.</param>
            <returns>The parameter.</returns>
        </member>
        <member name="P:Sciex.FMan.InstrumentParameterCollection.Item(System.String)">
            <summary>
            Returns the parameter with the specified name. If we have such parameter we
            return null.
            </summary>
            <param name="name">Name of parameter.</param>
            <returns>Parameter with specified name or null.</returns>
        </member>
        <member name="T:Sciex.FMan.IRecalibration">
            <summary>
            Objects that implement IFMan may also implement this IRecalibration interface. It
            is used to allow a range of cycles for a sample to be recalibrated.
            </summary>
        </member>
        <member name="M:Sciex.FMan.IRecalibration.CanUseRelativeCalibration(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns true if it's possible to perform a so-called "relative" calibration (as
            opposed to an "absolute" one). This means that when applying a new calibration to
            a sample, the calibration is not used as-is for all cycles but adjusted based
            on the previous calibration.
            </summary>
            <param name="sample">Sample.</param>
            <param name="period">Period index or -1 for all.</param>
            <param name="experiment">Experiment index or -1 for all.</param>
            <param name="startCycle">Start cycle or -1 for all.</param>
            <param name="endCycle">End cycle.</param>
            <returns>True iff a relative calibration can be used.</returns>
        </member>
        <member name="M:Sciex.FMan.IRecalibration.RecalibrateSample(Sciex.FMan.Calibration,Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32,Sciex.FMan.Calibration,System.Boolean)">
            <summary>
            Recalibrates the specified sample using the provided calibration. If "period" is
            -1 then all periods are recalibrated, otherwise just the specified one (in this case
            "experiment" and the cycle range are not used); otherwise if "experiment" is -1 all
            experiments for the period are recalibrated, otherwise just the specified one. If
            startCycle is -1 then all cycles for the experiment are used, otherwise just the
            specified range. This method should only be called if CanRecalibrateSample returns
            true. For a description of "useRelativeCalibration" see the CanUseRelativeCalibration
            method; this parameter should only be optionally set to "true" if that method returns
            true.
            </summary>
            <param name="newCalibration">New calibration.</param>
            <param name="sample">Sample.</param>
            <param name="period">Period index or -1 for all.</param>
            <param name="experiment">Experiment index or -1 for all.</param>
            <param name="startCycle">Start cycle or -1 for all.</param>
            <param name="endCycle">End cycle.</param>
            <param name="oldCalibration">Old calibration.</param>
            <param name="useRelativeCalibration">True to use relative calibration.</param>
        </member>
        <member name="M:Sciex.FMan.IRecalibration.RecalibrateSample(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,Sciex.FMan.Calibration[])">
            <summary>
            Recalibrates the specified sample using the provided calibrations. In some cases this
            method may be more efficient than calling the overloaded method multiple times. If
            "experiment" is -1 then the calibrations are applied to all experiments for the period.
            The "startCycle" specifies the starting cycle; calibrations[0] will be applied to this
            cycle. The "calibrations" array specifies the new calibrations - its length specifies
            the total number of cycles to recalibrate. For example if "experiment" is -1 and there
            are two experiments, then calibrations[0] is applied to the specified cycle for
            both experiments, calibrations[1] is applied to startCycle+1 for both experiments, etc.
            </summary>
            <param name="sample">Sample.</param>
            <param name="period">Period (cannot be -1).</param>
            <param name="experiment">Experiment index or -1 for all.</param>
            <param name="startCycle">Start cycle (often 0).</param>
            <param name="calibrations">New calibrations.</param>
        </member>
        <member name="P:Sciex.FMan.IRecalibration.CanRecalibrateSample">
            <summary>
            Returns true iff we can recalibrate samples persistently.
            </summary>
        </member>
        <member name="T:Sciex.FMan.ICreateFileSample">
            <summary>
            Objects which implement IFMan should also implement this interface if 
            they deal with samples which reside in the file system.
            </summary>
        </member>
        <member name="M:Sciex.FMan.ICreateFileSample.CreateFileSample(System.String)">
            <summary>
            Creates a new subclass of FManFileSample given a path.
            </summary>
            <param name="filePath">Path to file.</param>
            <returns>New sample.</returns>
        </member>
        <member name="T:Sciex.FMan.ICreateFileSampleWithIndex">
            <summary>
            Objects which implement IFMan should also implement this interface if 
            they deal with samples which reside in the file system AND if there can
            be more than one sample in a given file.
            </summary>
        </member>
        <member name="M:Sciex.FMan.ICreateFileSampleWithIndex.GetAllSampleNames(System.String)">
            <summary>
            Given a file path, returns the names of all samples in that path.
            </summary>
            <param name="path">File path.</param>
            <returns>The names.</returns>
        </member>
        <member name="M:Sciex.FMan.ICreateFileSampleWithIndex.CreateFileSampleWithIndex(System.String,System.Int32)">
            <summary>
            Creates a new subclass of FManFileSampleWithIndex for the given path and index.
            </summary>
            <param name="filePath">File path.</param>
            <param name="index">Sample index.</param>
            <returns>New sample.</returns>
        </member>
        <member name="T:Sciex.FMan.XicCalculatorKey">
            <summary>
            This class is used as a key in a sorted list of such items. We sort by order of
            increasing StartCycle for an XicCalculatorItem object.
            </summary>
        </member>
        <member name="M:Sciex.FMan.XicCalculatorKey.#ctor(Sciex.FMan.IFMan,Sciex.FMan.FManSample,Sciex.FMan.XicCalculatorItem[],System.Int32,Sciex.FMan.SamplePeriodExperimentCycle)">
            <summary>
            Constructor.
            </summary>
            <param name="fman">FMan used to get cycle range.</param>
            <param name="sample">Sample for which to get cycle range.</param>
            <param name="items">List of all items.</param>
            <param name="index">Index of item for this XicCalculatorKey.</param>
            <param name="spec">Object used as key in dictionaries to identify experiment.</param>
        </member>
        <member name="M:Sciex.FMan.XicCalculatorKey.System#IComparable{Sciex#FMan#XicCalculatorKey}#CompareTo(Sciex.FMan.XicCalculatorKey)">
            <summary>
            Used to compare two XicCalculatorKey by order of increasing starting cycle. Note
            that since these objects are used as keys in a dictionary, we never want two iems
            to be equal, so we (arbitrarily) use the index in the original array (which is
            unique) as a secondary sorting field.
            </summary>
            <param name="other">Item to which we compare.</param>
            <returns>Result of comparison.</returns>
        </member>
        <member name="P:Sciex.FMan.XicCalculatorKey.Item">
            <summary>
            Returns our underlying XicCalculatorItem object.
            </summary>
        </member>
        <member name="P:Sciex.FMan.XicCalculatorKey.StartCycle">
            <summary>
            Returns the start cycle for our XicCalculatorItem (for the sample which was provided
            to our constructor).
            </summary>
        </member>
        <member name="P:Sciex.FMan.XicCalculatorKey.EndCycle">
            <summary>
            Returns the end cycle for our XicCalculatorItem (for the sample which was provided
            to our constructor).
            </summary>
        </member>
        <member name="P:Sciex.FMan.XicCalculatorKey.Spec">
            <summary>
            Returns an object with a period and experiment index (which is used as a key in
            various dictionaries).
            </summary>
        </member>
        <member name="T:Sciex.FMan.XicCalculatorChunk">
            <summary>
            This class holds the XicCalculatorItems for one "chunk" of an XIC calculation. A
            chunk is a group of items which are calculated together. The XicCalculator will 
            try to arrange things so that the chunks are as large as possible (so that fewer
            XIC calls need to be made to the low-level IFMan) for efficiency, but not too
            large to fit into memory at one time. Items with the same "GroupingKey" also
            always need to be placed into the same chunk. A single chunk can span multiple
            experiments.
            </summary>
        </member>
        <member name="M:Sciex.FMan.XicCalculatorChunk.CreateSharedData(Sciex.FMan.XicCalculatorItem[])">
            <summary>
            This method returns shared data which must be provided to the XicCalculatorChunk 
            constructor. This data is shared by all chunks (for a given item list). Only
            one chunk can actively be using the shared data at one timevia calls to 
            Overlaps() and Add().
            </summary>
            <param name="items">List of items to process.</param>
            <returns>Object to pass to constructor.</returns>
            The reason for this shared data is that it is much more efficient to use a flat
            list of ExperimentChunk[][] objects (indexed first by period and then by
            experiment) compared to a dictionary since the Overlaps() method is called
            very frequently. Rather than have each chunk create new arrays we create it
            once and share it.
        </member>
        <member name="M:Sciex.FMan.XicCalculatorChunk.#ctor(System.Object)">
            <summary>
            Constructor. The caller provides an object previously returned by CreateSharedData -
            see that method for details.
            </summary>
            <param name="sharedData">Data from CreateSharedData.</param>
        </member>
        <member name="M:Sciex.FMan.XicCalculatorChunk.GetItemsForOneExperiment(System.Int32)">
            <summary>
            Returns the XicCalculatorItems in the experiment with the requested index (which
            should run from 0 to NumExperiments-1).
            </summary>
            <param name="index">Experiment index.</param>
            <returns>Items for requested experiment index.</returns>
        </member>
        <member name="M:Sciex.FMan.XicCalculatorChunk.OverlapsExperiment(System.Int32,System.Int32)">
            <summary>
            Returns true if we have at least one entry (XicCalculatorKey) for the specified
            period and experiment.
            </summary>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <returns>True if we have entry for specified experiment.</returns>
        </member>
        <member name="M:Sciex.FMan.XicCalculatorChunk.Overlaps(Sciex.FMan.XicCalculatorKey)">
            <summary>
            Returns true iff the cycle range for the provided item overlaps our current
            cycle range; only items for the same period/experiment combination as key.Item
            are considered.
            </summary>
            <param name="key">XicCalculatorItem key.</param>
            <returns>True if item overlaps us.</returns>
        </member>
        <member name="M:Sciex.FMan.XicCalculatorChunk.Add(Sciex.FMan.XicCalculatorKey)">
            <summary>
            Adds the specified item to our list.
            </summary>
            <param name="key">Item to add.</param>
        </member>
        <member name="P:Sciex.FMan.XicCalculatorChunk.NumExperiments">
            <summary>
            Returns the number of different period/experiment combinations for all of 
            our XicCalculatorItems.
            </summary>
        </member>
        <member name="P:Sciex.FMan.XicCalculatorChunk.EndCycle">
            <summary>
            Returns the largest EndCycle for all of our XicCalculatorItems (for all
            experiments).
            </summary>
        </member>
        <member name="P:Sciex.FMan.XicCalculatorChunk.XicSizeInBytes">
            <summary>
            Returns an estimate of the size of the XICs for all of our XicCalculatorItems.
            </summary>
        </member>
        <member name="T:Sciex.FMan.XicCalculatorChunk.ExperimentChunk">
            <summary>
            This class holds a list of XicCalculatorItems for one specific period/experiment
            combination.
            </summary>
        </member>
        <member name="M:Sciex.FMan.XicCalculatorChunk.ExperimentChunk.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Sciex.FMan.XicCalculatorChunk.ExperimentChunk.Overlaps(Sciex.FMan.XicCalculatorKey)">
            <summary>
            Returns true iff the cycle range for the provided item overlaps our current
            cycle range. Note that it only makes sense to call this method if key.Item
            is for the same experiment as our other items.
            </summary>
            <param name="key">XicCalculatorItem key.</param>
            <returns>True if cycle ranges overlap.</returns>
        </member>
        <member name="M:Sciex.FMan.XicCalculatorChunk.ExperimentChunk.Add(Sciex.FMan.XicCalculatorKey)">
            <summary>
            Adds the specified item to our list. Note that it only makes sense to call
            this method if key.Item is for the same experiment as our other items.
            </summary>
            <param name="key">Item to add.</param>
        </member>
        <member name="P:Sciex.FMan.XicCalculatorChunk.ExperimentChunk.Items">
            <summary>
            Returns a list of items for this experiment.
            </summary>
        </member>
        <member name="P:Sciex.FMan.XicCalculatorChunk.ExperimentChunk.EndCycle">
            <summary>
            Returns the largest ending cycle for any of the XicCalculatorItems in our list.
            </summary>
        </member>
        <member name="P:Sciex.FMan.XicCalculatorChunk.ExperimentChunk.XicSizeInBytes">
            <summary>
            Returns an estimate of the size of the XICs for all of our XicCalculatorItems.
            </summary>
        </member>
        <member name="T:Sciex.FMan.SamplePeriodExperimentCycle">
            <summary>
            This simple class holds a (sample, period, experiment, cycle) group. It overrides
            Equals and so is useful (for example) as the key in hashtables. 
            </summary>
        </member>
        <member name="M:Sciex.FMan.SamplePeriodExperimentCycle.#ctor(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="sample">Sample object.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="cycle">Cycle index.</param>
        </member>
        <member name="M:Sciex.FMan.SamplePeriodExperimentCycle.#ctor(Sciex.FMan.FManSample,System.Int32,System.Int32)">
            <summary>
            Constructor. The Cycle is set to -1.
            </summary>
            <param name="sample">Sample object.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
        </member>
        <member name="M:Sciex.FMan.SamplePeriodExperimentCycle.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor. The Sample is set to null.
            </summary>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="cycle">Cycle index.</param>
        </member>
        <member name="M:Sciex.FMan.SamplePeriodExperimentCycle.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor. The Sample is set to null and the Cycle to -1.
            </summary>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
        </member>
        <member name="M:Sciex.FMan.SamplePeriodExperimentCycle.ToString">
            <summary>
            Returns a string representation of this object. The string always contains the
            period and experiment numbers (either as specific values or as "all" if these
            values are negative). If we have a non-null sample it is included too and if we
            have a non-negative cycle it is added.
            </summary>
            <returns>The string.</returns>
        </member>
        <member name="M:Sciex.FMan.SamplePeriodExperimentCycle.Equals(System.Object)">
            <summary>
            Returns true iff "obj" has the same period, experiment and cycle as this object.
            </summary>
            <param name="obj">Object to compare to.</param>
            <returns>True iff we equal "obj'.</returns>
        </member>
        <member name="M:Sciex.FMan.SamplePeriodExperimentCycle.GetHashCode">
            <summary>
            Overridden to return a better hashcode.
            </summary>
            <returns>The hashcode.</returns>
        </member>
        <member name="M:Sciex.FMan.SamplePeriodExperimentCycle.CompareTo(System.Object)">
            <summary>
            Compares this object to "obj".
            </summary>
            <param name="obj">Object to which we compare.</param>
            <returns>Either "1" if we're bigger, -1 if we're smaller or 0.</returns>
        </member>
        <member name="P:Sciex.FMan.SamplePeriodExperimentCycle.Sample">
            <summary>
            Returns our sample object (which may be null).
            </summary>
        </member>
        <member name="P:Sciex.FMan.SamplePeriodExperimentCycle.Period">
            <summary>
            Returns our period index.
            </summary>
        </member>
        <member name="P:Sciex.FMan.SamplePeriodExperimentCycle.Experiment">
            <summary>
            Returns our experiment index.
            </summary>
        </member>
        <member name="P:Sciex.FMan.SamplePeriodExperimentCycle.Cycle">
            <summary>
            Returns our cycle index (which may be -1).
            </summary>
        </member>
        <member name="T:Sciex.FMan.ProgressDelegate">
            <summary>
            Events of this type are potentially fired during Fast XIC calculation.
            </summary>
            <param name="fractionComplete">Fraction (from 0 to 1) complete.</param>
        </member>
        <member name="T:Sciex.FMan.IFMan">
            <summary>
            This interface defines the various methods which a so-called "file manager"
            must implement. These are objects which create spectra and chromatograms
            from a particular data source. The general idea is that a specific 
            instance which implements this interface can be created in ONE place in a
            given application and that this interface can be used by all other parts of
            its code, thus isolating knowledge of the object implementing the interface.
            Note that the "sample" is specified as a generic object since its
            exact nature will vary from one implementation to another.
            </summary>
        </member>
        <member name="M:Sciex.FMan.IFMan.Clone">
            <summary>
            This method is used to create another instance of this object. One reason
            for doing this is so that two threads may each access a different instance.
            </summary>
            <returns>The clone of this instance.</returns>
        </member>
        <member name="M:Sciex.FMan.IFMan.Close">
            <summary>
            Some implementations may benefit from the opportunity to clean up
            when the object is no longer needed (it may not be a good idea for
            us to do so with every method call for performance reasons); callers
            should therefore always call this methood when they are finished,
            temporarily or otherwise, with this object. Note that this is NOT
            a Dispose() method - it is still allowed to call other methods
            after calling Close().
            </summary>
        </member>
        <member name="M:Sciex.FMan.IFMan.GetSampleInfo(Sciex.FMan.FManSample)">
            <summary>
            Returns sample information (sample name, etc) for the given sample.
            </summary>
            <param name="sample">Sample for which to get info.</param>
            <returns>The information.</returns>
        </member>
        <member name="M:Sciex.FMan.IFMan.GetSampleXml(Sciex.FMan.FManSample)">
            <summary>
            Returns "opaque" sample information for the given sample which is used
            for display-only purposes. The xml must follow the Sciex.Utility.IO.InfoXml
            schema.
            </summary>
            <param name="sample">Sample for which to get info.</param>
            <returns>The information.</returns>
        </member>
        <member name="M:Sciex.FMan.IFMan.GetMethod(Sciex.FMan.FManSample)">
            <summary>
            Returns method information for the given sample.
            </summary>
            <param name="sample">Sample for which to get info.</param>
            <returns>The information.</returns>
        </member>
        <member name="M:Sciex.FMan.IFMan.GetMethodXml(Sciex.FMan.FManSample)">
            <summary>
            Returns "opaque" method information for the given sample which is used
            for display-only purposes. The xml must follow the Sciex.Utility.IO.InfoXml
            schema.
            </summary>
            <param name="sample">Sample for which to get info.</param>
            <returns>The information.</returns>
        </member>
        <member name="M:Sciex.FMan.IFMan.GetSpectrumInfo(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns information about the specified mass spectrum. This information
            is also returned when a spectrum itself is requested - using this method
            prevents having to also obtain the (mass, intensity) points if they are
            not needed (for efficiency).
            </summary>
            <param name="sample">Sample for which to get info.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="cycle">Cycle number.</param>
            <returns>The spectrum information.</returns>
        </member>
        <member name="M:Sciex.FMan.IFMan.GetOrthogonalSpectrumInfo(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns information about the specified mass spectrum. This method is similar
            to GetSpectrumInfo() except that this method is only used for the case of
            "orthogonal" data for which a secondary spectrum is available for each mass
            point of a parent or primary spectrum. Also see the description of the
            OrthogonalMSExperiment class.
            </summary>
            <param name="sample">Sample for which to get info.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="cycle">Cycle number.</param>
            <param name="parentMassIndex">Mass index in parent experiment.</param>
            <returns>The spectrum information.</returns>
        </member>
        <member name="M:Sciex.FMan.IFMan.FindCycle(Sciex.FMan.FManSample,System.Int32,System.Double,System.Int32@)">
            <summary>
            Returns the zero-based index of the MS cycle which corresponds to the
            provided retention time (for the given experiment index). This is
            needed to convert a time to a cycle for subsequent calls to other
            methods such as GetSpectrum(). NOTE: Since the period index may not be
            known until after this call returns, implementors should be "flexible" with
            the experiment index - in particular, if it is out of range for the
            resulting period, an experiment of "0" should be used instead. This also
            allows "experiment" to be set to -1.
            </summary>
            <param name="sample">Sample for which to get cycle.</param>
            <param name="experiment">Experiment index.</param>
            <param name="time">Retention time.</param>
            <param name="period">Set to period index.</param>
            <returns>Cycle correspoding to given time.</returns>
        </member>
        <member name="M:Sciex.FMan.IFMan.FindCycle(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Double)">
            <summary>
            Returns a zero-based index of the MS cycle which correponds most closely to
            the provided retention time and period and experiment. Both the period and
            experiment must be valid values and not the "-1" value which sometimes
            represents "all". If the specified time is before the the start of the period
            the return value is set to zero and if it is after the end of the period
            the return value is one less than the number of cycles available for the
            experiment.
            </summary>
            <param name="sample">Sample for which to get cycle.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="time">Retention time.</param>
            <returns>Cycle corresponding to given time (or 0 or NumCycles-1).</returns>
        </member>
        <member name="M:Sciex.FMan.IFMan.FindHigherCycle(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Double)">
            <summary>
            This method is very similar to FindCycle(FManSample, int, int double) except
            that we return the cycle with equal or larger time to "time" rather than
            the closest cycle.
            </summary>
            <param name="sample">Sample for which to get cycle.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="time">Retention time.</param>
            <returns>Cycle corresponding to given time (or 0 or NumCycles-1).</returns>
        </member>
        <member name="M:Sciex.FMan.IFMan.GetTime(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the retention time associated with the given cycle number
            (for the provided sample and period and experiment indices).
            </summary>
            <param name="sample">Sample for which to get retention time.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="cycle">Cycle number.</param>
            <returns>The retention time.</returns>
        </member>
        <member name="M:Sciex.FMan.IFMan.CreateChromatogram">
            <summary>
            Creates a new chromatogram. Callers can subsequently call the
            SetToTIC(), SetToXIC(), etc. method on the result.
            </summary>
            <returns>A new chromatogram object.</returns>
        </member>
        <member name="M:Sciex.FMan.IFMan.CreateFastXICs(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32,System.Double[],System.Double[],Sciex.FMan.ProgressDelegate)">
            <summary>
            Creates new chromatograms populated using scan XICs for the specified sample,
            period, experiment and mass ranges. The results are the same as calling 
            CreateChromatogram for each mass range and calling SetToXIC() on the resulting
            chromatogram, however in some cases this method may be more efficient. It is 
            possible to calculate the XICs over a limited time range by providing the 
            range - if startCycle is greater than endCycle the full range available is used.
            </summary>
            <param name="sample">Sample for XICs.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="startCycle">Starting cycle (if used).</param>
            <param name="endCycle">Ending cycle (if used).</param>
            <param name="startMasses">Start masses for XICs.</param>
            <param name="endMasses">End masses for XICs.</param>
            <returns>New populated XICs.</returns>
            <param name="progress">If not null, called with progress information.</param>
        </member>
        <member name="M:Sciex.FMan.IFMan.CreateFastIndexedXICs(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32[],Sciex.FMan.ProgressDelegate)">
            <summary>
            This method is similar to CreateFastXICs except that this method is for indexed
            XICs (MRM and SIM) rather than scan XICs - see that method for details.
            </summary>
        </member>
        <member name="M:Sciex.FMan.IFMan.CreateMassSpectrum">
            <summary>
            Creates a new mass spectrum. Callers can subsequently call the
            SetToSpectrum() method on the result.
            </summary>
            <returns>A new spectrum object.</returns>
        </member>
        <member name="M:Sciex.FMan.IFMan.CreateWavelengthSpectrum">
            <summary>
            Creates a new wavelength spectrum. Callers can subsequently call the 
            SetToSpectrum() method on the result. NOTE: Not all implementations of
            IFMan will support the creation of wavelength spectra; if not the return
            value should be null (not an exception) and the caller must check for this.
            </summary>
            <returns>A new wavelength spectrum object.</returns>
        </member>
        <member name="M:Sciex.FMan.IFMan.GetSpectralPeakInfo(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32)">
            <summary>
            Where available, this method returns information determined at run time for
            the requested mass spectrum. If such information is not available the return
            value is null. WARNING: In some cases the return value may be non-null but not
            all fields of the IPeakList inteface are actually available - for example
            the GetXValue() method may return a mass as expected but the GetYValue()
            method may throw an exception or return -1. This is because only a subset of
            the possible information may have been determined and saved persistently. Also
            note that the return value may support IPeakListExtra in which case standard
            strings to use for these "extra" fields are defined in the FManConstants
            class.
            </summary>
            <param name="sample">Sample.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="cycle">Cycle index.</param>
            <returns>The spectral info or null.</returns>
        </member>
        <member name="P:Sciex.FMan.IFMan.AllowPersistDynamicData">
            <summary>
            Some implementations may have "dynamic" data which is calculated on-the-fly,
            for example to index scan data. If this property is true we allow such data to
            potentially be saved persistently to disk.
            </summary>
        </member>
        <member name="P:Sciex.FMan.IFMan.AllowLargeMemoryAllocations">
            <summary>
            Some implementations may be more efficient if they are able to use large memory
            allocations to cache data. Callers should set this propertry to true (the
            default is false) only if they will process MANY spectra; otherwise it is 
            probably more efficient not to cache large volumes of data.
            </summary>
        </member>
        <member name="T:Sciex.FMan.DefaultTofCalibration">
            <summary>
            This class implements a default time-of-flight calibration which uses the
            equation:
                mass^0.5 = calA * (time-of-flight - calT0)
            </summary>
        </member>
        <member name="T:Sciex.FMan.Calibration">
            <summary>
            This class is an abstract base for calibration parameters. Note: Subclasses
            should also override Equals() and mark the object as Serializable.
            </summary>
        </member>
        <member name="M:Sciex.FMan.Calibration.ToString">
            <summary>
            Returns a textual description of the calibration for the provided spectrum. The
            individual calibration items should generally be separated by semi-colons (not
            commas to allow parsing where the decimal character is ",").
            </summary>
        </member>
        <member name="M:Sciex.FMan.Calibration.Parse(System.String)">
            <summary>
            Returns a new instance parsed from the provided string. Generally the string
            will have been obtained via a previous call to ToString(). Note that the current
            instance is not modified.
            </summary>
            <param name="calibrationString">String to parse.</param>
            <returns>New calibration.</returns>
        </member>
        <member name="M:Sciex.FMan.Calibration.CalculateRecalibration(System.Double[],System.Double[])">
            <summary>
            Given lists of theoretical and measured masses, calculates and returns a new
            calibration. The current calibration is not changed.
            </summary>
            <param name="theoreticalMZs">Theoretical m/z values.</param>
            <param name="measuredMZs">Measured m/z values.</param>
            <returns>New calibration.</returns>
        </member>
        <member name="M:Sciex.FMan.Calibration.RecalibrateMZ(System.Double,Sciex.FMan.Calibration)">
            <summary>
            Given a mass/charge value, calculates the recalibrated mass using this object
            for the original calibration and "newCalibration" as the new one.
            </summary>
            <param name="mz">The mass/charge value.</param>
            <param name="newCalibration">New calibration.</param>
            <returns>Recalibrated m/z.</returns>
        </member>
        <member name="M:Sciex.FMan.Calibration.GetStepSize(System.Double)">
            <summary>
            Given a mass, returns the local step size at that mass.
            </summary>
            <param name="xValue">Mass at which to get step size.</param>
            <returns>Step size at specified mass.</returns>
        </member>
        <member name="M:Sciex.FMan.Calibration.GetOriginalStepSize(System.Double)">
            <summary>
            This method calls the abstract GetStepSize do to the work.
            </summary>
            <param name="xValue">Mass at which to get step size.</param>
            <returns>Step sie at specified mass.</returns>
        </member>
        <member name="M:Sciex.FMan.Calibration.GetBracketingXValuesUsingStep(System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>
            This method returns the masses lying just below (or equal to) "mass" and just
            above this value which lie on even step sizes. NOTE: This method itself always just
            sets lowerMass and higherMass to mass - this method must be overridden by subclasses.
            </summary>
            <param name="xValue">Mass for which to get bracketing even-step x-values.</param>
            <param name="lowerX">Largest mass less than or equal to mass lying on an even step.</param>
            <param name="higherX">Higher mass lying on an even step.</param>
            <param name="step">Step size at this mass.</param>
        </member>
        <member name="M:Sciex.FMan.Calibration.ExtractCalibrationParameter(System.String,System.String)">
            <summary>
            This utility method is used to extract a calibration parameter with a given name
            from the provided calibration string. We assume that the name is followed by "="
            or " =" and that the value follows the "=" up to the next semi-colon or new
            line character (and that the parameter can be converted to a double). If we cannot
            find the requested parameter we thrown an Exception.
            </summary>
            <param name="calibrationString">String describing calibration.</param>
            <param name="name">Name of parameter.</param>
            <returns>Value extracted from string.</returns>
        </member>
        <member name="P:Sciex.FMan.Calibration.ContinuumData">
            <summary>
            Always returns true.
            </summary>
        </member>
        <member name="M:Sciex.FMan.DefaultTofCalibration.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Constructor. Note that we set the NumTimeBinsSummed property to 1.
            </summary>
            <param name="calA">The 'a' calibration parameter.</param>
            <param name="calT0">The 't0' calibration parameter.</param>
            <param name="timeResolution">TDC time resolution.</param>
        </member>
        <member name="M:Sciex.FMan.DefaultTofCalibration.#ctor(System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="calA">The 'a' calibration parameter.</param>
            <param name="calT0">The 't0' calibration parameter.</param>
            <param name="timeResolution">TDC time resolution.</param>
            <param name="numTimeBinsSummed">See NumTimeBinsSummed property.</param>
            <param name="binOffset">See BinOffset property.</param>
        </member>
        <member name="M:Sciex.FMan.DefaultTofCalibration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This constructor is used when creating this object from a stream.
            </summary>
            <param name="info">Object from which we get data.</param>
            <param name="context">Not used.</param>
        </member>
        <member name="M:Sciex.FMan.DefaultTofCalibration.Init(System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Performs common initialisation.
            </summary>
            <param name="calA">The 'a' calibration parameter.</param>
            <param name="calT0">The 't0' calibration parameter.</param>
            <param name="timeResolution">TDC time resolution.</param>
            <param name="numTimeBinsSummed">See NumTimeBinsSummed property.</param>
            <param name="binOffset">See BinOffset property.</param>
        </member>
        <member name="M:Sciex.FMan.DefaultTofCalibration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Persists this object to the provided stream.
            </summary>
            <param name="info">Object to which we write data.</param>
            <param name="context">Not used.</param>
        </member>
        <member name="M:Sciex.FMan.DefaultTofCalibration.Equals(System.Object)">
            <summary>
            We override this method to compare "obj" to this object. The comparison is
            based on the "a" and "t0" calibration parameters (and NOT also on the time
            resolution).
            </summary>
            <param name="obj">Object to which we compare.</param>
            <returns>True iff we are equal to "obj".</returns>
        </member>
        <member name="M:Sciex.FMan.DefaultTofCalibration.GetHashCode">
            <summary>
            We override this method to return a better hash code since we also
            override Equals.
            </summary>
            <returns>A hash code.</returns>
        </member>
        <member name="M:Sciex.FMan.DefaultTofCalibration.ToString">
            <summary>
            Returns a textual description of the calibration for the provided spectrum. The
            individual calibration items should generally be separated by semi-colons (not
            commas to allow parsing where the decimal character is ",").
            </summary>
        </member>
        <member name="M:Sciex.FMan.DefaultTofCalibration.Parse(System.String)">
            <summary>
            Returns a new instance parsed from the provided string. Note that the current
            instance is not modified.
            </summary>
            <param name="calibrationString">String to parse.</param>
            <returns>New calibration.</returns>
        </member>
        <member name="M:Sciex.FMan.DefaultTofCalibration.CalculateRecalibration(System.Double[],System.Double[])">
            <summary>
            Given lists of theoretical and measured masses, calculates and returns a new
            calibration. The current calibration is not changed.
            </summary>
            <param name="theoreticalMZs">Theoretical m/z values.</param>
            <param name="measuredMZs">Measured m/z values.</param>
            <returns>New calibration.</returns>
        </member>
        <member name="M:Sciex.FMan.DefaultTofCalibration.RecalibrateMZ(System.Double,Sciex.FMan.Calibration)">
            <summary>
            Given a mass/charge value, calculates the recalibrated mass using this object
            for the original calibration and "newCalibration" as the new one.
            </summary>
            <param name="mz">The mass/charge value.</param>
            <param name="newCalibration">New calibration.</param>
            <returns>Recalibrated m/z.</returns>
        </member>
        <member name="M:Sciex.FMan.DefaultTofCalibration.GetStepSize(System.Double)">
            <summary>
            Given a mass, returns the local step size at that mass.
            </summary>
            <param name="xValue">Mass at which to get step size.</param>
            <returns>Step size at specified mass.</returns>
        </member>
        <member name="M:Sciex.FMan.DefaultTofCalibration.GetBracketingXValuesUsingStep(System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>
            This method returns the masses lying just below (or equal to) "mass" and just
            above this value which lie on even step sizes.
            </summary>
            <param name="xValue">Mass for which to get bracketing even-step x-values.</param>
            <param name="lowerX">Largest mass less than or equal to mass lying on an even step.</param>
            <param name="higherX">Higher mass lying on an even step.</param>
            <param name="step">Step size at specified mass.</param>
        </member>
        <member name="M:Sciex.FMan.DefaultTofCalibration.ConvertBinToMass(System.Double)">
            <summary>
            Converts a time-of-flight "bin" to a mass. We assume that the actual flight
            time is equal to "bin * TimeResolution". Note that even though we expect
            "bin" to be integral we define it as a double since bins are sometimes
            stored as such.
            </summary>
            <param name="bin">The bin number.</param>
            <returns>The time-of-flight.</returns>
        </member>
        <member name="M:Sciex.FMan.DefaultTofCalibration.ConvertBinsToMasses(System.Double[])">
            <summary>
            This method is identical to ConvertBinToMass() except that the conversion happens
            for all points in the array; this is somewhat more efficient than making multiple
            function calls.
            </summary>
            <param name="values">On input contains bins; on output set to masses.</param>
        </member>
        <member name="M:Sciex.FMan.DefaultTofCalibration.ConvertMassToBin(System.Double)">
            <summary>
            Converts a mass to a time-of-flight "bin". We assume that the actual flight
            time is equal to "bin * TimeResolution". 
            </summary>
            <param name="mass">The mass.</param>
            <returns>The bin number.</returns>
        </member>
        <member name="P:Sciex.FMan.DefaultTofCalibration.CalA">
            <summary>
            Returns the TOF 'a' calibration parameter.
            </summary>
        </member>
        <member name="P:Sciex.FMan.DefaultTofCalibration.CalT0">
            <summary>
            Returns the TOF 't0' calibration parameter. 
            </summary>
        </member>
        <member name="P:Sciex.FMan.DefaultTofCalibration.TimeResolution">
            <summary>
            Returns the time resolution of the TDC detector.
            </summary>
        </member>
        <member name="P:Sciex.FMan.DefaultTofCalibration.NumTimeBinsSummed">
            <summary>
            Returns the number of detector time bins which were summed to generate a 
            single (time, intensity) data point. In some cases this is N/A, so the
            constructor which does not accept the "numTimeBinsSummed" parameter 
            arbitrarily sets this value to 1.
            </summary>
        </member>
        <member name="P:Sciex.FMan.DefaultTofCalibration.BinOffset">
            <summary>
            In some cases we need to convert each bin to the nearest multiple of 
            "NumTimeBinsSummed", however there may be an offset. For example if four bins are 
            being summed we may have bin numbers such as 100, 104, 108 etc (actually the 
            magnitude would be larger); it seems to be the case for recently acquired data 
            that the bins are even multiples of the number of bins to sum; however for older 
            data we may have bins such as 101, 105, 109, etc. In the former example this 
            property is set to zero and in the latter case to one. 
            </summary>
        </member>
        <member name="P:Sciex.FMan.DefaultTofCalibration.StepFactor">
            <summary>
            The step size
            </summary>
        </member>
        <member name="P:Sciex.FMan.DefaultTofCalibration.StepFactor2">
            <summary>
            The extra step size
            </summary>
        </member>
        <member name="T:Sciex.FMan.MassRange">
            <summary>
            This class defines a mass range (start and stop mass for scan data, Q1 and Q3
            for MRM data, etc).
            </summary>
        </member>
        <member name="M:Sciex.FMan.MassRange.#ctor(Sciex.FMan.SpectrumTypeEnum,System.Double,System.Double,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="spectrumType">Data type.</param>
            <param name="mass1">Start mass, Q1 mass or SIM mass.</param>
            <param name="mass2">Stop mass or Q3 mass.</param>
            <param name="name">Custom name or null.</param>
            <param name="step">Step size.</param>
            <param name="dwell">Dwell time or negative if N/A (as for TOF data).</param>
            <param name="isolationWindow">MS/MS isolation window or -1.</param>
            <param name="countsConversionFactor">See CountsConversionFactor property.</param>
            <param name="expectedRT">Expected RT or negative.</param>
            <param name="startRT">Staring RT or negative.</param>
            <param name="endRT">Ending RT or negative.</param>
        </member>
        <member name="P:Sciex.FMan.MassRange.StartMass">
            <summary>
            Returns the start mass; this method should only be called for scan data.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MassRange.EndMass">
            <summary>
            Returns the end mass; this method should only be called for scan data.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MassRange.SimMass">
            <summary>
            This method returns the SIM mass; this method should only be called for SIM data.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MassRange.MrmQ1Mass">
            <summary>
            Returns the MRM Q1 mass; this method should only be called for MRM data.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MassRange.MrmQ3Mass">
            <summary>
            Returns the MRM Q3 mass; this method should only be called for MRM data.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MassRange.HaveName">
            <summary>
            Returns true if this mass range has a name. This will always be true for SIM
            and MRM data and may be true otherwise (if an explicit name was provided).
            </summary>
        </member>
        <member name="P:Sciex.FMan.MassRange.HaveUserName">
            <summary>
            Returns true if we have a custom user-provided name for this range (i.e.
            something other than the default Q1/Q3 or SIM mass).
            </summary>
        </member>
        <member name="P:Sciex.FMan.MassRange.Name">
            <summary>
            Returns the name of this mass range. If we have no name we return null.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MassRange.DefaultName">
            <summary>
            For an MRM range, returns the Q1 and Q3 masses (as a string), for a SIM range returns
            the mass, otherwise returns null. This is similar to the Name property except that
            that method returns a specific custom name if we have one.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MassRange.StepSize">
            <summary>
            Returns our step size. Note that this may be a negative value if N/A (as will be
            the case for TOF data).
            </summary>
        </member>
        <member name="P:Sciex.FMan.MassRange.DwellTime">
            <summary>
            Returns our dwell time. Note that this may be a negative value if N/A (as will be
            the case for TOF data).
            </summary>
        </member>
        <member name="P:Sciex.FMan.MassRange.IsolationWindow">
            <summary>
            For an MS/MS experiment, returns the precursor isolation window. Note that in
            many cases this value is only an estimate. For an MRM experiment the Q1 isolation
            window is returned. For other experiment types the return value is -1 to indicate N/A.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MassRange.CountsConversionFactor">
            <summary>
            Returns a conversion factor by which intensities must be multiplied to get raw
            counts. If this cannot be determined we return -1.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MassRange.ExpectedRetentionTime">
            <summary>
            Returns the expected retention time for the compound associated with this mass
            range. If we have no such compound or RT we return zero or -1.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MassRange.StartRetentionTime">
            <summary>
            Mass ranges usually apply to the entire time range for an experiment, however in
            cases when this is not the case this property is the starting retention time of
            the mass range. A return value of 0 or -1 indicates that the mass range applies
            to the entire experiment.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MassRange.EndRetentionTime">
            <summary>
            Mass ranges usually apply to the entire time range for an experiment, however in
            cases when this is not the case this property is the ending retention time of
            the mass range. A return value of 0 or -1 indicates that the mass range applies
            to the entire experiment.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MassRange.Parameters">
            <summary>
            Returns our list of mass-range parameters.
            </summary>
        </member>
        <member name="T:Sciex.FMan.WavelengthSpectrumInfo">
            <summary>
            This class defines information about a particular diode-array wavelength spectrum
            (spectrum index range used to average the spectrum). Note that the DADMethod class 
            defines higher-level parameters: This class itself just defines those which can 
            potentially vary from wavelength spectrum to wavelength spectrum.
            </summary>
        </member>
        <member name="T:Sciex.FMan.FManDataInfo">
            <summary>
            This class serves as the base for concrete subclasses which provide
            information about a specific chromatogram or spectrum. This class
            itself implements the properities which are common to both.
            </summary>
        </member>
        <member name="M:Sciex.FMan.FManDataInfo.#ctor(System.Int32,System.Int32,System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="periodIndex">Period index.</param>
            <param name="experimentIndex">Experiment index.</param>
            <param name="countsConversionFactor">See the CountsConversionFactor property.</param>
        </member>
        <member name="M:Sciex.FMan.FManDataInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This constructor is used when creating this object from a stream.
            </summary>
            <param name="info">Object from which we get data.</param>
            <param name="context">Not used.</param>
        </member>
        <member name="M:Sciex.FMan.FManDataInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Persists this object to the provided stream.
            </summary>
            <param name="info">Object to which we write data.</param>
            <param name="context">Not used.</param>
        </member>
        <member name="M:Sciex.FMan.FManDataInfo.Clone">
            <summary>
            Creates a deep copy of this object.
            </summary>
            <returns>A clone of this object.</returns>
        </member>
        <member name="P:Sciex.FMan.FManDataInfo.PeriodIndex">
            <summary>
            Returns the zero-based period index. Note that it's possible for
            this value to be "-1" to indicate all periods.
            </summary>
        </member>
        <member name="P:Sciex.FMan.FManDataInfo.ExperimentIndex">
            <summary>
            Returns the zero-based experiment index. Note that it's possible for
            this value to be "-1" to indicate all experiments.
            </summary>
        </member>
        <member name="P:Sciex.FMan.FManDataInfo.CountsConversionFactor">
            <summary>
            Gets or sets the factor by which intensities must be multiplied in order to 
            convert them to counts. In some cases we cannot determine this factor and return -1.
            </summary>
        </member>
        <member name="M:Sciex.FMan.WavelengthSpectrumInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor. Note that "periodIndex" and "experimentIndex" should be set to indicate
            "all". In cases with multiple periods and experiments these values should be -1, but
            if there is exactly one period and one experiment these should be 0.
            </summary>
            <param name="periodIndex">Should be -1 if multiple periods, 0 if one.</param>
            <param name="experimentIndex">Should be -1 if multiple experiments, 0 if one.</param>
            <param name="startIndex">Start spectrum index for average spectrum.</param>
            <param name="endIndex">End spectrum index for average spectrum.</param>
        </member>
        <member name="M:Sciex.FMan.WavelengthSpectrumInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This constructor is used when creating this object from a stream.
            </summary>
            <param name="info">Object from which we get data.</param>
            <param name="context">Not used.</param>
        </member>
        <member name="M:Sciex.FMan.WavelengthSpectrumInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Persists this object to the provided stream.
            </summary>
            <param name="info">Object to which we write data.</param>
            <param name="context">Not used.</param>
        </member>
        <member name="M:Sciex.FMan.WavelengthSpectrumInfo.SetSpectrumIndexRange(System.Int32,System.Int32)">
            <summary>
            Sets the spectrum index range used to calculate the average spectrum. 
            </summary>
            <param name="startIndex">Start spectrum index for average spectrum.</param>
            <param name="endIndex">End spectrum index for average spectrum.</param>
        </member>
        <member name="P:Sciex.FMan.WavelengthSpectrumInfo.StartSpectrumIndex">
            <summary>
            Returns the start spectrum index used to average the spectrum.
            </summary>
        </member>
        <member name="P:Sciex.FMan.WavelengthSpectrumInfo.EndSpectrumIndex">
            <summary>
            Returns the end spectrum index used to average the spectrum.
            </summary>
        </member>
        <member name="T:Sciex.FMan.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GC_FManSample_FileDoesNotExistWouldYouLikeToLookForIt_1">
            <summary>
              Looks up a localized string similar to The file &apos;{0}&apos; does not exist. Would you like to look for it?.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_AbstractFMan_CouldNotGetMethodInformationFor_1">
            <summary>
              Looks up a localized string similar to Could not get method information for {0}..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_AbstractFMan_CouldNotGetSampleInformationFor_1">
            <summary>
              Looks up a localized string similar to Could not get sample information for {0}..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_AbstractFMan_InvalidExperimentIndex">
            <summary>
              Looks up a localized string similar to Invalid experiment index..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_AbstractFMan_InvalidPeriodIndex">
            <summary>
              Looks up a localized string similar to Invalid period index..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_CalculateXicSum_NegativeStep">
            <summary>
              Looks up a localized string similar to Negative step..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_CalculateXicSum_StartIsGreaterThanEnd">
            <summary>
              Looks up a localized string similar to Start is greater than end..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_Calibration_CouldNotExtractTheCalibrationParameter_1">
            <summary>
              Looks up a localized string similar to Could not extract the &quot;{0}&quot; calibration parameter..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramHelper_AValidPeriodAndExperimentMustBeSpecified">
            <summary>
              Looks up a localized string similar to A valid period and experiment must be specified..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramHelper_CannotSpecifyASpecificExperimentAndAllPeriods">
            <summary>
              Looks up a localized string similar to Cannot specify a specific experiment and all periods..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramHelper_EndCycleIsOutOfRange">
            <summary>
              Looks up a localized string similar to End cycle is out of range..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramHelper_ErrorProcessing_1">
            <summary>
              Looks up a localized string similar to Error processing {0}..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramHelper_InvalidLengthForMassIndices">
            <summary>
              Looks up a localized string similar to Invalid length for massIndices..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramHelper_InvalidLengthForStartAndOrEndMasses">
            <summary>
              Looks up a localized string similar to Invalid length for start and/or end masses..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramHelper_InvalidPeriod">
            <summary>
              Looks up a localized string similar to Invalid period..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramHelper_RequestedExperimentIsOutOfRange">
            <summary>
              Looks up a localized string similar to The requested experiment is out of range..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramHelper_RequestedPeriodIsOutOfRange">
            <summary>
              Looks up a localized string similar to The requested period is out of range..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramHelperData_LengthMismatch">
            <summary>
              Looks up a localized string similar to Length mismatch..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramHelperData_StartAndEndBpcRangesMustBeSameLength">
            <summary>
              Looks up a localized string similar to The start and end BPC ranges must be the same length..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramHelperData_StartBpcValuesMustBeLessThanEndValues">
            <summary>
              Looks up a localized string similar to The start BPC values must be less than the end values..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramHelperData_StartCycleIsGreaterThanEndCycle">
            <summary>
              Looks up a localized string similar to Start cycle is greater than end cycle..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramHelperData_StartMassIsGreaterThanEndMass">
            <summary>
              Looks up a localized string similar to The start mass is greater than the end mass..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramHelperData_UnknownChromatogramType">
            <summary>
              Looks up a localized string similar to Unknown chromatogram type..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramHelperData_YouMustSpecifyBothStarAndEndBpcRanges">
            <summary>
              Looks up a localized string similar to You must specify both the start and end BPC ranges..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramHelperData_YouMustSpecifyBpcMassRange">
            <summary>
              Looks up a localized string similar to You must specify a BPC mass range..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramInfo_BpcToleranceCannotBeNegative">
            <summary>
              Looks up a localized string similar to The BPC tolerance cannot be negative..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramInfo_CanOnlyGetAdcChannelIndexForAnAdc">
            <summary>
              Looks up a localized string similar to Can only get ADC channel index for an ADC..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramInfo_CanOnlyGetBpcInfoForABpc">
            <summary>
              Looks up a localized string similar to Can only get BPC info for a BPC..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramInfo_CanOnlyGetWavelengthForAnXwc">
            <summary>
              Looks up a localized string similar to Can only get wavelength for an XWC..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramInfo_CanOnlyGetXicEndMassForScanXic">
            <summary>
              Looks up a localized string similar to Can only get XIC end mass for a scan XIC..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramInfo_CanOnlyGetXicMassIndexForAnIndexedXic">
            <summary>
              Looks up a localized string similar to Can only get XIC mass index for an indexed XIC..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramInfo_CanOnlyGetXicStartMassForScanXic">
            <summary>
              Looks up a localized string similar to Can only get XIC start mass for a scan XIC..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramInfo_CanOnlySetBpcInfoForABpc">
            <summary>
              Looks up a localized string similar to Can only set BPC info for a BPC..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramInfo_CanOnlySetBpcMassesForBpc">
            <summary>
              Looks up a localized string similar to Can only set BPC masses for a BPC..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramInfo_InvalidBpcMassRange">
            <summary>
              Looks up a localized string similar to Invalid BPC mass range..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramInfo_InvalidCycleRange">
            <summary>
              Looks up a localized string similar to Invalid cycle range..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ChromatogramInfo_LengthMismatchOfStartAndEndBpcMasses">
            <summary>
              Looks up a localized string similar to Length mismatch of start and end BPC masses..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_DADMethod_DadMethodHasNoData">
            <summary>
              Looks up a localized string similar to DAD method has no data..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_DADMethod_InvalidStepWavelength">
            <summary>
              Looks up a localized string similar to Invalid step wavelength..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_DADMethod_InvalidWavelengthRange">
            <summary>
              Looks up a localized string similar to Invalid wavelength range..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_DADMethod_NullOrEmptyTimeArray">
            <summary>
              Looks up a localized string similar to Null or empty time array..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_DADMethod_TimesMustBeInIncreasingOrder">
            <summary>
              Looks up a localized string similar to Times must be in increasing order..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_DefaultTofCalibration_InvalidAParameter">
            <summary>
              Looks up a localized string similar to Invalid &apos;a&apos; parameter..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_DefaultTofCalibration_InvalidNumberOfTimeBinsToSum">
            <summary>
              Looks up a localized string similar to Invalid number of time bins to sum..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_DefaultTofCalibration_InvalidTimeResolution">
            <summary>
              Looks up a localized string similar to Invalid time resolution..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_DefaultTofCalibration_TheACalibrationParameterMustBePositive">
            <summary>
              Looks up a localized string similar to The &quot;a&quot; calibration parameter must be positive..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ExtractIDAProductSpectra_CanOnlyGetScoreForProductSpectra">
            <summary>
              Looks up a localized string similar to Can only get score for product spectra..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_ExtractIDAProductSpectra_MultiplePeriodsAreNotSupported">
            <summary>
              Looks up a localized string similar to Multiple periods are not supported..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_FManChromatogram_CannotGetAdcForTheAdcChannelMustBeInTheRangeTo_3">
            <summary>
              Looks up a localized string similar to Cannot get ADC for {0}: The ADC channel ({1}) must be in the range 1 to {2}..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_FManChromatogram_CannotGetTwcBecauseTheSampleDoesNotContainDadData">
            <summary>
              Looks up a localized string similar to Cannot get TWC because the sample does not contain DAD data..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_FManChromatogram_CannotGetXicBecauseStartMassIsGreaterThanEndMass">
            <summary>
              Looks up a localized string similar to Cannot get XIC because the start mass is greater than the end mass..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_FManChromatogram_CannotGetXicForPeriodExperimentDoesNotContainScanData_3">
            <summary>
              Looks up a localized string similar to Cannot get XIC for {0}: Period {1}, experiment {2} does not contain scan data..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_FManChromatogram_CannotGetXicForTheMassRangeMustBeInTheRangeTo_3">
            <summary>
              Looks up a localized string similar to Cannot get XIC for {0}: The mass range ({1}) must be in the range 1 to {2}..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_FManChromatogram_CannotGetXicForTheScanTypeForPeriodExperimentIsNotMrmOrSim_3">
            <summary>
              Looks up a localized string similar to Cannot get XIC for {0}: The scan type for period {1}, experiment {2} is not MRM or SIM..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_FManChromatogram_CannotGetXwcBecauseTheSampleDoesNotContainDadData">
            <summary>
              Looks up a localized string similar to Cannot get XWC because the sample does not contain DAD data..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_FManChromatogram_CannotGetXwcBecauseTheStartWavelengthIsGreaterThanTheEndWavelength">
            <summary>
              Looks up a localized string similar to Cannot get XWC because the start wavelength is greater than the end wavelength..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_FManChromatogram_EndCycleIsLessThanStartCycle">
            <summary>
              Looks up a localized string similar to The end cycle is less than the start cycle..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_FManChromatogram_EndCycleIsOutOfRange">
            <summary>
              Looks up a localized string similar to The end cycle is out of range..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_FManChromatogram_StartCycleIsNegative">
            <summary>
              Looks up a localized string similar to The start cycle is negative..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_FManMassSpectrum_SpecifiedCycleIsNegative">
            <summary>
              Looks up a localized string similar to The specified cycle is negative..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_FManMassSpectrum_SpecifiedCycleIsOutOfRangeItMustBeLessThan_2">
            <summary>
              Looks up a localized string similar to The specified cycle ({0}) is out of range. It must be less than {1}..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_FManWavelengthSpectrum_CannotSetWavelengthSpectrumTheSampleDoesNotHaveDadData">
            <summary>
              Looks up a localized string similar to Cannot set wavelength spectrum: The sample does not have DAD data..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_FManWavelengthSpectrum_CannotSetWavelengthSpectrumTheStartIndexIsGreaterThanTheEnd">
            <summary>
              Looks up a localized string similar to Cannot set wavelength spectrum: The start index is greater than the end..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_FManXYData_ANegativeExperimentNumberIsNotAllowed">
            <summary>
              Looks up a localized string similar to A negative experiment number is not allowed..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_FManXYData_ANegativePeriodNumberIsNotAllowed">
            <summary>
              Looks up a localized string similar to A negative period number is not allowed..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_FManXYData_CannotDeserialiseFManXYDataBecauseGetFManDuringDeserialisationPropertyHasNotBeenSet">
            <summary>
              Looks up a localized string similar to Cannot deserialise FManXYData because the GetFManDuringDeserialisation property has not been set..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_FManXYData_ExperimentNumberForIsOutOfRangeItMustBeBetween_3">
            <summary>
              Looks up a localized string similar to The experiment number ({0}) for &quot;{1}&quot; is out of range: It must be between 1 and {2}..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_FManXYData_FindCycleCannotBeUsedWithMultiPeriodDataUseFindCycleInstead">
            <summary>
              Looks up a localized string similar to FindCycle cannot be used with multi-period data. Use FMan.FindCycle instead..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_FManXYData_GetFManDuringDeserialisationReturnedNull">
            <summary>
              Looks up a localized string similar to FManXYData.GetFManDuringDeserialisation returned null..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_FManXYData_PeriodNumberForIsOutOfRangeItMustBeBetween">
            <summary>
              Looks up a localized string similar to The period number ({0}) for &quot;{1}&quot; is out of range: It must be between 1 and {2}..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_InstrumentParameter_StartStopAndStepValuesAreNotAvailable">
            <summary>
              Looks up a localized string similar to Start, stop and step values are not available..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_InstrumentParameterCollection_CollectionAlreadyContainsAnItemWithSpecifiedName">
            <summary>
              Looks up a localized string similar to Collection already contains an item with specified name..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_InstrumentParameterCollection_NullOrEmptyParameterName">
            <summary>
              Looks up a localized string similar to Null or empty parameter name..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_MassSpectrumInfo_CanOnlyGetOrSetParentMzForProductScans">
            <summary>
              Looks up a localized string similar to Can only get or set parent m/z for product scans..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_MassSpectrumInfo_CanOnlyGetParentChargeForProductScans">
            <summary>
              Looks up a localized string similar to Can only get parent charge for product scans..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_MassSpectrumInfo_CanOnlySetParentChargeForProductScans">
            <summary>
              Looks up a localized string similar to Can only set parent charge for product scans..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_MassSpectrumInfo_InvalidCycleRange">
            <summary>
              Looks up a localized string similar to Invalid cycle range..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_MassSpectrumInfo_InvalidMassIndexRange">
            <summary>
              Looks up a localized string similar to Invalid mass index range..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_MassSpectrumInfo_InvalidMsLevel">
            <summary>
              Looks up a localized string similar to Invalid MS level..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_MassSpectrumInfo_InvalidNumberOfPrecursorMasses">
            <summary>
              Looks up a localized string similar to Invalid number of precursor masses..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_MSExperiment_IncorrectNumberOfDwellTimes">
            <summary>
              Looks up a localized string similar to Incorrect number of dwell times..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_MSExperiment_IncorrectNumberOfStepSizes">
            <summary>
              Looks up a localized string similar to Incorrect number of step sizes..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_MSExperiment_InvalidCountConversionFactorsLength">
            <summary>
              Looks up a localized string similar to Invalid countConversionFactors length..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_MSExperiment_InvalidEndMasses">
            <summary>
              Looks up a localized string similar to Invalid end masses..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_MSExperiment_InvalidEndRtsLength">
            <summary>
              Looks up a localized string similar to Invalid endRTs length..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_MSExperiment_InvalidExpectedRtsLength">
            <summary>
              Looks up a localized string similar to Invalid expectedRTs length..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_MSExperiment_InvalidFixedMassesLength">
            <summary>
              Looks up a localized string similar to Invalid fixedMasses length..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_MSExperiment_InvalidIsolationWindowsLength">
            <summary>
              Looks up a localized string similar to Invalid isolationWindows length..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_MSExperiment_InvalidMassNamesLength">
            <summary>
              Looks up a localized string similar to Invalid mass names length..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_MSExperiment_InvalidMsLevel">
            <summary>
              Looks up a localized string similar to Invalid MS level..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_MSExperiment_InvalidNumberOfCycles">
            <summary>
              Looks up a localized string similar to Invalid number of cycles..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_MSExperiment_InvalidQ3Masses">
            <summary>
              Looks up a localized string similar to Invalid Q3 masses..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_MSExperiment_InvalidStartRtsLength">
            <summary>
              Looks up a localized string similar to Invalid startRTs length..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_MSExperiment_NoMasses">
            <summary>
              Looks up a localized string similar to No masses..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_MSExperiment_NoMassRanges">
            <summary>
              Looks up a localized string similar to No mass ranges..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_MSExperiment_UnknownExperimentType">
            <summary>
              Looks up a localized string similar to Unknown experiment type..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_MSMethod_InvalidPeriodNumber">
            <summary>
              Looks up a localized string similar to Invalid period number..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_MSMethod_NullExperiment">
            <summary>
              Looks up a localized string similar to Null experiment..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_OrthogonalMSExperiment_NullOrEmptyParentMasses">
            <summary>
              Looks up a localized string similar to Null or empty parent masses..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_OrthogonalMSExperiment_ParentMassesMustBeInIncreasingOrder">
            <summary>
              Looks up a localized string similar to The parent masses must be in increasing order..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_RecalibrateSampleHelper_PeriodIndexIsOutOfRange">
            <summary>
              Looks up a localized string similar to Period index is out of range..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_RecalibrateSpectrumOperation_CannotRecalibrateBecauseThereIsNoOriginalCalibration">
            <summary>
              Looks up a localized string similar to Cannot recalibrate because there is no original calibration..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_SampleInfo_InvalidDilutionFactor">
            <summary>
              Looks up a localized string similar to Invalid dilution factor..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_SelectOneDialog_CorruptSample">
            <summary>
              Looks up a localized string similar to This sample is corrupted. Select another sample or file..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_WavelengthSpectrumInfo_InvalidSpectrumIndexRange">
            <summary>
              Looks up a localized string similar to Invalid spectrum index range..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_XicCalculator_AllXicCalculatorItemsForSameExperimentMustBeFullScan">
            <summary>
              Looks up a localized string similar to All XicCalculatorItems for same experiment must be full scan..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_XicCalculator_AllXicCalculatorItemsForSameExperimentMustBeIndexed">
            <summary>
              Looks up a localized string similar to All XicCalculatorItems for same experiment must be indexed..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_XicCalculator_ValueMustBeAtLeastOneMb">
            <summary>
              Looks up a localized string similar to The value must be at least 1 MB..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_XicCalculator_YouMustCallSetItems">
            <summary>
              Looks up a localized string similar to You must call SetItems..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_XicCalculatorItem_EmptyMassIndexArray">
            <summary>
              Looks up a localized string similar to Empty mass index array..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_XicCalculatorItem_EndCycleIsLargerThanAvailableCycles">
            <summary>
              Looks up a localized string similar to End cycle is larger than available cycles..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_XicCalculatorItem_InvalidMassArrayLength">
            <summary>
              Looks up a localized string similar to Invalid mass array length..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_XicCalculatorItem_InvalidMassRange">
            <summary>
              Looks up a localized string similar to Invalid mass range..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_XicCalculatorItem_NegativeMassIndex">
            <summary>
              Looks up a localized string similar to Negative mass index..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GE_XicCalculatorItem_StartTimeCannotBeGreaterThanEnd">
            <summary>
              Looks up a localized string similar to Start time cannot be greater than end..
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_ChromatogramHelper_Experiment_1">
            <summary>
              Looks up a localized string similar to , Experiment {0}.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_ChromatogramHelper_Name_1">
            <summary>
              Looks up a localized string similar to , {0}.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_ChromatogramHelper_Period_1">
            <summary>
              Looks up a localized string similar to , Period {0}.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_ChromatogramHelper_SampleName_2">
            <summary>
              Looks up a localized string similar to {0} - {1}.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_ChromatogramHelperData_BpcFrom_3">
            <summary>
              Looks up a localized string similar to BPC from {0}{1}{2}.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_ChromatogramHelperData_TicFrom_2">
            <summary>
              Looks up a localized string similar to TIC from {0}{1}.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_ChromatogramHelperData_XicFrom_3">
            <summary>
              Looks up a localized string similar to XIC from {0}{1}: {2}.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_ChromatogramHelperData_XicFrom_4">
            <summary>
              Looks up a localized string similar to XIC from {0}{1}: {2} {3}.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_CreateMethodXml_Millisecond_1">
            <summary>
              Looks up a localized string similar to {0} ms.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_CreateMethodXml_Negative">
            <summary>
              Looks up a localized string similar to Negative.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_CreateMethodXml_Nm_1">
            <summary>
              Looks up a localized string similar to {0} nm.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_CreateMethodXml_No">
            <summary>
              Looks up a localized string similar to No.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_CreateMethodXml_Positive">
            <summary>
              Looks up a localized string similar to Positive.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_CreateMethodXml_Yes">
            <summary>
              Looks up a localized string similar to Yes.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_FManMassSpectrum_Ce_1">
            <summary>
              Looks up a localized string similar to , CE: {0}.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_FManMassSpectrum_Charge_1">
            <summary>
              Looks up a localized string similar to , Charge: {0}.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_FManMassSpectrum_Experiment_1">
            <summary>
              Looks up a localized string similar to Experiment {0}, .
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_FManMassSpectrum_FromToMin_1">
            <summary>
              Looks up a localized string similar to  from {0} min.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_FManMassSpectrum_FromToMin_2">
            <summary>
              Looks up a localized string similar to  from {0} to {1} min.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_FManMassSpectrum_NameStart_2">
            <summary>
              Looks up a localized string similar to {0} = {1}.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_FManMassSpectrum_NameStartEnd_2">
            <summary>
              Looks up a localized string similar to {0} = {1} to {2}.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_FManMassSpectrum_NameStartEndUnit_3">
            <summary>
              Looks up a localized string similar to {0} = {1} to {2} {3}.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_FManMassSpectrum_NameStartUnit_3">
            <summary>
              Looks up a localized string similar to {0} = {1} {2}.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_FManMassSpectrum_Period_1">
            <summary>
              Looks up a localized string similar to Period {0}, .
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_FManMassSpectrum_Precursor_2">
             <summary>
               Looks up a localized string similar to 
            Precursor: {0} {1}.
             </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_FManMassSpectrum_Precursors_2">
             <summary>
               Looks up a localized string similar to 
            Precursors: {0} {1}.
             </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_FManMassSpectrum_Precursors_3">
             <summary>
               Looks up a localized string similar to 
            Precursors: {0} to {1} {2}.
             </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_FManMassSpectrum_SpectrumFrom_1">
            <summary>
              Looks up a localized string similar to Spectrum from {0}.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_FManMassSpectrum_SpectrumFrom_2">
            <summary>
              Looks up a localized string similar to Spectrum from {0} - {1}.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_FManSample_FindFile_1">
            <summary>
              Looks up a localized string similar to Find &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_InstrumentParameter_NA">
            <summary>
              Looks up a localized string similar to N/A.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_InstrumentParameter_To_2">
            <summary>
              Looks up a localized string similar to {0} to {1}.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_ParametersXmlHelper_To_2">
            <summary>
              Looks up a localized string similar to {0} to {1}.
            </summary>
        </member>
        <member name="P:Sciex.FMan.Resources.GL_RecalibrateSpectrumOperation_Recalibrated">
            <summary>
              Looks up a localized string similar to Recalibrated.
            </summary>
        </member>
        <member name="T:Sciex.FMan.SampleInfo">
            <summary>
            This class holds information about a sample.
            </summary>
        </member>
        <member name="M:Sciex.FMan.SampleInfo.#ctor(System.String,System.String,System.DateTime)">
            <summary>
            Constructor.
            </summary>
            <param name="sampleName">Name of sample.</param>
            <param name="sampleID">ID of sample.</param>
            <param name="dateTime">Acquisition date and time.</param>
        </member>
        <member name="M:Sciex.FMan.SampleInfo.SetRackPlateVial(System.String,System.String,System.String)">
            <summary>
            Sets the rack and vial positions. If this method is never called we 
            return null if these fields are requested.
            </summary>
        </member>
        <member name="M:Sciex.FMan.SampleInfo.AddPeakConcentration(System.String,System.Double)">
            <summary>
            Adds the concentration for the given compound to our list. However, if we
            already have a peak with the specified name we do nothing.
            </summary>
            <param name="peakName">Name of peak.</param>
            <param name="concentration">Concentration for compound.</param>
        </member>
        <member name="M:Sciex.FMan.SampleInfo.AddCustomField(System.String,System.String)">
            <summary>
            Adds the custom field for the given "column" to our list. If we already
            have a value with the specified field name we do nothing.
            </summary>
            <param name="fieldName">Name of field (or column).</param>
            <param name="value">Value for field.</param>
        </member>
        <member name="M:Sciex.FMan.SampleInfo.GetPeakName(System.Int32)">
            <summary>
            Returns the name of the peak with the given index.
            </summary>
            <param name="index">Index of peak.</param>
            <returns>Name of requested peak.</returns>
        </member>
        <member name="M:Sciex.FMan.SampleInfo.GetPeakConcentration(System.Int32)">
            <summary>
            Returns the concentration of the compound with the given peak index.
            </summary>
            <param name="index">Index of peak.</param>
            <returns>The concentration.</returns>
        </member>
        <member name="M:Sciex.FMan.SampleInfo.GetPeakConcentration(System.String)">
            <summary>
            Returns the concentration of the compound with the given peak name. If the
            AddPeakConcentration () method was never called for this peak we return 0.0.
            </summary>
            <param name="peakName">Name of compound.</param>
            <returns>The concentration (or 0.0).</returns>
        </member>
        <member name="M:Sciex.FMan.SampleInfo.GetCustomFieldName(System.Int32)">
            <summary>
            Returns the name of the custom field with the given index.
            </summary>
            <param name="index">Index of field.</param>
            <returns>Name of requested field.</returns>
        </member>
        <member name="M:Sciex.FMan.SampleInfo.GetCustomFieldValue(System.Int32)">
            <summary>
            Returns the value of the custom field with the given index.
            </summary>
            <param name="index">Index of field.</param>
            <returns>Value of requested field.</returns>
        </member>
        <member name="M:Sciex.FMan.SampleInfo.GetCustomFieldValue(System.String)">
            <summary>
            Returns the value of the custom field with the given name. If we have no
            such field with the given name we return null, otherwise the value.
            </summary>
            <param name="fieldName">Name of field.</param>
            <returns>Value of requested field or null if not present.</returns>
        </member>
        <member name="P:Sciex.FMan.SampleInfo.IsBeingAcquired">
            <summary>
            Returns true if this sample is currently in the process of being acquired.
            </summary>
        </member>
        <member name="P:Sciex.FMan.SampleInfo.IsSampleRealTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:Sciex.FMan.SampleInfo.SampleName">
            <summary>
            Returns the sample name.
            </summary>
        </member>
        <member name="P:Sciex.FMan.SampleInfo.SampleID">
            <summary>
            Returns the sample ID.
            </summary>
        </member>
        <member name="P:Sciex.FMan.SampleInfo.DateTime">
            <summary>
            Returns the acquisition date and time.
            </summary>
        </member>
        <member name="P:Sciex.FMan.SampleInfo.Rack">
            <summary>
            Returns the rack position (or null if never set).
            </summary>
        </member>
        <member name="P:Sciex.FMan.SampleInfo.Plate">
            <summary>
            Returns the plate position (or null if never set).
            </summary>
        </member>
        <member name="P:Sciex.FMan.SampleInfo.Vial">
            <summary>
            Returns the vial position (or null if never set).
            </summary>
        </member>
        <member name="P:Sciex.FMan.SampleInfo.SampleComment">
            <summary>
            Gets or sets the comment field.
            </summary>
        </member>
        <member name="P:Sciex.FMan.SampleInfo.UserName">
            <summary>
            Gets or sets the name of the user who acquired the sample.
            </summary>
        </member>
        <member name="P:Sciex.FMan.SampleInfo.InjectionVolume">
            <summary>
            Gets or sets the injection volume. By default we return 0.0 if this field
            has never been set.
            </summary>
        </member>
        <member name="P:Sciex.FMan.SampleInfo.AcquisitionMethodName">
            <summary>
            Gets or sets the name of the acquisition method used to acquire the data.
            </summary>
        </member>
        <member name="P:Sciex.FMan.SampleInfo.SampleType">
            <summary>
            Gets or sets or quantitation sample type. If the "set" method is never called
            we return kUnknown.
            </summary>
        </member>
        <member name="P:Sciex.FMan.SampleInfo.DilutionFactor">
            <summary>
            Gets or sets the dilution factor. This will always be a positive value.
            </summary>
        </member>
        <member name="P:Sciex.FMan.SampleInfo.NumPeakConcentrations">
            <summary>
            Returns the number of peak concentration values. If AddPeakConcentration() was
            never called this will be zero.
            </summary>
            <returns>Number of available peak concentrations.</returns>
        </member>
        <member name="P:Sciex.FMan.SampleInfo.NumCustomFields">
            <summary>
            Returns the number of custom fields. If AddCustomField() was never called
            this will be zero.
            </summary>
        </member>
        <member name="T:Sciex.FMan.InstrumentParameter">
            <summary>
            This class defines an InstrumentParameter. It contains ONE of a single-valued
            untyped parameter or a double parameter with start, stop and step values.
            </summary>
        </member>
        <member name="M:Sciex.FMan.InstrumentParameter.#ctor(System.String,System.Object,System.String)">
            <summary>
            Creates a new object which has a single value (i.e. not a start, stop and step).
            If "value" is of type double then the overloaded (string, double) constructor
            should be used instead.
            </summary>
            <param name="name">Parameter name.</param>
            <param name="value">Parameter value.</param>
            <param name="units">Parameter units.</param>
        </member>
        <member name="M:Sciex.FMan.InstrumentParameter.#ctor(System.String,System.Double,System.String)">
            <summary>
            Creates a new object which has the start and stop value equal to "value" and
            a step value of zero.
            </summary>
            <param name="name">Parameter name.</param>
            <param name="value">Parameter value.</param>
            <param name="units">Parameter units.</param>
        </member>
        <member name="M:Sciex.FMan.InstrumentParameter.#ctor(System.String,System.Double,System.Double,System.Double,System.String)">
            <summary>
            Creates a new object which has the specified start, stop and step.
            </summary>
            <param name="name">Parameter name.</param>
            <param name="start">Starting value.</param>
            <param name="stop">Ending value.</param>
            <param name="step">Step size.</param>
            <param name="units">Parameter units.</param>
        </member>
        <member name="M:Sciex.FMan.InstrumentParameter.ToString">
            <summary>
            Converts this parameter to a string.
            </summary>
            <returns>The string.</returns>
        </member>
        <member name="M:Sciex.FMan.InstrumentParameter.ToString(System.String)">
            <summary>
            Converts this parameter to a string.
            </summary>
            <param name="format">Format for numbers.</param>
            <returns>The string.</returns>
        </member>
        <member name="M:Sciex.FMan.InstrumentParameter.Equals(System.Object)">
            <summary>
            Overriden to compare this instance to "obj" for equality.
            </summary>
            <param name="obj">Object to which we compare.</param>
            <returns>True iff we equal "obj".</returns>
        </member>
        <member name="M:Sciex.FMan.InstrumentParameter.GetHashCode">
            <summary>
            Overridden because we override Equals.
            </summary>
            <returns>An optimised hashcode.</returns>
        </member>
        <member name="M:Sciex.FMan.InstrumentParameter.op_Equality(Sciex.FMan.InstrumentParameter,Sciex.FMan.InstrumentParameter)">
            <summary>
            Compares the two objects using "Equals". not by reference.
            </summary>
            <param name="x">First object to compare.</param>
            <param name="y">Second object to compare.</param>
            <returns>True iff objects are equal.</returns>
        </member>
        <member name="M:Sciex.FMan.InstrumentParameter.op_Inequality(Sciex.FMan.InstrumentParameter,Sciex.FMan.InstrumentParameter)">
            <summary>
            Compares the two objects using "Equals", not by reference.
            </summary>
            <param name="x">First object to compare.</param>
            <param name="y">Second object to compare.</param>
            <returns>True iff objects are not equal.</returns>
        </member>
        <member name="M:Sciex.FMan.InstrumentParameter.ThrowIfDontHaveStartStopStep">
            <summary>
            This method throws an exception if HaveStartStopStep is false.
            </summary>
        </member>
        <member name="P:Sciex.FMan.InstrumentParameter.Name">
            <summary>
            Returns the name of this parameter.
            </summary>
        </member>
        <member name="P:Sciex.FMan.InstrumentParameter.Value">
            <summary>
            Returns the value of this parameter. For the case of a parameter with a start and
            stop value, the return value is null if the start and stop are not equal, otherwise
            that value.
            </summary>
        </member>
        <member name="P:Sciex.FMan.InstrumentParameter.HaveStartStopStep">
            <summary>
            Returns true if we have a start, stop and step value. If not, it is not valid
            to use the Start, Stop and Step properties (just the Value property).
            </summary>
        </member>
        <member name="P:Sciex.FMan.InstrumentParameter.Start">
            <summary>
            Returns our start value. It is an error to acess this property if
            HaveStartStopStep is false.
            </summary>
        </member>
        <member name="P:Sciex.FMan.InstrumentParameter.Stop">
            <summary>
            Returns our stop value. It is an error to acess this property if
            HaveStartStopStep is false.
            </summary>
        </member>
        <member name="P:Sciex.FMan.InstrumentParameter.Step">
            <summary>
            Returns our step value. It is an error to acess this property if
            HaveStartStopStep is false.
            </summary>
        </member>
        <member name="P:Sciex.FMan.InstrumentParameter.Units">
            <summary>
            Returns our units (which may be null or empty).
            </summary>
        </member>
        <member name="P:Sciex.FMan.InstrumentParameter.Hidden">
            <summary>
            Gets or sets whether this parameter is considered to be "hidden" from the main
            user interface. If so, it may still be shown in the detailed "Sample Information",
            but not in most of the UI.
            </summary>
        </member>
        <member name="T:Sciex.FMan.ChromatogramHelperData">
            <summary>
            This class holds the result of a TIC, XIC or BPC calculation by the ChromatogramHelper
            class.
            </summary>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelperData.#ctor(Sciex.FMan.IFMan,Sciex.FMan.FManSample,Sciex.FMan.MSMethod,Sciex.FMan.ChromatogramHelper.ChroType,System.Int32,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="fman">FMan object.</param>
            <param name="sample">Our sample.</param>
            <param name="method">MS method.</param>
            <param name="chroType">Type of chromatogram.</param>
            <param name="period">Period number.</param>
            <param name="experiment">Experiment number.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelperData.SetXICRange(System.Double,System.Double)">
            <summary>
            Sets the XIC range.
            </summary>
            <param name="startMass">Starting mass.</param>
            <param name="endMass">Ending mass.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelperData.SetBPCRanges(System.Double,System.Double[],System.Double[])">
            <summary>
            Sets the mass ranges used for the BPC calculation. Null values are allowed and 
            result in the entire mass range being used.
            </summary>
            <param name="massTolerance">Tolerance for BPC calculation.</param>
            <param name="startMasses">Array of starting masses.</param>
            <param name="endMasses">Array of ending masses.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelperData.SetXICIndex(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets our indexed XIC index.
            </summary>
            <param name="index">XIC index.</param>
            <param name="startCycle"> Start cycle index</param>
            <param name="endCycle"> End cycle index </param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelperData.SetUseLimitedRange(System.Int32,System.Int32)">
            <summary>
            This routine sets "fUsedLimitedRange" to true (and also sets fStartCycle and
            fEndCycle) if we should calculate a limited cycle-range XIC. This is the case for
            scheduled MRM data. For sMRM, there will be many cycles for which a given ion
            is not run - it is much more efficient to just calculate the XIC over the 
            required range.
            </summary>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelperData.GetLimitedCycleRange(System.Int32@,System.Int32@)">
            <summary>
            Returns the cycle range we will use to limited our calculation. This currently only
            applies for scheduled-MRM data. If we are not using a limited cycle range, the 
            paramters are both set to -1.
            </summary>
            <param name="startCycle">Set to start cycle or -1.</param>
            <param name="endCycle">Set to end cycle or -1.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelperData.SetXYValues(System.Double[],System.Double[])">
            <summary>
            Sets the times and intensities. Most callers should never need to call this method if
            they use the ChromatogramHelper class to create a populated instance of this object.
            Setting these values is only necessary if the actual calculation is bypassed because
            there is a more efficient way to obtain the x and y values.
            </summary>
            <param name="times">Array of times.</param>
            <param name="intensities">Array of y-values.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelperData.SetLogicalXRange(Sciex.FMan.FManChromatogram)">
            <summary>
            This method calls chro.SetLogicalXRange() to set a larger time range than the actual
            x-value span if needed. This is the case if a chromatogram for the full time range
            was requested, but the actual range is smaller because some data was not acquired;
            currently this is only the case for sMRM XICs.
            </summary>
            <param name="chro">Chromatogram to potentiall update.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelperData.PrependChromatogramInfo(Sciex.FMan.ChromatogramInfo,System.Double[],System.Double[])">
            <summary>
            This method pre-pends the provided times and intensities to our current times and
            intensities. It also updates our "Info" object by prepending data from "info" as
            required (for example base peak masses). Most callers should never need to use this
            method; it is used for updating a chromatogram which is in the process of being
            acquired with new data.
            </summary>
            <param name="info">Original info for prepending.</param>
            <param name="times">Original times for prepending.</param>
            <param name="yValues">Original intensities for prepending.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelperData.AllocateArrays(System.Int32,System.Int32,System.Int32)">
            <summary>
            Allocates space for our x and y values.
            </summary>
            <param name="startCycle">Start cycle to process.</param>
            <param name="endCycle">End cycle to process or -1 to indicate "all".</param>
            <param name="totalCycles">Total number of points.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelperData.SetTime(System.Double,System.Int32,System.Int32)">
            <summary>
            Sets the specified x-value.
            </summary>
            <param name="time">Retention time.</param>
            <param name="cycle">Cycle index.</param>
            <param name="chroIndex">Data point number.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelperData.SetXICYValue(Sciex.FMan.IGetIntensitySum,Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            XICs need to be optimised and are treated in a special way. The "chroIndex"
            parameter is the current data point number; for a description of the other parameters
            see the IGetIntensitySum.GetIntensitySum method.
            </summary>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelperData.SetYValue(Sciex.FMan.FManMassSpectrum,Clearcore2.Data.CommonInterfaces.IRawXYData,System.Int32,System.Int32)">
            <summary>
            Sets one of our y-values. When processing profile mass spectra, "spectrum" should
            be set to the current spectrum, otherwise (when processing peak lists) it is null.
            The "xySpectrum" must not be null.
            </summary>
            <param name="spectrum">Current spectrum or null.</param>
            <param name="xySpectrum">Current spectrum.</param>
            <param name="cycle">Cycle index.</param>
            <param name="chroIndex">Index in y-values array to set.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelperData.ConvertIndex(System.Int32,System.Int32)">
            <summary>
            Given a cycle number and a chromatogram index, this routine determines which one
            is applicable and returns that value. If we are limiting the cycle range, we need
            to use the cycle. In this case we need to subtract the starting cycle to get
            a zero-based index into our arrays (and a negative return value means that this
            cycle is not processed). Otherwise we use "chroIndex" directly. This is OFTEN the
            same as the cycle index, but will not be if a multiple-period TIC is being 
            used (since this index spans all periods) or if our ChromatogramHelper is itself
            using a limited cycle range (but we are not).
            </summary>
            <param name="cycle">Cycle number.</param>
            <param name="chroIndex">Index in array.</param>
            <returns>(Potentially) converted index.</returns>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelperData.ProcessTIC(Clearcore2.Data.CommonInterfaces.IRawXYData,System.Int32)">
            <summary>
            Sets the TIC value.
            </summary>
            <param name="spectrum">Current spectrum.</param>
            <param name="chroIndex">Index in y-values array to set.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelperData.ProcessBPC(Clearcore2.Data.CommonInterfaces.IRawXYData,System.Int32)">
            <summary>
            Sets the BPC value.
            </summary>
            <param name="spectrum">Current spectrum.</param>
            <param name="chroIndex">Index in y-values array to set.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelperData.GetBPCIndex(Clearcore2.Data.CommonInterfaces.IRawXYData)">
            <summary>
            This routine returns the index of the point in "spectrum" with the largest
            y-value. If we are using a limited range BPC, the point is contrained to lie
            within the allowed mass range.
            </summary>
            <param name="spectrum">The spectrum to filter.</param>
            <returns>Index of max y-value or -1 if none.</returns>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelperData.ProcessXIC(Sciex.FMan.FManMassSpectrum,Clearcore2.Data.CommonInterfaces.IRawXYData,System.Int32)">
            <summary>
            Sets the XIC value. If "spectrum" is not null it is used to determine the local
            step size. 
            </summary>
            <param name="spectrum">Current spectrum OR null.</param>
            <param name="xySpectrum">Current spectrum</param>
            <param name="chroIndex">Index in y-values array to set.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelperData.FinishCalculate">
            <summary>
            We override this method to prune our fTimes and fYValues if needed... We need
            to do this if we're dealing with scheduled MRM data AND if the RT acquisition
            window could not be determined. In this case we want to remove any points with
            zero intensity from the start and end of our arrays to make life easier for our
            callers - it will be much more efficient for them to deal only with the range
            of valid data (as opposed to data padded with many leading and trailing zeros).
            Note that if we CAN determine the RT window (for sMRM) there is nothing to do
            since the XIC was only calculated over that limited range.
            </summary>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelperData.RemoveFirstAndLastZeros">
            <summary>
            Removes any initial or trailing data points from "fTimes" and "fYValues"
            for which the y-value is zero. See the comment in FinishCalculate.
            </summary>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelperData.SetDescription(Sciex.FMan.MSMethod,System.String,System.String)">
            <summary>
            Sets our description.
            </summary>
            <param name="method">Acquisition method.</param>
            <param name="sampleName">Name of sample.</param>
            <param name="exptString">String describing period and experiment.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelperData.GetXICMassRangeString(Sciex.FMan.MSMethod)">
            <summary>
            This routine returns a string containing the XIC mass range.
            </summary>
            <param name="method">Acquisition method.</param>
            <returns>Mass range string.</returns>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelperData.GetIndexedXICMassRangeStringAndSetID(Sciex.FMan.MSMethod)">
            <summary>
            Returns a string containing the MRM or SIM XIC mass range.
            </summary>
            <param name="method">Acquisition method.</param>
            <returns>Mass range string.</returns>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelperData.GetBPCMassRangeString">
            <summary>
            This routine returns a string containing the limited mass range BPC information; if the
            full mass range was used, an empty string is returned.
            </summary>
            <returns>Mass range string for BPC.</returns>
        </member>
        <member name="M:Sciex.FMan.ChromatogramHelperData.Combine(System.Double[],System.Double[])">
            <summary>
            Returns a new array combining the values from "values1" followed by "values2".
            </summary>
            <param name="values1">First values for new array.</param>
            <param name="values2">Last values for new array.</param>
            <returns>New combined array.</returns>
        </member>
        <member name="P:Sciex.FMan.ChromatogramHelperData.Sample">
            <summary>
            Returns our sample.
            </summary>
        </member>
        <member name="P:Sciex.FMan.ChromatogramHelperData.Times">
            <summary>
            Returns the array of times (in minutes) for this chromatogram.
            </summary>
        </member>
        <member name="P:Sciex.FMan.ChromatogramHelperData.Intensities">
            <summary>
            Returns the array of intensities for this chromatogram. 
            </summary>
        </member>
        <member name="P:Sciex.FMan.ChromatogramHelperData.Info">
            <summary>
            Returns the object holding information about this chromatogram. 
            </summary>
        </member>
        <member name="P:Sciex.FMan.ChromatogramHelperData.Description">
            <summary>
            Returns a string describing this chromatogram. 
            </summary>
        </member>
        <member name="P:Sciex.FMan.ChromatogramHelperData.ID">
            <summary>
            Returns an ID (which may be null) describing this chromatogram.
            </summary>
        </member>
        <member name="P:Sciex.FMan.ChromatogramHelperData.KnownRTsWithUnknownWindow">
            <summary>
            Returns true if we are calculating an sMRM XIC and know the expected RT but
            not the RT window. See the comment in FinishCalculate.
            </summary>
        </member>
        <member name="T:Sciex.FMan.RecalibrateSpectrumOperation">
            <summary>
            This class recalibrates a spectrum.
            </summary>
        </member>
        <member name="F:Sciex.FMan.RecalibrateSpectrumOperation.kRecalibrateName">
            <summary>The name of this operation.</summary>
        </member>
        <member name="M:Sciex.FMan.RecalibrateSpectrumOperation.Perform(Sciex.FMan.FManMassSpectrum,Sciex.FMan.Calibration)">
            <summary>
            Runs the recalibration operation.
            </summary>
            <param name="spectrum">Spectrum to recalibrate.</param>
            <param name="newCalibration">New "a" parameter.</param>
        </member>
        <member name="M:Sciex.FMan.RecalibrateSpectrumOperation.#ctor(Sciex.FMan.Calibration)">
            <summary>
            Constructor.
            </summary>
            <param name="newCalibration">New calibration.</param>
        </member>
        <member name="M:Sciex.FMan.RecalibrateSpectrumOperation.#ctor(Sciex.FMan.RecalibrateSpectrumOperation)">
            <summary>
            Copy constructor.
            </summary>
            <param name="toCopy">Object to copy.</param>
        </member>
        <member name="M:Sciex.FMan.RecalibrateSpectrumOperation.Clone">
            <summary>
            Returns a deep copy of this object.
            </summary>
            <returns>Object to clone.</returns>
        </member>
        <member name="M:Sciex.FMan.RecalibrateSpectrumOperation.Perform(Sciex.Data.XYData.ArrayXYData)">
            <summary>
            Performs the recalibration operation.
            </summary>
            <param name="data">Data to process.</param>
        </member>
        <member name="M:Sciex.FMan.RecalibrateSpectrumOperation.GetDescription(System.Boolean)">
            <summary>
            Returns a description of this operation.
            </summary>
            <param name="detailed">Include details?</param>
            <returns>The description.</returns>
        </member>
        <member name="T:Sciex.FMan.InstrumentParametersHelper">
            <summary>
            This class is used to determine the collection of InstrumentParameters which 
            are varying for every experiment in a provided list of experiments.
            </summary>
        </member>
        <member name="M:Sciex.FMan.InstrumentParametersHelper.#ctor(Sciex.FMan.MSExperiment[])">
            <summary>
            Constructor. 
            </summary>
            <param name="experiments">List of experiments.</param>
        </member>
        <member name="M:Sciex.FMan.InstrumentParametersHelper.#ctor(Sciex.FMan.MSMethod)">
            <summary>
            Constructor. We use all experiments from the provided method.
            </summary>
            <param name="method">MSMethod.</param>
        </member>
        <member name="M:Sciex.FMan.InstrumentParametersHelper.GetVaryingParameters(Sciex.FMan.MSExperiment)">
            <summary>
            Given an experiment, returns the subset of parameters which are present in all
            experiments provided to our constructor AND which have a different value in 
            all cases.
            </summary>
            <param name="experiment">Experiment for which to get parameters.</param>
            <returns>The parameters.</returns>
        </member>
        <member name="M:Sciex.FMan.InstrumentParametersHelper.GetAllExperiments(Sciex.FMan.MSMethod)">
            <summary>
            Returns a list of all experiments associated with the provided method.
            </summary>
            <param name="method">MSMethod.</param>
            <returns>All experiments for method.</returns>
        </member>
        <member name="M:Sciex.FMan.InstrumentParametersHelper.Init(Sciex.FMan.MSExperiment[])">
            <summary>
            Determines which parameters are present in all of the provided experiments
            with varying values.
            </summary>
            <param name="experiments">Experiments to check.</param>
        </member>
        <member name="M:Sciex.FMan.InstrumentParametersHelper.GetExperimentParameters(Sciex.FMan.MSExperiment[])">
            <summary>
            Returns the experiment-level parameters associated with the provided
            experiments. The resulting list is the same length as the number of experiments.
            </summary>
            <param name="experiments">Experiments.</param>
            <returns>Experiment-level parameters.</returns>
        </member>
        <member name="M:Sciex.FMan.InstrumentParametersHelper.GetMassRangeParameters(Sciex.FMan.MSExperiment[])">
            <summary>
            Returns the mass-range-level parameters associated with the provided 
            experiments. Only parameters which are constant for all mass ranges (for
            the corresponding experiment) are considered. The return value is the same
            legnth as the number of experiments.
            </summary>
            <param name="experiments">Experiments to check.</param>
            <returns>Mass-range-level parameters.</returns>
        </member>
        <member name="M:Sciex.FMan.InstrumentParametersHelper.GetUnvaryingMassRangeParameters(Sciex.FMan.MSExperiment)">
            <summary>
            Given an experiment, returns a parameter collection containing only the 
            parameters which are present with a constant value in all mass ranges.
            </summary>
            <param name="experiment">Experiment to use.</param>
            <returns>Constant parameters for all mass ranges.</returns>
        </member>
        <member name="M:Sciex.FMan.InstrumentParametersHelper.GetVaryingParameters(Sciex.FMan.InstrumentParameterCollection[])">
            <summary>
            Given an array of parameters collections, returns the names of those parameters
            which are (1) present in all collections and (2) which have a different value
            in all cases. 
            </summary>
            <param name="ipcs"></param>
            <returns>The list of names (may be empty).</returns>
        </member>
        <member name="P:Sciex.FMan.InstrumentParametersHelper.NumVaryingParameters">
            <summary>
            Returns the total number of parameters which are present in all experiments
            provided to our constructor AND which have a different value in all cases.
            </summary>
        </member>
        <member name="T:Sciex.FMan.ADCMethod">
            <summary>
            Defines an ADCMethod object.
            </summary>
        </member>
        <member name="M:Sciex.FMan.ADCMethod.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Sciex.FMan.ADCMethod.AddADCChannel(System.String,System.String,System.String)">
            <summary>
            Adds an ADC channel.
            </summary>
            <param name="deviceName">Name of owning device.</param>
            <param name="channelName">Name of channel.</param>
            <param name="units">Units for channel.</param>
        </member>
        <member name="M:Sciex.FMan.ADCMethod.GetDeviceNameforChannelIndex(System.Int32)">
            <summary>
            Returns the name of the device associated with the ADC channel with the 
            specified flat channel index (this ranges from 0 to NumChannels - 1).
            </summary>
            <param name="channelIndex">Index of channel.</param>
            <returns>Name for device.</returns>
        </member>
        <member name="M:Sciex.FMan.ADCMethod.GetChannelName(System.Int32)">
            <summary>
            Returns the name of the ADC channel with the specified flat channel index 
            (this ranges from 0 to NumChannels - 1).
            </summary>
            <param name="channelIndex">Index of channel.</param>
            <returns>Name for channel.</returns>
        </member>
        <member name="M:Sciex.FMan.ADCMethod.GetDeviceAndChannelName(System.Int32)">
            <summary>
            Returns a string which combines both the device name and the channel name
            given a flat channel index (this ranges from 0 to NumChannels - 1).
            </summary>
            <param name="channelIndex">Index of channel.</param>
            <returns>Name for channel including device.</returns>
        </member>
        <member name="M:Sciex.FMan.ADCMethod.GetUnits(System.Int32)">
            <summary>
            Returns the units for the specified flat channel index (this ranges from 
            0 to NumChannels - 1). This method may return an empty string if units
            are not available.
            </summary>
            <param name="channelIndex">Index of channel.</param>
            <returns>Units for channel.</returns>
        </member>
        <member name="M:Sciex.FMan.ADCMethod.GetDeviceNameForDeviceIndex(System.Int32)">
            <summary>
            Returns the name of the device associated with the device with the specified
            index (which should range from 0 to NumDevices - 1).
            </summary>
            <param name="deviceIndex">Index of device.</param>
            <returns>Name for device.</returns>
        </member>
        <member name="M:Sciex.FMan.ADCMethod.GetNumChannelsForDevice(System.Int32)">
            <summary>
            Returns the total number of channels for the device with the specified index
            (which should range from 0 to NumDevices - 1).
            </summary>
            <param name="deviceIndex">Index of device.</param>
            <returns>The number of channels for the specified device.</returns>
        </member>
        <member name="M:Sciex.FMan.ADCMethod.GetChannelIndex(System.Int32,System.Int32)">
            <summary>
            Given the index of a device (which runs from 0 to NumDevices - 1) and a corresponding 
            device channel index (which runs from 0 to GetNumChannelsForDevice(deviceIndex) - 1),
            returns the corresponding "flat" channel index. This flat index is needed for 
            calling FManChromatogram.SetToADC().
            </summary>
            <param name="deviceIndex">Index of device.</param>
            <param name="deviceChannelIndex">Index of channel (for this device).</param>
            <returns>Flat index of channel in our list.</returns>
        </member>
        <member name="P:Sciex.FMan.ADCMethod.NumChannels">
            <summary>
            Returns the number of ADC channels for all devices.
            </summary>
        </member>
        <member name="P:Sciex.FMan.ADCMethod.NumDevices">
            <summary>
            Returns the number of different device names across all channels.
            </summary>
        </member>
        <member name="T:Sciex.FMan.SelectSampleHelper">
            <summary>
            This class is used to manage external UI which is attached to an FMan object.
            We keep track of the UI provider (ISelectSampleProvider), creating it if
            needed, and defer to it to implement the interface. 
            </summary>
        </member>
        <member name="M:Sciex.FMan.SelectSampleHelper.#ctor(Sciex.FMan.AbstractFMan)">
            <summary>
            Constructor.
            </summary>
            <param name="fman">Owning FMan.</param>
        </member>
        <member name="M:Sciex.FMan.SelectSampleHelper.Clone(Sciex.FMan.AbstractFMan)">
            <summary>
            Returns a copy of this object. If we have a valid ISelectSampleProvider
            we clone it if it supports ICloneable otherwise reuse it.
            </summary>
            <param name="fman">FMan for new instance.</param>
            <returns>The copy.</returns>
        </member>
        <member name="M:Sciex.FMan.SelectSampleHelper.SetProviderInfo(System.String,System.String)">
            <summary>
            This method sets the type name used to create a new instance of our
            ISelectSampleProvider object (and the data which is provided to it after
            construction). Note that if there is configuration file information
            which specifies a different provider, it takes precedence and what is
            set here is not used.
            </summary>
            <param name="typeName">Type name with assembly name for Type.GetType().</param>
            <param name="data">Data passed to UI object.</param>
        </member>
        <member name="M:Sciex.FMan.SelectSampleHelper.SetProvider(Sciex.FMan.ISelectSampleProvider)">
            <summary>
            Sets an ISelectSampleProvider provider. This takes precedence over any item
            specified in the configuration file.
            </summary>
            <param name="provider">UI provider.</param>
        </member>
        <member name="M:Sciex.FMan.SelectSampleHelper.LoadProvider">
            <summary>
            This method does nothing if we already have a UI provider, otherwise it attemps
            to create it using a type name - the first choice is to use information from 
            the application's configuration file followed by what was set via a call to
            SetProviderInfo(). If we have no such information we do nothing.
            </summary>
        </member>
        <member name="M:Sciex.FMan.SelectSampleHelper.ReadProviderInfoFromConfiguration">
            <summary>
            Attempts to read "fProviderTypeName" and "fProviderData" from the configuration
            file. If this information is not present we do nothing.
            </summary>
        </member>
        <member name="M:Sciex.FMan.SelectSampleHelper.SelectSample">
            <summary>
            Displays UI allowing the user to select a single sample. If the user
            cancels the process null is returned. This method throws an exception
            if we have no provider.
            </summary>
            <returns>Selected sample or null.</returns>
        </member>
        <member name="M:Sciex.FMan.SelectSampleHelper.SelectSample(Sciex.FMan.FManSample)">
            <summary>
            Displays UI allowing the user to select a single sample. If the user
            cancels the process null is returned. If "startingSample" is not null, it
            is initially selected in the UI (if the sample exists). This method throws 
            an exception if we have no provider.
            </summary>
            <param name="startingSample">Sample to initially select or null.</param>
            <returns>Selected sample or null.</returns>
        </member>
        <member name="M:Sciex.FMan.SelectSampleHelper.SelectSample(Sciex.FMan.FManSample,Sciex.FMan.GetErrorMessageIfInvalidISelectSamples)">
            <summary>
            Displays UI allowing the user to select a single sample. If the user
            cancels the process null is returned. If "startingSample" is not null, it
            is initially selected in the UI (if the sample exists). If "validator" is
            not null it is used to check that the selected sample is valid. This method 
            throws an exception if we have no provider.
            </summary>
            <param name="startingSample">Sample to initially select or null.</param>
            <param name="validator">Used to check sample.</param>
            <returns>Selected sample or null.</returns>
        </member>
        <member name="M:Sciex.FMan.SelectSampleHelper.SelectSamples">
            <summary>
            Displays UI allowing the user to select one or more samples. If the
            user cancels the process null is returned. This method throws an exception
            if we have no provider.
            </summary>
            <returns>Selected samples or null.</returns>
        </member>
        <member name="M:Sciex.FMan.SelectSampleHelper.SelectSamples(Sciex.FMan.FManSample[])">
            <summary>
            Displays UI allowing the user to select one or more samples. If the
            user cancels the process null is returned. If "startingSamples" is not
            null or empty, these samples are initially selected in the UI. This 
            method throws an exception if we have no provider.
            </summary>
            <param name="startingSamples">Samples to initially select or null.</param>
            <returns>Selected samples or null.</returns>
        </member>
        <member name="M:Sciex.FMan.SelectSampleHelper.SelectSamples(Sciex.FMan.FManSample[],Sciex.FMan.GetErrorMessageIfInvalidISelectSamples)">
            <summary>
            Displays UI allowing the user to select one or more samples. If the
            user cancels the process null is returned. If "startingSamples" is not
            null or empty, these samples are initially selected in the UI. If
            "validator" is not null it is used to check that the selected samples
            are valid. This method throws an exception if we have no provider.
            </summary>
            <param name="startingSamples">Samples to initially select or null.</param>
            <param name="validator">Used to check samples.</param>
            <returns>Selected samples or null.</returns>
        </member>
        <member name="M:Sciex.FMan.SelectSampleHelper.CreateSampleUIControl(System.Boolean,Sciex.FMan.FManSample[],Sciex.FMan.GetErrorMessageIfInvalidISelectSamples)">
            <summary>
            This method creates a Windows.Forms control suitable for embedding in 
            custom user interface allowing the user to select samples. Callers should 
            Dispose() of the control. This method throws an exception if we have no provider.
            </summary>
            <param name="singleSample">True if user can only pick one sample.</param>
            <param name="startingSamples">Samples to initially select or null if none.</param>
            <param name="validator">Used to validate samples or null.</param>
            <returns>Object managing custom UI control.</returns>
        </member>
        <member name="M:Sciex.FMan.SelectSampleHelper.ShowNetworkWarningMessage(Sciex.FMan.FManSample)">
            <summary>
            This method is called by the UI to determine if a warning message should be 
            displayed to the effect that "for best performance do not use a network location
            for large files". So, this method should return true if (1) the sample is in
            fact located on a network and (2) it is "large".T his method throws an exception
            if we have no provider.
            </summary>
            <param name="sample">Sample object.</param>
            <returns>True if sample is located on a network and is large.</returns>
        </member>
        <member name="P:Sciex.FMan.SelectSampleHelper.SelectSampleProvider">
            <summary>
            Returns our UI provider, loading it if needed. We throw an exception if we
            have no provider and no type information for creating one.
            </summary>
        </member>
        <member name="T:Sciex.FMan.ExtractIDAProductSpectra">
            <summary>
            This class is used to extract specific IDA spectra.
            </summary>
        </member>
        <member name="M:Sciex.FMan.ExtractIDAProductSpectra.HaveAnyIDA(Sciex.FMan.IFMan,Sciex.FMan.FManSample[])">
            <summary>
            This rotuine is used to determine whether any of the specied samples are IDA. 
            </summary>
            <param name="fman">FMan object.</param>
            <param name="samples">Samples to check.</param>
            <returns>True if at least one sample is IDA.</returns>
        </member>
        <member name="M:Sciex.FMan.ExtractIDAProductSpectra.GetBestSpectrum(Sciex.FMan.FManMassSpectrum,Sciex.FMan.FManMassSpectrum)">
            <summary>
            Returns the "better" of the two spectra, either of which may be null.
            </summary>
            <param name="first">First spectrum to check.</param>
            <param name="second">Second spectrum to check.</param>
            <returns>Better of "first" and "second".</returns>
        </member>
        <member name="M:Sciex.FMan.ExtractIDAProductSpectra.GetBestSpectrum(Sciex.FMan.FManMassSpectrum[])">
            <summary>
            Returns the "best" of all of the provided spectra. If the list is empty we return 
            null.
            </summary>
            <param name="spectra">List of spectra to check.</param>
            <returns>The better of all the spectra in the list.</returns>
        </member>
        <member name="M:Sciex.FMan.ExtractIDAProductSpectra.GetScore(Sciex.FMan.FManMassSpectrum)">
            <summary>
            Returns a so-called goodness score for the provided spectrum. This is just the
            sum of all intensity excluding the parent m/z.
            </summary>
            <param name="spectrum">Spectrum for which to get score.</param>
            <returns>Score for spectrum.</returns>
        </member>
        <member name="M:Sciex.FMan.ExtractIDAProductSpectra.#ctor(Sciex.FMan.IFMan,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="fman">FMan object used to get spectra.</param>
            <param name="parentMZ">Target parent m/z.</param>
            <param name="mzTolerance">Parent m/z tolerance.</param>
            <param name="retentionTime">Target retention time.</param>
            <param name="rtTolerance">RT tolerance.</param>
        </member>
        <member name="M:Sciex.FMan.ExtractIDAProductSpectra.#ctor">
            <summary>
            Constructor. It is necessary to set the "FMan" property and to call the
            SetParentMzAndRt() method to set the target (mass, RT) and tolerances.
            </summary>
        </member>
        <member name="M:Sciex.FMan.ExtractIDAProductSpectra.SetParentMzAndRt(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sets our target (parent m/z, RT) and the corresponding tolerances. If the
            parameter-free constructor is used this method should be called before 
            obtaining spectra.
            </summary>
            <param name="parentMZ">Target parent m/z.</param>
            <param name="mzTolerance">Parent m/z tolerance.</param>
            <param name="retentionTime">Target retention time.</param>
            <param name="rtTolerance">RT tolerance.</param>
        </member>
        <member name="M:Sciex.FMan.ExtractIDAProductSpectra.GetBestSpectrum(Sciex.FMan.FManSample)">
            <summary>
            Returns the "best" IDA product spectrum (which matches the criteria set in our
            constructor). If there is no matching spectrum we return null.
            </summary>
            <param name="sample">Sample.</param>
            <returns>Best spectrum for sample or null if none.</returns>
        </member>
        <member name="M:Sciex.FMan.ExtractIDAProductSpectra.GetAllSpectra(Sciex.FMan.FManSample)">
            <summary>
            Returns all IDA product spectra (which match the criteria set in our constructor).
            We never return null, however if there are no matches we'll return an empty
            array.
            </summary>
            <param name="sample">Sample.</param>
            <returns>List of matching spectra for sample.</returns>
        </member>
        <member name="M:Sciex.FMan.ExtractIDAProductSpectra.GetFirstSpectrum(Sciex.FMan.FManSample)">
            <summary>
            Returns the first IDA product spectrum (witch matches the criteria set in our
            constructor). If no such spectrum exists we return null.
            </summary>
            <param name="sample">Sample.</param>
            <returns>First matching spectrum or null if none.</returns>
        </member>
        <member name="M:Sciex.FMan.ExtractIDAProductSpectra.GetBestSpectrum(Sciex.FMan.FManSample[])">
            <summary>
            Returns the overall "best" IDA product spectrum (which matches the criteria set
            in our constructor) across all of the samples. If there is no matching spectrum
            for any of the samples we return null.
            </summary>
            <param name="samples">List of samples.</param>
            <returns>The overall best spectrum or null if none.</returns>
        </member>
        <member name="M:Sciex.FMan.ExtractIDAProductSpectra.GetAllBestSpectra(Sciex.FMan.FManSample[])">
            <summary>
            Returns a list of the "best" spectra (which match the criteria set in our
            constructor) for the provided samples, up to a maximum of one per sample. In
            other words the return value contains the best spectrum for each sample, 
            except that samples with no matching spectrum are not included. The returnn value
            is never null, but may be less than the number of original samples and may
            even be empty.
            </summary>
            <param name="samples">List of samples.</param>
            <returns>Best spectra for samples.</returns>
        </member>
        <member name="M:Sciex.FMan.ExtractIDAProductSpectra.GetAllSpectra(Sciex.FMan.FManSample[])">
            <summary>
            Returns all IDA product spectra (which match the criteria set in our constructor)
            for all of the provided samples. We never return null, however if there are no 
            matches we'll return an empty array.
            </summary>
            <param name="samples">List of samples.</param>
            <returns>List of matching spectra for all samples.</returns>
        </member>
        <member name="M:Sciex.FMan.ExtractIDAProductSpectra.GetFirstSpectrum(Sciex.FMan.FManSample[])">
            <summary>
            Returns the first IDA product spectrum from any of the samples (which matches
            the criteria set in our constructor). If no such spectrum exists we return null.
            </summary>
            <param name="samples">List of samples.</param>
            <returns>First matching spectrum or null if none.</returns>
        </member>
        <member name="M:Sciex.FMan.ExtractIDAProductSpectra.GetSpectra(System.Boolean)">
            <summary>
            Returns a list containing spectra (which match the criteria set in our
            constructor) for the current sample. If "all" is true we return all matching
            ones, otherwise just the first one.
            </summary>
            <param name="all">Get all (matching) spectrum or just first one?</param>
            <returns>List of matching spectra for current sample.</returns>
        </member>
        <member name="M:Sciex.FMan.ExtractIDAProductSpectra.GetCycleRange(System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Used to get the cycle range and period to process.
            </summary>
            <param name="startCycle">First cycle.</param>
            <param name="endCycle">Last cycle.</param>
            <param name="period">Period</param>
        </member>
        <member name="M:Sciex.FMan.ExtractIDAProductSpectra.GetSpectrum(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the product spectrum for the specified period, experiment and cycle
            *if* it matches the criteria set in our constructor, otherwise returns null.
            </summary>
            <param name="period">Period.</param>
            <param name="expt">Experiment.</param>
            <param name="cycle">Cycle.</param>
            <returns>Spectrum if it matches, otherwise null.</returns>
        </member>
        <member name="P:Sciex.FMan.ExtractIDAProductSpectra.FMan">
            <summary>
            Gets or sets our IFMan object. If the parameter-free constructor is used this
            method must be called before obtaining spectra.
            </summary>
        </member>
        <member name="P:Sciex.FMan.ExtractIDAProductSpectra.Cache">
            <summary>
            Gets or sets whether information should be cached. This can make retieving spectra
            much faster if multiple spectra will be retrieved for different parent m/z values
            or retention times (for the same sample). By default we DO cache if the parameter-
            free constructor is called and do NOT if the target (m/z, RT) is provided to our
            constructor.
            </summary>
        </member>
        <member name="T:Sciex.FMan.OrthogonalMSExperiment">
            <summary>
            This class represents a so-called orthogonal MS experiment. This is data for which
            a spectrum is available for every spectral data point in a given parent experiment.
            A concrete example for the QqTOF instrument is a parent precursor quad experiment
            for which a time-of-flight spectrum is available for each precursor mass (for
            each cycle).
            </summary>
        </member>
        <member name="T:Sciex.FMan.MSExperiment">
            <summary>
            This class defines information for one experiment of an MS analysis.
            </summary>
        </member>
        <member name="M:Sciex.FMan.MSExperiment.#ctor(Sciex.FMan.ExperimentTypeEnum,System.String,Sciex.FMan.IdaExperimentType,System.Double,System.Double,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.String[],System.Double[],System.Double[],System.Double[],System.Double[])">
            <summary>
            Constructor. For a scan experiment "masses1" holds the start masses for each range 
            and "masses2" holds the stop masses; for an MRM experiment these arrays hold the 
            Q1 and Q3 masses; for a SIM experiment "masses1" holds the masses and "masses2" 
            is not used and should be null. For a SIM or MRM experiment, "massNames" may be 
            non-null and contain specific compound names for the mass ranges; or it may be 
            null if such names are not available; for other scan types it should be null. If
            the list is non-null and individual items are null (or empty), this is okay.
            If not null, "expectedRTs" should contain the expected retention times for the
            mass ranges. The "fixedMasses" is the product, precursor or neutral losss masses
            if applicable, otherwise null; for an IDA product experiment this should be null 
            (since there is not unique for the experiment). If "countConversionFactors" is
            not null it contains the factors for the mass ranges by which intensities must
            be multiplied in order to convert from counts/second to absolute counts. If
            "isolationWindows" is not null then it must be the same length as the number of 
            mass ranges and contains the MS/MS isolation window for the range (or -1 if the
            value is unknown or not applicable such as for an MS experiment).
            </summary>
            <param name="experimentType">Experiment type.</param>
            <param name="experimentTypeName">Name of experiment or null for default.</param>
            <param name="idaType">IDA type.</param>
            <param name="defaultResolution">"Typical" resolution if available, else -1.</param>
            <param name="defaultPeakWidth">"Typical" peak width if available, else -1.</param>
            <param name="defaultCentroid">Are spectra centroided by default?</param>
            <param name="msLevel">Level of MS^n.</param>
            <param name="numCycles">Number of cycles.</param>
            <param name="positive">Is scan of positive polarity?</param>
            <param name="fixedMasses">Precursor, fragment or NL (if any).</param>
            <param name="masses1">Start or Q1 masses or SIM masses.</param>
            <param name="masses2">Stop or Q3 masses.</param>
            <param name="steps">Step sizes, IF used.</param>
            <param name="dwells">Dwell times, IF used.</param>
            <param name="countConversionFactors">Count conversion factors, IF used.</param>
            <param name="massNames">Names for mass ranges or null.</param>
            <param name="expectedRTs">Expected retention times or null.</param>
            <param name="startRTs">Starting ret. times or null.</param>
            <param name="endRTs">Ending ret. times or null.</param>
            <param name="isolationWindows"></param>
        </member>
        <member name="M:Sciex.FMan.MSExperiment.CreateMassRanges(System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.String[],System.Double[],System.Double[],System.Double[])">
            <summary>
            Creates our mass ranges. See the constructor for details of the parameters.
            </summary>
        </member>
        <member name="M:Sciex.FMan.MSExperiment.CreateMassRange(System.Int32,System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.String[],System.Double[],System.Double[],System.Double[])">
            <summary>
            Creates a new mass range using the specified index into the various arrays. For a
            description of the parameters see the constructor.
            </summary>
        </member>
        <member name="M:Sciex.FMan.MSExperiment.CalculateName">
            <summary>
            Returns the name of this experiment, suitable for showing to the user. For example
            for a product experiment we might return "Products of 1000.0 (30 - 2100)".
            </summary>
        </member>
        <member name="M:Sciex.FMan.MSExperiment.GetFixedMassDescription">
            <summary>
            Returns a formatted string which contains our fixed masses or masses. If we have
            no fixed mass we return an empty string.
            </summary>
            <returns>Fixed mass description or empty string.</returns>
        </member>
        <member name="M:Sciex.FMan.MSExperiment.GetMassRange(System.Int32)">
            <summary>
            Returns the mass range with the specified index.
            </summary>
            <param name="index">Index of mass range.</param>
            <returns>Requested mass range.</returns>
        </member>
        <member name="M:Sciex.FMan.MSExperiment.GetDefaultPeakWidth(System.Double)">
            <summary>
            Given a mass, returns a TYPICAL peak width at that mass dependent on the instrument
            type. In some cases this cannot be determined in which case we return -1. Note that
            depending on the actual instrument performance the true peak width may be significantly
            different.
            </summary>
            <param name="mass">Mass at which to get width.</param>
            <returns>TYPICAL width at mass.</returns>
        </member>
        <member name="M:Sciex.FMan.MSExperiment.GetFixedMass(System.Int32)">
            <summary>
            Returns the parent m/z for the specified MS level. For MS^2 specify a level of "2",
            etc. The level must be greater than or equal to 2 and less than or equal to MSLevel.
            Note that for an IDA product scan (where the fixed mass is different for each spectrum)
            we return a negative value.
            </summary>
            <param name="msLevel">Level of MS^n.</param>
            <returns>Parent m/z for level.</returns>
        </member>
        <member name="P:Sciex.FMan.MSExperiment.OrthogonalMSExperiment">
            <summary>
            If not null, this property refers to an "orthogonal" MS experiment to this one.
            See the definition of the OrthogonalMSExperiment class for details.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MSExperiment.NumMassRanges">
            <summary>
            Returns the number of mass ranges. There is always guaranteed to be at least one.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MSExperiment.SpectrumType">
            <summary>
            Returns the experiment type.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MSExperiment.ExperimentType">
            <summary>
            Returns our data type.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MSExperiment.ExperimentTypeName">
            <summary>
            Returns the name of our ExperimentType. It is also possible to set the name, but
            this should only be done when first creating a new MSExperiment object.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MSExperiment.Name">
            <summary>
            Returns the name of this experiment, suitable for showing to the user. For example
            for a product experiment we might return "Products of 1000.0 (30 - 2100)".
            </summary>
        </member>
        <member name="P:Sciex.FMan.MSExperiment.IdaType">
            <summary>
            Returns the IDA experiment type.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MSExperiment.NumCycles">
            <summary>
            Returns the number of cycles.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MSExperiment.DefaultResolution">
            <summary>
            For a time-of-flight instrument, returns the typical resolution achieved by the
            instrument (assuming that the creator has set this). For other instrument types we 
            return -1. Note that depending on the actual instrument performance the true peak 
            width may be significantly different.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MSExperiment.MassDisplayFormat">
            <summary>
            Returns a format string suitable for displaying masses (i.e. based on the expected
            mass accuracy of the experiment). If a specific non-empty and non-null value is set 
            we return it directly, otherwise a default value.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MSExperiment.DefaultCentroid">
            <summary>
            Returns whether spectra are centroided at acquisition time. Spectrum can be centroided
            after the fact, so the MassSpectrumInfo.CentroidMode() method should be used instead to
            determine if a particular spectrum is centroided.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MSExperiment.MSLevel">
            <summary>
            Returns the level of MS^n (2 for normal product scans, 3 for 
            MS^3 and one for everything else).
            </summary>
        </member>
        <member name="P:Sciex.FMan.MSExperiment.IsPositivePolarity">
            <summary>
            Returns whether or not this experiment is of positive polarity.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MSExperiment.StartMass">
            <summary>
            Returns the overall start mass (the smallest start mass for all mass
            ranges) for scan data.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MSExperiment.EndMass">
            <summary>
            Returns the overall end mass (the largest end mass for all mass
            ranges) for scan data.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MSExperiment.HaveMassRangeNames">
            <summary>
            Returns true iff we have data which has category "names" and not actual masses 
            (SIM and MRM data).
            </summary>
        </member>
        <member name="P:Sciex.FMan.MSExperiment.HaveUserMassRangeNames">
            <summary>
            Returns true iff we have data cateogry "names" specified by the user, i.e. something
            other than generic "Q1/Q3" names.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MSExperiment.CountsConversionFactor">
            <summary>
            Returns a conversion factor by which intensities must be multiplied to get raw
            counts. If this cannot be determined we return -1.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MSExperiment.Parameters">
            <summary>
            Returns our list of parameters.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MSExperiment.SaturationThreshold">
            <summary>
            Gets or sets the threshold at which saturation of the detector occurs. A
            return value of -1 indicates that this value was not set or is not
            available.
            </summary>
        </member>
        <member name="M:Sciex.FMan.OrthogonalMSExperiment.#ctor(Sciex.FMan.ExperimentTypeEnum,System.String,Sciex.FMan.IdaExperimentType,System.Double,System.Double,System.Boolean,System.Int32,System.Boolean,System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.String[],System.Double[],System.Double[],System.Double[],Sciex.FMan.MSExperiment,System.Double[])">
            <summary>
            Constructor. The "parent" parameter refers to the owning MSExperiment object to 
            which this object is the orthogonal data. The "parentMasses" parameter is a list
            of masses (in increasing order) from the parent experiment for which there is
            orthogonal data. For a description of the remainder of the parameters see the
            MSExperiment base class.
            </summary>
        </member>
        <member name="M:Sciex.FMan.OrthogonalMSExperiment.GetMassForParentStep(System.Int32)">
            <summary>
            Given an index (from 0 to NumParentSteps-1), returns the corresponding mass
            in the parent experiment to which this experiment is the orthogonal data.
            </summary>
            <param name="index">Index of mass step.</param>
            <returns>Mass for requested step index.</returns>
        </member>
        <member name="M:Sciex.FMan.OrthogonalMSExperiment.GetStepForParentMass(System.Double)">
            <summary>
            Given a mass in the parent experiment to which this experiment is the orthogonal
            data, returns the corresponding index in that experiment.
            </summary>
            <param name="mass">Mass.</param>
            <returns>Index in parent experiment for mass.</returns>
        </member>
        <member name="P:Sciex.FMan.OrthogonalMSExperiment.NumParentSteps">
            <summary>
            Returns the number of different masses in the owning experiment for which there
            is orthogonal spectra.
            </summary>
        </member>
        <member name="T:Sciex.FMan.DADMethod">
            <summary>
            Defines a diode-array-device method. Note that DAD spectra are only available if
            the "HaveSpectra" method returns true. 
            </summary>
        </member>
        <member name="M:Sciex.FMan.DADMethod.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Sciex.FMan.DADMethod.SetDADInfo(System.Double,System.Double,System.Double,System.Double[],System.Boolean,System.Double[])">
            <summary>
            Sets the wavelength range and other information for this diode array device. 
            The "times" array contains the times (in minutes) at which spectra are available;
            there must be at least one value and the values must be in increasing order. If
            "fullSpectraAvailable" is false spectra are not available. The "discreteWavelengths"
            parameter specifies any specific wavelenths of interest (if "fullSpectraAvailable"
            is false these are the only data available).
            </summary>
            <param name="startWavelength">Starting wavelength.</param>
            <param name="endWavelength">Ending wavelength.</param>
            <param name="stepWavelength">Step wavelength.</param>
            <param name="times">List of times at which spectra are available.</param>
            <param name="fullSpectraAvailable">Are full spectra available?</param>
            <param name="discreteWavelengths">Specific wavelengths of interest.</param>
        </member>
        <member name="M:Sciex.FMan.DADMethod.CheckTimes(System.Double[])">
            <summary>
            This method checks that "times" is valid and throws an exception if not.
            </summary>
            <param name="times">List of times at which spectra are available.</param>
        </member>
        <member name="M:Sciex.FMan.DADMethod.GetTime(System.Int32)">
            <summary>
            Given a DAD spectrum index (which ranges from 0 to NumSpectra-1), this method
            returns the corresponding retention time in minutes. If "DataWasAcquired" is not true
            it is not valid to call this method.
            </summary>
            <param name="spectrumIndex">Spectrum index for which to get time.</param>
            <returns>Acquisition time (in minutes) for specified spectrum.</returns>
        </member>
        <member name="M:Sciex.FMan.DADMethod.GetSpectrumIndex(System.Double)">
            <summary>
            Given a retention time (in minutes), returns the index of the spectrum which 
            is closest to that time. The return value can range from 0 to NumSpectra-1.
            If "DataWasAcquired" is not true it is not valid to call this method.
            </summary>
            <param name="time">Time (in minutes) for which to get spectrum index.</param>
            <returns>The requested spectrum index.</returns>
        </member>
        <member name="M:Sciex.FMan.DADMethod.CheckHaveAnyData">
            <summary>
            This method throws an exception if we do not have valid data.
            </summary>
        </member>
        <member name="P:Sciex.FMan.DADMethod.HasData">
            <summary>
            Returns true if any data was acquired. If "HaveSpectra" returns true full
            spectra are available, otherwise (presumably) only discrete wavelengths.
            </summary>
        </member>
        <member name="P:Sciex.FMan.DADMethod.HaveSpectra">
            <summary>
            Returns true iff DAD spectra are available. If the return value is false it is
            not valid to call methods such as StartWavelength.
            </summary>
        </member>
        <member name="P:Sciex.FMan.DADMethod.StartWavelength">
            <summary>
            Returns the starting wavelength for our DAD data. If "DataWasAcquired" is not true
            it is not valid to call this method.
            </summary>
        </member>
        <member name="P:Sciex.FMan.DADMethod.EndWavelength">
            <summary>
            Returns the ending wavelength for our DAD data. If "DataWasAcquired" is not true
            it is not valid to call this method.
            </summary>
        </member>
        <member name="P:Sciex.FMan.DADMethod.StepWavelength">
            <summary>
            Returns the step wavelength for our DAD data. If "DataWasAcquired" is not true
            it is not valid to call this method.
            </summary>
        </member>
        <member name="P:Sciex.FMan.DADMethod.NumSpectra">
            <summary>
            Returns the number of different DAD spectra which are available. If "DataWasAcquired" 
            is not true it is not valid to call this method.
            </summary>
        </member>
        <member name="P:Sciex.FMan.DADMethod.DiscreteWavelengths">
            <summary>
            Returns any specific wavelenghts of interest. If HaveSpectra returns false then
            these are the only wavelengths for which data is available, otherwise these
            wavelengths of particular interest. The return value is never null but may be
            empty. If "DataWasAcquired" is not true it is not valid to call this method. 
            </summary>
        </member>
        <member name="T:Sciex.FMan.IDataFileValidator">
            <summary>
            Validates files before they're opened. It can be plugin into Sciex.Explore.TicSpecDirector.DataFileValidator
            as the default validator for FManSamples.
            </summary>
        </member>
        <member name="M:Sciex.FMan.IDataFileValidator.IsDataFileValid(System.String)">
            <summary>
            Validates a file
            </summary>
            <param name="dataFilePath"></param>
            <returns>True if the it is valid and False otherwise.</returns>
        </member>
        <member name="P:Sciex.FMan.IDataFileValidator.ErrorMessage">
            <summary>
            Optionally provides the error message of invalid data
            </summary>
        </member>
        <member name="T:Sciex.FMan.FManFileSampleWithIndex">
            <summary>
            This subclass of FManFileSample defines a sample which is associated with a 
            file on disk for formats in which it is possible to have more than one
            sample per file.
            </summary>
        </member>
        <member name="T:Sciex.FMan.FManFileSample">
            <summary>
            This subclass of FManSample implements a sample which is associated with a
            file on disk.
            </summary>
        </member>
        <member name="T:Sciex.FMan.FManSample">
            <summary>
            This is the base class for FMan samples. NOTE: Subclasses which support saving
            to a simple stream must override the WriteToStream() method and must implement
            a constructor accepting a single Stream.
            </summary>
        </member>
        <member name="M:Sciex.FMan.FManSample.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Sciex.FMan.FManSample.WriteToStream(System.IO.Stream)">
            <summary>
            This class itself throws a not-implemented exception. Subclasses which support
            writing to a simple stream must override this method and must implement a
            constructor accepting a single Stream parameter.
            </summary>
            <param name="stream">Stream to which we save.</param>
        </member>
        <member name="M:Sciex.FMan.FManSample.ToString(System.String)">
            <summary>
            Converts this object to a string using the specified format string. This
            class itself doesn't use the format string, however subclasses may do so.
            </summary>
            <param name="format">Format string.</param>
            <returns>This object as a string.</returns>
        </member>
        <member name="M:Sciex.FMan.FManSample.Equals(System.Object)">
            <summary>
            Subclasses must override this method to compare for equality.
            </summary>
            <param name="obj">Object to which we compare.</param>
            <returns>True iff we equal "obj".</returns>
        </member>
        <member name="M:Sciex.FMan.FManSample.GetHashCode">
            <summary>
            Overridden because we override Equals.
            </summary>
            <returns>An optimised hashcode.</returns>
        </member>
        <member name="M:Sciex.FMan.FManSample.op_Equality(Sciex.FMan.FManSample,Sciex.FMan.FManSample)">
            <summary>
            Compares the two objects using "Equals", not by reference.
            </summary>
            <param name="x">First object to compare.</param>
            <param name="y">Second object to compare.</param>
            <returns>True iff objects are equal.</returns>
        </member>
        <member name="M:Sciex.FMan.FManSample.op_Inequality(Sciex.FMan.FManSample,Sciex.FMan.FManSample)">
            <summary>
            Compares the two objects using "Equals", not by reference.
            </summary>
            <param name="x">First object to compare.</param>
            <param name="y">Second object to compare.</param>
            <returns>True iff objects are not equal.</returns>
        </member>
        <member name="M:Sciex.FMan.FManSample.CompareTo(System.Object)">
            <summary>
            Compares two instances. We just compare by converting this object to a string:
            subclasses may want to override this method to do something more appropriate.
            </summary>
            <param name="obj">Object to which we compare.</param>
            <returns>Either "1" if we're bigger, "-1" if we're smaller or 0.</returns>
        </member>
        <member name="M:Sciex.FMan.FManSample.Resolve">
            <summary>
            This method is used to update this object to potentially point to a
            new source. It's used when we save an FManSample persistently to 
            disk and re-open it. What happens if the original data file with which
            we are associated has moved? Calling this method will atttempt to
            locate the file. Note that this method may display UI.
            </summary>
        </member>
        <member name="M:Sciex.FMan.FManSample.GetHtmlSampleInfo">
            <summary>
            This method is temporary and will be refactored later.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Sciex.FMan.FManSample.GetXmlSampleInfo">
            <summary>
            This method is temporary and will be refactored later.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Sciex.FMan.FManFileSample.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="M:Sciex.FMan.FManFileSample.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="filePath">Path to file.</param>
        </member>
        <member name="M:Sciex.FMan.FManFileSample.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used when deserialising. Warning: Use caution when editing this
            method since data using the existing names has been previously serialised
            PERSISTENTLY.
            </summary>
            <param name="info">Info.</param>
            <param name="context">Not used.</param>
        </member>
        <member name="M:Sciex.FMan.FManFileSample.#ctor(System.IO.Stream)">
            <summary>
            Constructor used when reading from stream. Warning: Use caution when editing
            this method since data using the existing names has been previously serialised
            PERSISTENTLY.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:Sciex.FMan.FManFileSample.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Called during serialisation.
            </summary>
            <param name="info">Info.</param>
            <param name="context">Not used.</param>
        </member>
        <member name="M:Sciex.FMan.FManFileSample.WriteToStream(System.IO.Stream)">
            <summary>
            We override this method to write our data to the provided stream.
            </summary>
            <param name="stream">Stream to which we write.</param>
        </member>
        <member name="M:Sciex.FMan.FManFileSample.Equals(System.Object)">
            <summary>
            We override this method to compare equality based on the file path.
            </summary>
            <param name="obj">Object to which we compare.</param>
            <returns>True iff we equal "obj".</returns>
        </member>
        <member name="M:Sciex.FMan.FManFileSample.CompareTo(System.Object)">
            <summary>
            Compares two instances.
            </summary>
            <param name="obj">Object to which we compare.</param>
            <returns>Either "1" if we're bigger, "-1" if we're smaller or 0.</returns>
        </member>
        <member name="M:Sciex.FMan.FManFileSample.GetHashCode">
            <summary>
            We override this method to return a better hash code than the default based
            on our file path.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Sciex.FMan.FManFileSample.ToString">
            <summary>
            We return the NAME (not full path) of our file.
            </summary>
            <returns>Name of our file.</returns>
        </member>
        <member name="M:Sciex.FMan.FManFileSample.Resolve">
            <summary>
            This method is overridden to verify that a file with our FilePath
            exists. If it doesn't, we display UI asking the user to find the file.
            If the user cancels this process, we throw an exception of type
            Sciex.Utility.ErrorHandling.UserAbortException.
            </summary>
        </member>
        <member name="M:Sciex.FMan.FManFileSample.ResolveFile">
            <summary>
            This utility routine is used to resolve a file on disk - i.e. to locate it if it
            has moved from a previous location. If the file has moved we will display UI 
            asking the user to find the filel. If the user cancels this process, we throw 
            an exception of type UserAbortException.
            </summary>
            <returns>New file path.</returns>
        </member>
        <member name="M:Sciex.FMan.FManFileSample.ResolveUsingPreviousInfo(System.String)">
            <summary>
            This routine attempts to resolve "oldPath" using cached information previously 
            obtained from the user. The idea is to avoid having to re-ask the user for every 
            object if we have the same file name (or directory name) as a previously selected
            file. If we do have a cached file we return it, otherwise we return null.
            </summary>
            <param name="oldPath">Original path.</param>
            <returns>Resolved file or null.</returns>
        </member>
        <member name="M:Sciex.FMan.FManFileSample.GetNewPathFromUser">
            <summary>
            This routine asks the user to find the file which corresponds to "oldPath"
            (which does not exist). If the user cancels the UI we thrown an abort exception.
            </summary>
            <returns>New file path (if no abort exception).</returns>
        </member>
        <member name="M:Sciex.FMan.FManFileSample.UpdateFilePaths(System.String,System.String)">
            <summary>
            After asking the user to locate a file which couldn't be automatically resolved, this
            routine adds "oldPath" (or its directory) to a list so that we can resolve this file 
            in the future without having to ask the user each time.
            </summary>
            <param name="oldPath">Original path to file.</param>
            <param name="newPath">New, resolved path to file.</param>
        </member>
        <member name="P:Sciex.FMan.FManFileSample.BrowseForNewLocation">
            <summary>
            Gets or sets the interface used to browse for a sample which has been 
            moved. This is triggered by a call to FManSample.Resolve for a sample
            which is no longer in its original location (such as when persisting a
            file location to disk). If this property is not set then default UI
            is used.
            </summary>
        </member>
        <member name="P:Sciex.FMan.FManFileSample.FilePath">
            <summary>
            Returns the path to our file.
            </summary>
        </member>
        <member name="P:Sciex.FMan.FManFileSample.OpenFileDialogFilter">
            <summary>
            Returns a file filter - subclasses should override this method.
            </summary>
        </member>
        <member name="T:Sciex.FMan.FManFileSample.IBrowseForNewLocation">
            <summary>
            An object implementing this interface can be set to provide custom UI
            for selecting a file. See FManSample.BrowserForNewLocation for details.
            </summary>
        </member>
        <member name="M:Sciex.FMan.FManFileSample.IBrowseForNewLocation.Browse(Sciex.FMan.FManFileSample)">
            <summary>
            This method is called when resolving a sample which is no longer present
            at its original location. The implementation should return a new path for the 
            provided sample or null if the user cancels the UI.
            </summary>
            <param name="sample">Sample (with original location).</param>
            <returns>New path or null.</returns>
        </member>
        <member name="M:Sciex.FMan.FManFileSampleWithIndex.#ctor(System.String,System.Int32)">
            <summary>
            Constructs a new object.
            </summary>
            <param name="filePath">Full path of file.</param>
            <param name="sampleIndex">Zero-based sample index.</param>
        </member>
        <member name="M:Sciex.FMan.FManFileSampleWithIndex.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used when deserialising.
            </summary>
            <param name="info">Info.</param>
            <param name="context">Not used.</param>
        </member>
        <member name="M:Sciex.FMan.FManFileSampleWithIndex.#ctor(System.IO.Stream)">
            <summary>
            The constructor initialises the object with data read from the stream
            (presumably previously written by the WriteToStream method). Warning: Use 
            caution when editing this method since data using the existing names has 
            been previously serialised PERSISTENTLY.
            </summary>
            <param name="stream">Stream from which we read.</param>
        </member>
        <member name="M:Sciex.FMan.FManFileSampleWithIndex.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Called during serialisation. Warning: Use caution when editing this method
            since data using the existing names has been previously serialised PERSISTENTLY.
            </summary>
            <param name="info">Info.</param>
            <param name="context">Not used.</param>
        </member>
        <member name="M:Sciex.FMan.FManFileSampleWithIndex.WriteToStream(System.IO.Stream)">
            <summary>
            Writes our instance variables to the provided stream.
            </summary>
            <param name="stream">Stream to which we write.</param>
        </member>
        <member name="M:Sciex.FMan.FManFileSampleWithIndex.Equals(System.Object)">
            <summary>
            This method is overridden to allow us to compare two WiffSample objects. We
            consider two instances to be equal if they refer to the same underlying
            physical sample.
            </summary>
            <param name="obj">Object for comparison.</param>
            <returns>True if we're equal to "obj".</returns>
        </member>
        <member name="M:Sciex.FMan.FManFileSampleWithIndex.GetHashCode">
            <summary>
            This method is overridden to ensure that we return the same hash code for
            two instances which are considered to be equal.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Sciex.FMan.FManFileSampleWithIndex.CompareTo(System.Object)">
            <summary>
            Compares two instances.
            </summary>
            <param name="obj">Object to which we compare.</param>
            <returns>Either "1" if we're bigger, "-1" if we're smaller or 0.</returns>
        </member>
        <member name="M:Sciex.FMan.FManFileSampleWithIndex.ToString">
            <summary>
            Returns a string showing our file name (not path) and sample index.
            </summary>
            <returns>A string.</returns>
        </member>
        <member name="M:Sciex.FMan.FManFileSampleWithIndex.ToString(System.String)">
            <summary>
            Returns a string showing our file name (not path) and sample index. The sample
            index is formatted using the number of significant figures specified in the format
            string (i.e. it may show leading zeros). This is useful when generating a filename
            to keep samples sorting in order.
            </summary>
            <param name="format">Format string.</param>
            <returns>This object as a string.</returns>
        </member>
        <member name="P:Sciex.FMan.FManFileSampleWithIndex.SampleIndex">
            <summary>
            Returns the ZERO-based sample index within file.
            </summary>
        </member>
        <member name="T:Sciex.FMan.AbstractFMan">
            <summary>
            This class provides an implementation for some of the members of the IFMan
            interface. Those implementing this interface may find it convenient to 
            derive from this abstract class to perform some of the work (although this
            is not necessary). Certain methods must be implemented whereas others
            (for example FindCycle()) should be overridden by most, but not all, subclasses.
            This class also performs caching of the sample and method information.
            </summary>
        </member>
        <member name="T:Sciex.FMan.ISelectSample">
            <summary>
            Objects that implement are IFMan are strongly encouraged to also implement
            this interface which is used to allow the user to pick one or multiple
            samples.
            </summary>
        </member>
        <member name="M:Sciex.FMan.ISelectSample.SelectSample">
            <summary>
            Displays UI allowing the user to select a single sample. If the user
            cancels the process null is returned.
            </summary>
            <returns>Selected sample or null.</returns>
        </member>
        <member name="M:Sciex.FMan.ISelectSample.SelectSample(Sciex.FMan.FManSample)">
            <summary>
            Displays UI allowing the user to select a single sample. If the user
            cancels the process null is returned. If "startingSample" is not null, it
            is initially selected in the UI (if the sample exists).
            </summary>
            <param name="startingSample">Sample to initially select or null.</param>
            <returns>Selected sample or null.</returns>
        </member>
        <member name="M:Sciex.FMan.ISelectSample.SelectSample(Sciex.FMan.FManSample,Sciex.FMan.GetErrorMessageIfInvalidISelectSamples)">
            <summary>
            Displays UI allowing the user to select a single sample. If the user
            cancels the process null is returned. If "startingSample" is not null, it
            is initially selected in the UI (if the sample exists). If "validator" is
            not null it is used to check that the selected sample is valid.
            </summary>
            <param name="startingSample">Sample to initially select or null.</param>
            <param name="validator">Used to check sample.</param>
            <returns>Selected sample or null.</returns>
        </member>
        <member name="M:Sciex.FMan.ISelectSample.SelectSamples">
            <summary>
            Displays UI allowing the user to select one or more samples. If the
            user cancels the process null is returned.
            </summary>
            <returns>Selected samples or null.</returns>
        </member>
        <member name="M:Sciex.FMan.ISelectSample.SelectSamples(Sciex.FMan.FManSample[])">
            <summary>
            Displays UI allowing the user to select one or more samples. If the
            user cancels the process null is returned. If "startingSamples" is not
            null or empty, these samples are initially selected in the UI.
            </summary>
            <param name="startingSamples">Samples to initially select or null.</param>
            <returns>Selected samples or null.</returns>
        </member>
        <member name="M:Sciex.FMan.ISelectSample.SelectSamples(Sciex.FMan.FManSample[],Sciex.FMan.GetErrorMessageIfInvalidISelectSamples)">
            <summary>
            Displays UI allowing the user to select one or more samples. If the
            user cancels the process null is returned. If "startingSamples" is not
            null or empty, these samples are initially selected in the UI. If
            "validator" is not null it is used to check that the selected samples
            are valid.
            </summary>
            <param name="startingSamples">Samples to initially select or null.</param>
            <param name="validator">Used to check samples.</param>
            <returns>Selected samples or null.</returns>
        </member>
        <member name="M:Sciex.FMan.ISelectSample.CreateSampleUIControl(System.Boolean,Sciex.FMan.FManSample[],Sciex.FMan.GetErrorMessageIfInvalidISelectSamples)">
            <summary>
            This method creates a Windows.Forms control suitable for embedding in 
            custom user interface allowing the user to select samples. Callers should 
            Dispose() of the control.
            </summary>
            <param name="singleSample">True if user can only pick one sample.</param>
            <param name="startingSamples">Samples to initially select or null if none.</param>
            <param name="validator">Used to validate samples or null.</param>
            <returns>Object managing custom UI control.</returns>
        </member>
        <member name="M:Sciex.FMan.ISelectSample.ShowNetworkWarningMessage(Sciex.FMan.FManSample)">
            <summary>
            This method is called by the UI to determine if a warning message should be 
            displayed to the effect that "for best performance do not use a network location
            for large files". So, this method should return true if (1) the sample is in
            fact located on a network and (2) it is "large".
            </summary>
            <param name="sample">Sample object.</param>
            <returns>True if sample is located on a network and is large.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.#cctor">
            <summary>
            Class constructor.
            </summary>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.#ctor(Sciex.FMan.AbstractFMan)">
            <summary>
            Copy constructor.
            </summary>
            <param name="toCopy">The object to copy.</param>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.System#ICloneable#Clone">
            <summary>
            This method implements ICloneable by calling the type-safe Clone() method.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.Clone">
            <summary>
            This method implments the IFMan.Clone method by creating a new instance on the
            ASSUMPTION that instances can be created with a parameterless constructor. If 
            this is not the case, subclasses must override this method.
            </summary>
            <returns>A new instance.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.ClonePeakFinder">
            <summary>
            Returns a copy of our peak finder. We clone it if possible, otherwise we
            just return it as-is.
            </summary>
            <returns>The peak-finder copy.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.GetSampleInfoHashtable">
            <summary>
            In order to optimise the retrieval of SampleInfo objects, they are cached. The
            first time one is needed for a given sample the abstract CreateSampleInfo() method
            is called; after that it is retrieved from the cache. By default we use a static
            cache defined in this class. So, these SampleInfo objects are cached between
            different instances of this class. Callers can override this method to return a 
            different cache. There are two reasons why they might want to do this: (1) An
            unlikely reason is so that these objects can be cached on a per-instance basis;
            (2) another reason is so that they can be cached on a per-class basis for the
            subclass. For example if there are two different subclasses which can process the
            same FManSample objects, each may wish to have its objects cached independently -
            perhaps the two subclasses do not set all fields of the SampleInfo in exactly 
            the same way.
            </summary>
            <returns>Hashtable for caching our SampleInfo objects.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.GetMSMethodHashtable">
            <summary>
            Subclasses can override this method to return the dictionary which will be used
            for caching MSMethod objects. By default a static cache defined in this class is
            used. For a discussion of why a subclass may want to override this method, see
            the GetSampleInfoHashtable method.
            </summary>
            <returns>Hashtable for caching our MSMethod objects.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.Dispose">
            <summary>
            Calls our Close() method.
            </summary>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.Close">
            <summary>
            Subclasses should override this method if they have any cleanup to perform.
            Note that this is NOT a Dispose() method - it is still allowed to call other 
            methods after calling Close().
            </summary>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.SetDefaultUIFileProvider(System.String)">
            <summary>
            This method attaches a UI provider (ISelectSampleProvider) to this object which
            is suitable for selecting samples residing in files (a single sample per file).
            It ONLY makes sense to call this method for selecting samples which reside in
            the file system, one sample per file. If this method is called, the actual 
            subclass of AbstractFMan must override CreateFileSample().
            </summary>
            <param name="filter">Dialog filter for UI.</param>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.SetUIProviderInfo(System.String,System.String)">
            <summary>
            This method is used to attach a new UI provider (ISelectSampleProvider) to this
            object. The caller provides a type-name string suitable for a call to Type.GetType()
            (typically of the form "FullClassName, AssemblyName). When set, a new object is
            created on-the-fly the first time it is needed. The object must implement the
            ISelectSampleProvider interface - after construction its Init() method is called
            and it is given this FMan object and "data". NOTE: It is possible to bypass this
            call and achieve the same effect by using a configuration file. The "typename"
            should appear in a configuration entry with a key of XXX.UIProvider where XXX is
            the name (not full name) of the concrete IFMan type. If needed the data uses a 
            key of XXX.UIProviderData. In fact if a configuration entry is present it
            overrides what is set here.
            </summary>
            <param name="typeName">Type name with assembly name for Type.GetType().</param>
            <param name="data">Data passed to UI object.</param>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.SetUIProvider(Sciex.FMan.ISelectSampleProvider)">
            <summary>
            This method attaches a new UI provider (ISelectSampleProvider) to this object.
            </summary>
            <param name="provider">The UI provider.</param>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.GetSampleInfo(Sciex.FMan.FManSample)">
            <summary>
            Returns sample information (sample name, etc) for the given sample.
            </summary>
            <param name="sample">Sample for which to get info.</param>
            <returns>The information.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.CreateSampleInfo(Sciex.FMan.FManSample)">
            <summary>
            Subclasses must override this method to create a new SampleInfo object. This
            method is only called once for each sample since we cache the returned object.
            </summary>
            <param name="sample">Sample for which to get info.</param>
            <returns>New sample information object.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.GetSampleXml(Sciex.FMan.FManSample)">
            <summary>
            Returns "opaque" sample information for the given sample which is used
            for display-only purposes. The xml must follow the Sciex.Utility.IO.InfoXml 
            schema.
            </summary>
            <param name="sample">Sample for which to get info.</param>
            <returns>The information.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.GetMethod(Sciex.FMan.FManSample)">
            <summary>
            Returns method information for the given sample.
            </summary>
            <param name="sample">Sample for which to get info.</param>
            <returns>The information.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.TryGetCachedMethod(Sciex.FMan.FManSample)">
            <summary>
            Returns the method for the specified sample *if* it is currently cached, otherwise returns null.
            </summary>
            <param name="sample">Sample for which to get method.</param>
            <returns>Method or null if not cached.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.CreateMethod(Sciex.FMan.FManSample)">
            <summary>
            Subclasses must override this method to create a new MSMethod object. This
            method is only called once for each sample since we cache the returned object.
            </summary>
            <param name="sample">Sample for which to get info.</param>
            <returns>New method information object.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.GetMethodXml(Sciex.FMan.FManSample)">
            <summary>
            Returns "opaque" method information for the given sample which is used
            for display-only purposes. The xml must follow the Sciex.Utility.IO.InfoXml
            schema.
            </summary>
            <param name="sample">Sample for which to get info.</param>
            <returns>The information.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.GetSpectrumInfo(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32)">
            <summary>
            This method implements GetSpectrumInfo by creating a spectrum, setting it to
            the requested cycle and obtaining its "Info" object. Subclasses should override
            this method if they have a more efficient implementation: This implementation
            obtains all of the (mass, intensity) data points which really shouldn't be
            necessary.
            </summary>
            <param name="sample">Sample for which to get info.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="cycle">Cycle number.</param>
            <returns>The spectrum information.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.GetOrthogonalSpectrumInfo(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This method implements GetOrthogonalSpectrumInfo by creating a spectrum, setting it to
            the requested cycle and parent mass index and obtaining its "Info" object. Subclasses 
            should override this method if they have a more efficient implementation.
            </summary>
            <param name="sample">Sample for which to get info.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="cycle">Cycle number.</param>
            <param name="parentMassIndex">Mass index in parent experiment.</param>
            <returns>The spectrum information.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.FindCycle(Sciex.FMan.FManSample,System.Int32,System.Double,System.Int32@)">
            <summary>
            This method returns the cycle with retention time closest to that provided; it also
            sets the period. Subclasses should override this method if they have a more efficient
            implementation than a binary search which calls GetTime(). NOTE: If "experiment" is
            out of range for the resulting period we use a value of zero (this also allows
            "experiment" to be -1 on input).
            </summary>
            <param name="sample">Sample for which to get cycle.</param>
            <param name="experiment">Experiment index.</param>
            <param name="time">Retention time.</param>
            <param name="period">Set to period index.</param>
            <returns>Cycle correspoding to given time.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.FindCycle(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Double)">
            <summary>
            Returns a zero-based index of the MS cycle which correponds most closely to
            the provided retention time and period and experiment. Both the period and
            experiment must be valid values and not the "-1" value which sometimes
            represents "all". If the specified time is before the the start of the period
            the return value is set to zero and if it is after the end of the period
            the return value is one less than the number of cycles available for the
            experiment.
            </summary>
            <param name="sample">Sample for which to get cycle.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="time">Retention time.</param>
            <returns>Cycle corresponding to given time (or 0 or NumCycles-1).</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.FindHigherCycle(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Double)">
            <summary>
            This method is very similar to FindCycle(FManSample, int, int double) except
            that we return the cycle with equal or larger time to "time" rather than
            the closest cycle.
            </summary>
            <param name="sample">Sample for which to get cycle.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="time">Retention time.</param>
            <returns>Cycle corresponding to given time (or 0 or NumCycles-1).</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.FindCycle(Sciex.FMan.FManSample,Sciex.FMan.MSMethod,System.Int32,System.Int32,System.Double)">
            <summary>
            Uses a binary search (calling the virtual GetTime() method) to return the cycle which is
            closest to the provided retention time (for the specified experiment).
            </summary>
            <param name="sample">Sample for which to get cycle.</param>
            <param name="method">MS method.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="time">Retention time.</param>
            <returns>Cycle correspoding to given time.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.GetTime(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32)">
            <summary>
            This method always just returns "0.0". Subclasses MUST override this method if their
            samples can contain more than one spectrum.
            </summary>
            <param name="sample">Sample for which to get cycle.</param>
            /// <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="cycle">Cycle index</param>.
            <returns>Time for specified cycle.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.CreateChromatogram">
            <summary>
            This method returns a new FManChromatogram object. Subclasses should override this
            method to return a subclass of FManChromatogram if they have an efficient way
            of calculating TICs, XICs or BPCs. The FManChromatogram class itself does this by
            brute force, iterating over all spectra.
            </summary>
            <returns>A new chromatogram object.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.CreateMassSpectrum">
            <summary>
            Subclasses will override this method to return a concrete subclass of
            FManMassSpectrum.
            </summary>
            <returns>A new spectrum object.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.GetSpectralPeakInfo(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32)">
            <summary>
            Where available, this method returns information determined at run time for
            the requested mass spectrum. If such information is not available the return
            value is null. WARNING: In some cases the return value may be non-null but not
            all fields of the IPeakList inteface are actually available - for example
            the GetXValue() method may return a mass as expected but the GetYValue()
            method may throw an exception or return -1. This is because only a subset of
            the possible information may have been determined and saved persistently. Also
            note that the return value may support IPeakListExtra in which case standard
            strings to use for these "extra" fields are defined in the FManConstants
            class. This method itself just returns null - subclasses can override as
            needed.
            </summary>
            <param name="sample">Sample.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="cycle">Cycle index.</param>
            <returns>The spectral info or null.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.CreateWavelengthSpectrum">
            <summary>
            This method always returns null. Subclasses which support wavelength spectra
            should override this method to return some concrete subclass of the abstract
            FManWavelengthSpectrum class.
            </summary>
            <returns>A new wavelength spectrum object.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.CreateFastXICs(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32,System.Double[],System.Double[],Sciex.FMan.ProgressDelegate)">
            <summary>
            Creates and returns an array of FManChromatogram objects set to XICs using the
            provided masses. This method MAY be faster than creating the chromatograms and
            calling SetToXIC on each separately. If subclasses override FManChromatogram.SetToXIC
            with an efficient implementation but not this method, this "fast" method may be
            slower. So if SetToXIC is overridden, it is encouraged to override this method too.
            It is possible to calculate the XICs over a limited time range by providing the 
            range - if startCycle is greater than endCycle the full range available is used.
            </summary>
            <param name="sample">Sample for XICs.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="startCycle">Starting cycle (if used).</param>
            <param name="endCycle">Ending cycle (if used).</param>
            <param name="startMasses">List of start masses.</param>
            <param name="endMasses">List of end masses.</param>
            <param name="progress">If not null, called back with progress.</param>
            <returns>List of requested XICs.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.CreateFastIndexedXICs(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32[],Sciex.FMan.ProgressDelegate)">
            <summary>
            This method is similar to CreateFastXICs except that this method is for indexed
            XICs (MRM and SIM) rather than scan XICs - see that method for details.
            </summary>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.CreateFastXICsOneByOne(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32,System.Double[],System.Double[],System.Int32[],Sciex.FMan.ProgressDelegate)">
            <summary>
            Creates and returns an array of FManChromatogram objects set to XICs using the
            provided masses by calling SetToXIC() on each separately. We do not use this method directly -
            it's provided so that subclasses with an efficient SetToXIC method can implement
            CreateFastXICs using this method. IF "massIndices" is not null we assume we have indexed
            XICs (and ignore "startMasses" and "endMasses"); otherwise we assume we have scan XICs
            (and ignore "massIndices").
            </summary>
            <param name="sample">Sample for XICs.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="startCycle">Starting cycle (if used).</param>
            <param name="endCycle">Ending cycle (if used).</param>
            <param name="startMasses">List of start masses, if used.</param>
            <param name="endMasses">List of end masses, if used.</param>
            <param name="massIndices">Indices for indexed XICs, if used.</param>
            <param name="progress">If not null, called back with progress.</param>
            <returns>List of requested XICs.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.CreateFastXICsAllAtOnce(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32,System.Double[],System.Double[],System.Int32[],Sciex.FMan.ProgressDelegate)">
            <summary>
            Creates and returns an array of FManChromatogram objects set to XICs using the
            provided masses by using the ChromatogramHelper class. This is our default
            implementation of CreateFastXICs. IF "massIndices" is not null we assume we have indexed
            XICs (and ignore "startMasses" and "endMasses"); otherwise we assume we have scan XICs
            (and ignore "massIndices").
            </summary>
            <param name="sample">Sample for XICs.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="startCycle">Starting cycle (if used).</param>
            <param name="endCycle">Ending cycle (if used).</param>
            <param name="startMasses">List of start masses.</param>
            <param name="endMasses">List of end masses.</param>
            <param name="massIndices">Indices for indexed XICs, if used.</param>
            <param name="progress">If not null, called back with progress.</param>
            <returns>List of requested XICs.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.CreateXICs(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32[],System.Int32,System.Int32)">
            <summary>
            Creates and returns an array of new FManChromatogram objects. The new objects are NOT
            set to XICs, however the period and experiment are validated.
            </summary>
            <param name="sample">Sample for XICs.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="numXICs">Number of XICs.</param>
            <param name="massIndices">Mass indices for indexed XICs, otherwise null.</param>
            <param name="startCycle">Start cycle.</param>
            <param name="endCycle">End cycle or -1 for all.</param>
            <returns>List of chromatograms.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.FastXICProgress(System.Double)">
            <summary>
            This method is called during fast XIC calculation. We forward the progress
            notification to any interested listener.
            </summary>
            <param name="fractionComplete">Fraction of work completed.</param>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.CreatePeakList(Clearcore2.Data.CommonInterfaces.IRawXYData)">
            <summary>
            We implement ICreatePeakList by using the peak-finder set via a call to 
            SpectralPeakFinder; if this value has not been set we return null.
            </summary>
            <param name="data">Data for which to find peaks.</param>
            <returns>Peak list for data or null.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.CreateFileSample(System.String)">
            <summary>
            Subclasses must override this method IF they will call SelectFileSample() or
            SelectFileSamples(). This only makes sense for subclasses which use the file
            system AND which have one sample per file.
            </summary>
            <param name="filePath">Full-path to file.</param>
            <returns>A new sample object.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.UpdateMethod(Sciex.FMan.FManSample,System.Boolean)">
            <summary>
            This method updates the method for the provided sample in our cached list;
            if there is no such method in our list we do nothing. This method should be
            called by subclasses if the method has changed because data is in the process
            of being acquired.
            </summary>
            <param name="sample">Sample to check.</param>
            <param name="beingAcquired">Is sample still being acquired?</param>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.RemoveRealTimeMethodFromCache(Sciex.FMan.FManSample)">
            <summary>
            If a realtime run begins but the data is not complete, we must 
            remove the method from the PV cache or else next attempt to monitor
            the same sample will pull the method from the cache and fail again.
            This is because the cached method includes the incomplete data. We 
            want PV to recreate the method on the next call since the data should
            be complete.
            </summary>
            <param name="sample"></param>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.SelectSample">
            <summary>
            Displays UI allowing the user to select a single sample. If the user
            cancels the process null is returned. NOTE: This method throws an exception
            if a UI provider has not been set (using SetUIProviderInfo, SetUIProvider or
            via a configuration file).
            </summary>
            <returns>Selected sample or null.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.SelectSample(Sciex.FMan.FManSample)">
            <summary>
            Displays UI allowing the user to select a single sample. If the user
            cancels the process null is returned. If "startingSample" is not null, it
            is initially selected in the UI (if the sample exists). NOTE: This method 
            throws an exception if a UI provider has not been set (using SetUIProviderInfo, 
            SetUIProvider or via a configuration file).
            </summary>
            <param name="startingSample">Sample to initially select or null.</param>
            <returns>Selected sample or null.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.SelectSample(Sciex.FMan.FManSample,Sciex.FMan.GetErrorMessageIfInvalidISelectSamples)">
            <summary>
            Displays UI allowing the user to select a single sample. If the user
            cancels the process null is returned. If "startingSample" is not null, it
            is initially selected in the UI (if the sample exists). If "validator" is
            not null it is used to check that the selected sample is valid. NOTE: This 
            method throws an exception if a UI provider has not been set (using 
            SetUIProviderInfo, SetUIProvider or via a configuration file).
            </summary>
            <param name="startingSample">Sample to initially select or null.</param>
            <param name="validator">Used to check sample.</param>
            <returns>Selected sample or null.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.SelectSamples">
            <summary>
            Displays UI allowing the user to select one or more samples. If the
            user cancels the process null is returned. NOTE: This method throws an 
            exception if a UI provider has not been set (using SetUIProviderInfo, 
            SetUIProvider or via a configuration file).
            </summary>
            <returns>Selected samples or null.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.SelectSamples(Sciex.FMan.FManSample[])">
            <summary>
            Displays UI allowing the user to select one or more samples. If the
            user cancels the process null is returned. If "startingSamples" is not
            null or empty, these samples are initially selected in the UI. NOTE: This 
            method throws an exception if a UI provider has not been set (using 
            SetUIProviderInfo, SetUIProvider or via a configuration file).
            </summary>
            <param name="startingSamples">Samples to initially select or null.</param>
            <returns>Selected samples or null.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.SelectSamples(Sciex.FMan.FManSample[],Sciex.FMan.GetErrorMessageIfInvalidISelectSamples)">
            <summary>
            Displays UI allowing the user to select one or more samples. If the
            user cancels the process null is returned. If "startingSamples" is not
            null or empty, these samples are initially selected in the UI. If
            "validator" is not null it is used to check that the selected samples
            are valid. NOTE: This method throws an exception if a UI provider has 
            not been set (using SetUIProviderInfo, SetUIProvider or via a 
            configuration file).
            </summary>
            <param name="startingSamples">Samples to initially select or null.</param>
            <param name="validator">Used to check samples.</param>
            <returns>Selected samples or null.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.CreateSampleUIControl(System.Boolean,Sciex.FMan.FManSample[],Sciex.FMan.GetErrorMessageIfInvalidISelectSamples)">
            <summary>
            This method creates a Windows.Forms control suitable for embedding in 
            custom user interface allowing the user to select samples. Callers should 
            Dispose() of the control. NOTE: This method throws an exception if a UI
            provider has not been set (using SetUIProviderInfo, SetUIProvider or via
            a configuration file).
            </summary>
            <param name="singleSample">True if user can only pick one sample.</param>
            <param name="startingSamples">Samples to initially select or null if none.</param>
            <param name="validator">Used to validate samples or null.</param>
            <returns>Object managing custom UI control.</returns>
        </member>
        <member name="M:Sciex.FMan.AbstractFMan.ShowNetworkWarningMessage(Sciex.FMan.FManSample)">
            <summary>
            This method is called by the UI to determine if a warning message should be 
            displayed to the effect that "for best performance do not use a network location
            for large files". So, this method should return true if (1) the sample is in
            fact located on a network and (2) it is "large". NOTE: This method throws an exception
            if a UI provider has not been set (using SetUIProviderInfo, SetUIProvider or
            via a configuration file).
            </summary>
            <param name="sample">Sample object.</param>
            <returns>True if sample is located on a network and is large.</returns>
        </member>
        <member name="P:Sciex.FMan.AbstractFMan.SpectralPeakFinder">
            <summary>
            This method is used to set the spectral peak-finder which is used by our
            CreatePeakList method. That method is also called by FManMassSpectrum.CreatePeakList.
            If this SpectralPeakFinder property has not been set then CreatePeakList will always 
            return null.
            </summary>
        </member>
        <member name="P:Sciex.FMan.AbstractFMan.AllowPersistDynamicData">
            <summary>
            Some implementations may have "dynamic" data which is calculated on-the-fly,
            for example to index scan data. If this property is true (the default) we allow 
            such data to potentially be saved persistently to disk.
            </summary>
        </member>
        <member name="P:Sciex.FMan.AbstractFMan.AllowLargeMemoryAllocations">
            <summary>
            Some implementations may be more efficient if they are able to use large memory
            allocations to cache data. Callers should set this propertry to true (the
            default is false) only if they will process MANY spectra; otherwise it is 
            probably more efficient not to cache large volumes of data.
            </summary>
        </member>
        <member name="T:Sciex.FMan.XicCalculatorResult">
            <summary>
            An array of these items is returned by the XicCalculator.GetXicsForChunk
            method - see the XicCalculator class for details.
            </summary>
        </member>
        <member name="F:Sciex.FMan.XicCalculatorResult.ItemIndex">
            <summary>
            Index of 'Item' in the original array supplied to XicCalculator.GetXicsForChunk.
            </summary>
        </member>
        <member name="F:Sciex.FMan.XicCalculatorResult.Item">
            <summary>
            Original item supplied to XicCalculator.GetXicsForChunk.
            </summary>
        </member>
        <member name="F:Sciex.FMan.XicCalculatorResult.Xics">
            <summary>
            The XICs calculated for the item. This array is never null or empty.
            </summary>
        </member>
        <member name="T:Sciex.FMan.XicCalculator">
            <summary>
            This class is used to calculate many XICs either at one time or in multiple
            passes or 'chunks'. It is basically a high-level wrapper for IFMan.CreateFastXICs.
            The low level IFMan can only calculate XICs for one experiment at a time, so 
            this XicCalculator is useful if the XICs of interest span multiple experiments
            since it uses a separate chunk for each so that the caller does not have to deal
            with this. (That said, by using the XicCalculatorItem.GroupingKey, it is possible
            to explicitly include XICs for different experiments in the same chunk.) For limited 
            time-range XICs, this class also uses separate chunks for non-overlapping cycle 
            ranges - this is more efficient than using the union of all cycles ranges as required 
            by the IFMan method. Also if there are a very large number of XICs for a given 
            experiment, this class will use multiple chunks per experiment. It is more efficient 
            not to do this, but may be required to limit the total number of XICs in memory at 
            one time (see the MaxBytesPerChunk property). Typical usage is something like: 
            (1) Create and populate an array of XicCalculatorItem objects which specify the mass 
            ranges of interest; (2) Create a new XicCalculator; (3) set properties such as 
            MaxBytesPerChunk as needed; (4) Call the SetItems() method specifying the items from 
            step (1); (5) use a 'for' loop which runs from 0 to NumChunks-1; (6) within the 
            'for' loop, call GetXicsForChunk(). See the GetXicsForChunk method for details, but 
            note that the order of the resulting Xics is usually different from the order of the 
            initial XicCalculatorItems.
            </summary>
        </member>
        <member name="M:Sciex.FMan.XicCalculator.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Sciex.FMan.XicCalculator.SetItems(Sciex.FMan.IFMan,Sciex.FMan.FManSample,Sciex.FMan.XicCalculatorItem[])">
            <summary>
            Sets the list of XICs to be calculated. This method will determine how the
            items need to be grouped, but perform no other work. After calling this method
            call NumChunks to determine the number of chunks it was decided were approriate
            followed by GetXicsForChunk() for each.
            </summary>
            <param name="fman">IFMan object.</param>
            <param name="sample">Sample.</param>
            <param name="items">Items for which to calculate XICs.</param>
        </member>
        <member name="M:Sciex.FMan.XicCalculator.ProcessChunk(Sciex.FMan.XicCalculatorChunk,System.Collections.Generic.SortedList{Sciex.FMan.SamplePeriodExperimentCycle,System.Collections.Generic.SortedList{Sciex.FMan.XicCalculatorKey,System.Object}},System.Collections.Generic.Dictionary{System.Object,System.Collections.Generic.List{Sciex.FMan.XicCalculatorKey}})">
            <summary>
            This method process "chunk": We start by always adding the first available
            item (if any) from "remainingItems" to it. We also always add any other
            items with the same (non-null) GroupingKey as for that first item. We then
            add any other items which overlap (in cycle range and experiment number)
            any items added to the chunk, stopping if the chunk becomes too large.
            </summary>
            <param name="chunk">Chunk to process.</param>
            <param name="remainingItems">Remaining (sorted) items to process.</param>
            <param name="groupDict">Maps group key to items for group.</param>
        </member>
        <member name="M:Sciex.FMan.XicCalculator.CreateItemToArrayIndex(Sciex.FMan.XicCalculatorItem[])">
            <summary>
            This method creates and populates fItemToArrayIndex; this dictionary is
            used to map the items in "items" to the corresponding index in the array.
            </summary>
            <param name="items">XicCalculatorItems</param>
        </member>
        <member name="M:Sciex.FMan.XicCalculator.CreateKeyListList(Sciex.FMan.IFMan,Sciex.FMan.FManSample,Sciex.FMan.XicCalculatorItem[])">
            <summary>
            Creates and returns a new KeyListList which is a sorted list where the key is
            an experiment and the value is a KeyList (which has a key of an XicCalculatorKey 
            and the value is not used. The KeyListList is stored in order of increasing
            experiment and the KeyList in order of increasing start cycle.
            </summary>
            <param name="fman">IFMan object.</param>
            <param name="sample">Sample.</param>
            <param name="items">Items for which to calculate XICs.</param>
            <returns>New sorted list with XicCalculatorKeys as keys. </returns>
        </member>
        <member name="M:Sciex.FMan.XicCalculator.CreateGroupDictionary(System.Collections.Generic.SortedList{Sciex.FMan.SamplePeriodExperimentCycle,System.Collections.Generic.SortedList{Sciex.FMan.XicCalculatorKey,System.Object}})">
            <summary>
            Returns a new GroupDict which maps a non-null XicCalculatorItem.GroupingKey
            to a list of XicCalculatorKeys which share the key.
            </summary>
            <param name="keyListList">List of XicCalculatorKeys.</param>
            <returns>New dictionary for groups.</returns>
        </member>
        <member name="M:Sciex.FMan.XicCalculator.AddItemToChunk(Sciex.FMan.XicCalculatorChunk,System.Collections.Generic.Dictionary{System.Object,System.Collections.Generic.List{Sciex.FMan.XicCalculatorKey}},System.Collections.Generic.SortedList{Sciex.FMan.SamplePeriodExperimentCycle,System.Collections.Generic.SortedList{Sciex.FMan.XicCalculatorKey,System.Object}},System.Collections.Generic.SortedList{Sciex.FMan.XicCalculatorKey,System.Object},System.Int32,System.Boolean@)">
            <summary>
            This method adds keyList[index] to the specified chunk. We also add any
            items with the same GroupingKey as that item to the chunk. Any items added
            to the chunk are removed from keyListList.
            </summary>
            <param name="chunk">Chunk to which item is added.</param>
            <param name="groupDict">Holds list of XicCalculatorKeys for grouping key.</param>
            <param name="keyListList">Items remaining to be processed for all experiments..</param>
            <param name="keyList">Items remaining to be processed for current experiment.</param>
            <param name="index">Index of item in remainingItems.</param>
            <param name="addedGroup">True if we added more than one item.</param>
        </member>
        <member name="M:Sciex.FMan.XicCalculator.GetXicsForChunk(Sciex.FMan.IFMan,Sciex.FMan.FManSample,System.Int32,Sciex.FMan.ProgressDelegate)">
            <summary>
            For a given chunk number, returns a list of XICs for the original
            XicCalculatorItems passed to the SetItems() method for that chunk. The chunkIndex
            should run from 0 to NumChunks-1. It is important to note that the items are
            returned in what is essentially an arbitrary order. Each XicCalculatorResult
            in the return value has a reference to the index in the original list of
            XicCalulatorItems as well as the item itself. Note that unlike most of the
            other methods of this class, this method is thread-safe PROVIDED that the
            specified IFMan is thread-safe (in practice this is usually not the case
            but it is possible to provide a different IFMan instance for each call). The
            sample does not have to be the same as that provided to SetItems(). If a
            non-null progress callback is provided it is called during the operation, however
            note that the progress runs from 0 to 100% for the current chunk only.
            </summary>
            <param name="fman">IFMan object.</param>
            <param name="sample">Sample to process.</param>
            <param name="chunkIndex">Index from 0 to NumChunks-1</param>
            <param name="progress">Called with progress if not null.</param>
            <returns>XIC result for specified chunk.</returns>
        </member>
        <member name="M:Sciex.FMan.XicCalculator.GetAllXics(Sciex.FMan.IFMan,Sciex.FMan.FManSample,Sciex.FMan.ProgressDelegate)">
            <summary>
            This method calculates all XICs for the items provided to the SetItems() method. In
            this case it is not useful to specify a small value of MaxBytesPerChunk since all
            XICs will be in memory at one time. This method is useful (when a reasonable number
            of XICs are being used) since it takes care of splitting the calculation over
            multiple periods, experiments and cycle ranges. If all items use the same period,
            experiment and range then it is likely easier to call fman.CreateFastXics() directly.
            The XICs in the resulting list are in the same order as the items supplied to the
            SetItems method.
            </summary>
            <param name="fman">IFMan object.</param>
            <param name="sample">Sample to process.</param>
            <param name="progress">Called with progress if not null.</param>
            <returns>Xics for all chunks.</returns>
        </member>
        <member name="M:Sciex.FMan.XicCalculator.GetAllXicsFlat(Sciex.FMan.IFMan,Sciex.FMan.FManSample,Sciex.FMan.ProgressDelegate)">
            <summary>
            This method is similar to GetAllXics() (see that method for details) except that the
            resulting list of arrays is flattened to a single array. This is probably most useful
            for the case in which all XicCalculatorItems supplied to the SetItems() method specify
            a single XIC.
            </summary>
            <param name="fman">IFMan object.</param>
            <param name="sample">Sample to process.</param>
            <param name="progress">Called with progress if not null.</param>
            <returns>Xics for all chunks.</returns>
        </member>
        <member name="M:Sciex.FMan.XicCalculator.GetXics(Sciex.FMan.IFMan,Sciex.FMan.FManSample,Sciex.FMan.XicCalculatorItem,Sciex.FMan.ProgressDelegate)">
            <summary>
            This method is not normally used but is provided as a convenience to calculate
            XICs for a single XicCalculatorItem. 'Chunking' is not needed in this case. 
            </summary>
            <param name="fman">IFMan object.</param>
            <param name="sample">Sample to process.</param>
            <param name="item">Item for which to get XICs.</param>
            <param name="progress">Called with progress if not null.</param>
            <returns>XIC list for specified item.</returns>
        </member>
        <member name="M:Sciex.FMan.XicCalculator.GetXicsForList(Sciex.FMan.IFMan,Sciex.FMan.FManSample,System.Collections.Generic.List{Sciex.FMan.XicCalculatorItem},Sciex.FMan.ProgressDelegate)">
            <summary>
            Calculates XICs for the provided items. The order of the result is that the
            XICs for the first items are first followed by those for the others sequentially,
            however note that not all items have the same number of XICs.
            </summary>
            <param name="fman">IFMan object.</param>
            <param name="sample">Sample to process.</param>
            <param name="items">Items for which to get XICs.</param>
            <param name="progress">Called with progress if not null.</param>
            <returns>XICs for items.</returns>
        </member>
        <member name="M:Sciex.FMan.XicCalculator.GetCycleRange(Sciex.FMan.IFMan,Sciex.FMan.FManSample,System.Collections.Generic.List{Sciex.FMan.XicCalculatorItem},System.Int32@,System.Int32@)">
            <summary>
            Gets the required cycle range for the specified group of items.
            </summary>
            <param name="fman">IFMan object.</param>
            <param name="sample">Sample to process.</param>
            <param name="items">Items for which to get XICs.</param>
            <param name="startCycle">Set to required start cycle.</param>
            <param name="endCycle">Set to required end cycle.</param>
        </member>
        <member name="M:Sciex.FMan.XicCalculator.GetXicMassArrays(System.Collections.Generic.List{Sciex.FMan.XicCalculatorItem},System.Double[]@,System.Double[]@)">
            <summary>
            Gets the combined list of start and end masses for the specified items. This
            method is only used for a full scan XIC calculation.
            </summary>
            <param name="items">Items for which to get XICs.</param>
            <param name="xicStarts">Set to XIC start masses.</param>
            <param name="xicEnds">Set to XIC end masses.</param>
        </member>
        <member name="M:Sciex.FMan.XicCalculator.GetMassIndices(System.Collections.Generic.List{Sciex.FMan.XicCalculatorItem})">
            <summary>
            Gets the combined list of mass indices for the specified items. This method
            is only used for an indexed XIC calculation.
            </summary>
            <param name="items">Items for which to get XICs.</param>
            <returns>List of mass indices.</returns>
        </member>
        <member name="M:Sciex.FMan.XicCalculator.GetXicResult(System.Collections.Generic.List{Sciex.FMan.XicCalculatorItem},Sciex.FMan.FManChromatogram[])">
            <summary>
            This method converts 'allXICs' from a flat list of XICs to a structured
            list of results where the XICs for a given XicCalculatorItem are together.
            </summary>
            <param name="items">Items for which to get XICs.</param>
            <param name="allXics">Flat list of all XICs for items.</param>
            <returns>Structured output for items' XICs.</returns>
        </member>
        <member name="M:Sciex.FMan.XicCalculator.LimitXicsByTime(Sciex.FMan.XicCalculatorItem,Sciex.FMan.FManChromatogram[])">
            <summary>
            If 'fAlwaysHonourTimeRange' is true this method limits the data points
            in the provided XICs for the case in which a larger cycle range than 
            requested was used.
            </summary>
            <param name="item">Item for XICs.</param>
            <param name="xics">XICs calculated for item.</param>
        </member>
        <member name="P:Sciex.FMan.XicCalculator.MaxBytesPerChunk">
            <summary>
            Gets or sets the APPROXIMATE maximum number of bytes which can be used for XICs
            in any one chunk. Using a larger value is more efficient if there is sufficient
            memory. The default value is 100 MB.
            </summary>
        </member>
        <member name="P:Sciex.FMan.XicCalculator.AlwaysHonourTimeRange">
            <summary>
            When calculating an XIC for a given XicCalculatorItem which specifies a limited
            time or cycle range, a range AT LEAST as large as that requested is always used,
            however in some cases the actual range may be larger (to calculate 'close' XICs
            together for efficiency). If it is important that the resulting XICs only 
            contain data for the actual specified time range, this property can be set
            true (the default is false). This requires an extra step with memory allocation
            and copying, so it is more efficient to set this property to false if possible.
            </summary>
        </member>
        <member name="P:Sciex.FMan.XicCalculator.NumChunks">
            <summary>
            Returns the number of chunks (i.e. the number of times GetXicsForChunk must
            be called). The SetItems() method must have been previously set.
            </summary>
        </member>
        <member name="T:Sciex.FMan.CreateMethodXml">
            <summary>
            This class is used to create an XML document which contains method information.
            The XML follows the Sciex.Utility.IO.InfoXml schema. Most clients should never need 
            to use this class directly since this information is typically obtained by a call 
            to IFMan.GetMethodXml(). This public class is provided so that implementations of 
            IFMan can create a subclass of CreateMethodXml which adds additional information. 
            In this case the PopulateDocument() method should be overridden.
            </summary>
        </member>
        <member name="M:Sciex.FMan.CreateMethodXml.#ctor(Sciex.FMan.MSMethod)">
            <summary>
            Constructor.
            </summary>
            <param name="method">Method info.</param>
        </member>
        <member name="M:Sciex.FMan.CreateMethodXml.Create">
            <summary>
            This method creates and populates the XML document.
            </summary>
            <returns>The new XML document.</returns>
        </member>
        <member name="M:Sciex.FMan.CreateMethodXml.PopulateDocument">
            <summary>
            Populates our XML document. Subclasses can override this method if they will
            add additional information to the XML.
            </summary>
        </member>
        <member name="M:Sciex.FMan.CreateMethodXml.AddExperimentInfo">
            <summary>
            Adds MS experiment information.
            </summary>
        </member>
        <member name="M:Sciex.FMan.CreateMethodXml.AddExperimentInfo(System.Int32,System.Int32,Sciex.FMan.MSExperiment)">
            <summary>
            Adds MS information for the specified experiment.
            </summary>
            <param name="periodIndex">Period number.</param>
            <param name="experimentIndex">Experiment number.</param>
            <param name="experiment">Experiment object</param>
        </member>
        <member name="M:Sciex.FMan.CreateMethodXml.BeforeAddExperimentInfo(System.Int32,System.Int32,Sciex.FMan.MSExperiment,System.Xml.XmlNode)">
            <summary>
            This method is called by AddExperimentInfo after creating the experiment node under
            which experiment information will be placed, but before populating it. This method
            itself does nothing, but subclasses may want to override.
            </summary>
            <param name="periodIndex">Period number.</param>
            <param name="experimentIndex">Experiment number.</param>
            <param name="experiment">Experiment object</param>
            <param name="exptNode">Node for experiment information.</param>
        </member>
        <member name="M:Sciex.FMan.CreateMethodXml.BeforeAddExperimentParametersInfo(System.Int32,System.Int32,Sciex.FMan.MSExperiment,System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>
            This method is called by AddExperimentInfo after creating the key-values node for
            the experiment-level parameters and adding the default fields, but before adding
            the next section for cycle-dependent parameters. This method itself does nothing, 
            but subclasses may want to override.
            </summary>
            <param name="periodIndex">Period number.</param>
            <param name="experimentIndex">Experiment number.</param>
            <param name="experiment">Experiment object</param>
            <param name="exptNode">Node for experiment information.</param>
            <param name="exptKeyValues">Node for experiment key-values.</param>
        </member>
        <member name="M:Sciex.FMan.CreateMethodXml.AfterAddExperimentInfo(System.Int32,System.Int32,Sciex.FMan.MSExperiment,System.Xml.XmlNode)">
            <summary>
            This method is called by AddExperimentInfo at the end of that mehtod (after
            adding mass range information). This method itself does nothing, but subclasses may 
            want to override.
            </summary>
            <param name="periodIndex">Period number.</param>
            <param name="experimentIndex">Experiment number.</param>
            <param name="experiment">Experiment object</param>
            <param name="exptNode">Node for experiment information.</param>
        </member>
        <member name="M:Sciex.FMan.CreateMethodXml.AddFixedMassInfo(System.Xml.XmlNode,Sciex.FMan.MSExperiment)">
            <summary>
            Adds information about the fixed mass or masses (if any).
            </summary>
            <param name="exptKeyValues">Node to which we add info.</param>
            <param name="experiment">Experiment object.</param>
        </member>
        <member name="M:Sciex.FMan.CreateMethodXml.AddMassRangeInfo(System.Xml.XmlNode,Sciex.FMan.MSExperiment)">
            <summary>
            Adds information for all of the mass ranges for the experiment.
            </summary>
            <param name="exptNode">Node to which info is added.</param>
            <param name="experiment">Experiment object.</param>
        </member>
        <member name="M:Sciex.FMan.CreateMethodXml.AddScanMassRangeInfo(System.Xml.XmlNode,Sciex.FMan.MSExperiment)">
            <summary>
            Adds information for all full-scan mass ranges for the experiment.
            </summary>
            <param name="exptNode">Node to which info is added.</param>
            <param name="experiment">Experiment object.</param>
        </member>
        <member name="M:Sciex.FMan.CreateMethodXml.AddScanMassRangeInfo(System.Xml.XmlNode,System.Int32,Sciex.FMan.MassRange)">
            <summary>
            Adds information for the specified full-scan mass range.
            </summary>
            <param name="keyValues">KeyValues node to which info is added.</param>
            <param name="massRangeIndex">Index of mass range.</param>
            <param name="massRange">Mass range.</param>
        </member>
        <member name="M:Sciex.FMan.CreateMethodXml.AfterAddScanMassRangeInfo(System.Xml.XmlNode,System.Int32,Sciex.FMan.MassRange)">
            <summary>
            Subclasses can override this method if they have additional information to add
            to the key-values section for a scan (not SIM or MRM) experiment.
            </summary>
            <param name="keyValues">Key-values node.</param>
            <param name="massRangeIndex">Index of mass range.</param>
            <param name="massRange">Current mass range.</param>
        </member>
        <member name="M:Sciex.FMan.CreateMethodXml.AddSimOrMrmMassRangeInfo(System.Xml.XmlNode,Sciex.FMan.MSExperiment)">
            <summary>
            Adds information for all SIM or MRM mass ranges for the experiment.
            </summary>
            <param name="exptNode">Node to which info is added.</param>
            <param name="experiment">Experiment object.</param>
        </member>
        <member name="M:Sciex.FMan.CreateMethodXml.GetSimOrMrmHeaders(Sciex.FMan.MSExperiment,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>
            Returns an array of headers for using with a SIM or MRM mass range table.
            </summary>
            <param name="experiment">Experiment.</param>
            <param name="useNames">Do we have any mass range names?</param>
            <param name="useDwells">Do we have any valid dwell times?</param>
            <param name="useExpectedRTs">Do we have any valid retention times?</param>
            <param name="useRTWindows">Do we have any valid RT windows?</param>
            <returns>List of headers.</returns>
        </member>
        <member name="M:Sciex.FMan.CreateMethodXml.GetExtraSimOrMrmHeaders(Sciex.FMan.MSExperiment)">
            <summary>
            Subclasses can override this method if they have additional information to add
            to the end of the mass range table for SIM or MRM data.
            </summary>
            <param name="experiment">Experiment object.</param>
            <returns>Extra column headings or null.</returns>
        </member>
        <member name="M:Sciex.FMan.CreateMethodXml.UseDwell(Sciex.FMan.MSExperiment)">
            <summary>
            Returns true iff we have at least one valid dwell time for a mass range.
            </summary>
            <param name="experiment">Experiment object.</param>
            <returns>True iff we have one or more valid dwells.</returns>
        </member>
        <member name="M:Sciex.FMan.CreateMethodXml.UseExpectedRT(Sciex.FMan.MSExperiment)">
            <summary>
            Returns true iff we have at least one valid expected RT for a mass range.
            </summary>
            <param name="experiment">Experiment object.</param>
            <returns>True iff we have one or more valid RTs.</returns>
        </member>
        <member name="M:Sciex.FMan.CreateMethodXml.UseRTWindow(Sciex.FMan.MSExperiment)">
            <summary>
            Returns true iff we have at least one valid RT start or end time.
            </summary>
            <param name="experiment">Experiment object.</param>
            <returns>True iff we have one or more valid RT starts or ends.</returns>
        </member>
        <member name="M:Sciex.FMan.CreateMethodXml.AddSimOrMrmMassRangeInfo(System.Xml.XmlNode,System.Int32,Sciex.FMan.MassRange,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Adds information for the specified SIM or MRM mass range.
            </summary>
            <param name="table">Table to which info is added.</param>
            <param name="massRangeIndex">Index of mass range.</param>
            <param name="massRange">Mass range.</param>
            <param name="isSim">For SIM rather than MRM?</param>
            <param name="useNames">Do we have valid names?</param>
            <param name="useDwells">Do we have valid dwells?</param>
            <param name="useExpectedRTs">Do we have valid expected RTs?</param>
            <param name="useRTWindows">Do we have valid RT windows?</param>
        </member>
        <member name="M:Sciex.FMan.CreateMethodXml.GetExtraSimOrMrmMassRangeFields(System.Int32,Sciex.FMan.MassRange)">
            <summary>
            If subclasses override the GetExtraSimOrMrmHeaders method, they should override this method
            to add extra fields to the provided row for a SIM or MRM mass range.
            </summary>
            <param name="massRangeIndex">Index of mass range.</param>
            <param name="massRange">Mass range object.</param>
            <returns>List of extra fields for mass range or null.</returns>
        </member>
        <member name="M:Sciex.FMan.CreateMethodXml.AddAdcInfo">
            <summary>
            Adds the names of the ADC channels (if any).
            </summary>
        </member>
        <member name="M:Sciex.FMan.CreateMethodXml.AddDadInfo">
            <summary>
            Adds the wavelength range for a DAD device (if any).
            </summary>
        </member>
        <member name="P:Sciex.FMan.CreateMethodXml.Method">
            <summary>
            Returns our method.
            </summary>
        </member>
        <member name="P:Sciex.FMan.CreateMethodXml.CreateXml">
            <summary>
            Returns the object used to create the XML.
            </summary>
        </member>
        <member name="T:Sciex.FMan.MassSpectrumInfo">
            <summary>
            This class defines information about a particular spectrum (period
            and experiment, cycle range, etc). Note that the MSExperiment
            class defines experiment-level parameters: This class itself just
            defines those which can potentially vary from spectrum to spectrum.
            </summary>
        </member>
        <member name="M:Sciex.FMan.MassSpectrumInfo.#ctor(System.Int32,System.Int32,System.Double,System.Int32,System.Int32,System.Int32,System.Double[],System.Double,System.Int32)">
            <summary>
            This constructor is used to set *most* of our fields, however the
            SetTOFInfo will need to be subsequently called for TOF spectra.
            </summary>
            <param name="periodIndex">Period index.</param>
            <param name="experimentIndex">Experiment index.</param>
            <param name="countsConversionFactor">See the CountsConversionFactor property.</param>
            <param name="startCycle">Start cycle.</param>
            <param name="endCycle">End cycle.</param>
            <param name="msLevel">Level of MS^n.</param>
            <param name="parentMZs">Parent m/z values, if any.</param>
            <param name="CE">Collision energy (use -1 if not known).</param>
            <param name="idaCharge">IDA-determined charge.</param>
        </member>
        <member name="M:Sciex.FMan.MassSpectrumInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This constructor is used when creating this object from a stream.
            </summary>
            <param name="info">Object from which we get data.</param>
            <param name="context">Not used.</param>
        </member>
        <member name="M:Sciex.FMan.MassSpectrumInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Persists this object to the provided stream.
            </summary>
            <param name="info">Object to which we write data.</param>
            <param name="context">Not used.</param>
        </member>
        <member name="M:Sciex.FMan.MassSpectrumInfo.SetCycleRange(System.Int32,System.Int32)">
            <summary>
            Sets the cycle range.
            </summary>
            <param name="startCycle">Start cycle.</param>
            <param name="endCycle">End cycle.</param>
        </member>
        <member name="M:Sciex.FMan.MassSpectrumInfo.GetParentMZ(System.Int32)">
            <summary>
            Returns the parent m/z for the specified MS level. For MS^2 specify
            a level of "2", etc. The level must be greater than or equal to 2
            and less than or equal to MSLevel.
            </summary>
            <param name="level">Level of MS^n.</param>
            <returns>Parent m/z for level.</returns>
        </member>
        <member name="M:Sciex.FMan.MassSpectrumInfo.SetParentMZ(System.Int32,System.Double)">
            <summary>
            Sets the parent m/z for the specified MS level. For MS^2 specify a level
            of "2", etc. The level must be greater than or equal to 2 and less than
            or equal to MSLevel.
            </summary>
            <param name="level">Level of MS^n.</param>
            <param name="parentMZ">Parent m/z to set.</param>
        </member>
        <member name="M:Sciex.FMan.MassSpectrumInfo.CheckMSLevel(System.Int32)">
            <summary>
            Throws an exception if "level" is not in the range 1 to MSLevel.
            </summary>
            <param name="level">Level of MS^n.</param>
        </member>
        <member name="M:Sciex.FMan.MassSpectrumInfo.SetOrthogonalMassIndexRange(System.Int32,System.Int32)">
            <summary>
            For a spectrum associated with orthogonal data, sets the index range of the masses
            in the parent data. For more details see the description of the OrthogonalMSExperiment
            class.
            </summary>
            <param name="startMassIndex">Starting mass index.</param>
            <param name="endMassIndex">Ending mass index.</param>
        </member>
        <member name="P:Sciex.FMan.MassSpectrumInfo.StartCycle">
            <summary>
            Returns the first cycle of the range used to calculate an averaged
            spectrum.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MassSpectrumInfo.EndCycle">
            <summary>
            Returns the last cycle of the range used to calculate an averaged
            spectrum.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MassSpectrumInfo.IsProductSpectrum">
            <summary>
            Returns true if this is a product spectrum. This includes MS^3, etc
            as well as normal MS/MS.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MassSpectrumInfo.MSLevel">
            <summary>
            Returns the level of MS^n (2 for normal products, 3 for MS^3 and
            (currently) 1 for everything else).
            </summary>
        </member>
        <member name="P:Sciex.FMan.MassSpectrumInfo.ParentMZ">
            <summary>
            Returns the parent m/z, if any, for this spectrum. If this is not
            a product spectrum an exception is generated.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MassSpectrumInfo.CollisionEnergy">
            <summary>
            Gets or sets the collision energy if it is known.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MassSpectrumInfo.ParentChargeState">
            <summary>
            Returns the charge state of our parent, if any, determined by the
            IDA acquisition engine. If this is not a product spectrum an exception 
            is generated. A return value of zero indicates that the charge state
            was never assigned.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MassSpectrumInfo.Calibration">
            <summary>
            Gets or sets the calibration associated with this object. Note that in
            many cases the calibration will be null.
            </summary>
        </member>
        <member name="P:Sciex.FMan.MassSpectrumInfo.OrthogonalStartMassIndex">
            <summary>
            For a spectrum associated with orthogonal data, returns the starting index of the
            mass in the parent data, otherwise we return -1. (See the OrthogonalMSExperiment 
            description for more details).
            </summary>
        </member>
        <member name="P:Sciex.FMan.MassSpectrumInfo.OrthogonalEndMassIndex">
            <summary>
            For a spectrum associated with orthogonal data, returns the ending index of the
            mass in the parent data, otherwise we return -1. (See the OrthogonalMSExperiment 
            description for more details).
            </summary>
        </member>
        <member name="T:Sciex.FMan.IGetFMan">
            <summary>
            This interface is used to obtain an IFMan interface which is appropriate for
            reading a specified sample. One reason that this interface is needed because 
            objects implementing IFMan are not generally serialisable: for details see the
            FManXYData.GetFManDuringDeserialisation property.
            </summary>
        </member>
        <member name="M:Sciex.FMan.IGetFMan.GetFMan(Sciex.FMan.FManSample)">
            <summary>
            Returns an IFMan object is is appropriate for reading data for the
            provided sample.
            </summary>
            <param name="sample">Sample for which to get IFMan.</param>
            <returns>IFMan object for sample.</returns>
        </member>
        <member name="T:Sciex.FMan.ExperimentTypeEnum">
            <summary>
            This enumeration defines the various experiment types. Note that the SpectrumTypeEnum
            enumeration defines the type of data itself. Also note that this enumeration is 
            (essentially) a high-level "scan" type where multiple low-level scan types map to a
            higher level experiment type.
            </summary>
        </member>
        <member name="F:Sciex.FMan.ExperimentTypeEnum.kMS">
            <summary>MS experiment.</summary>
        </member>
        <member name="F:Sciex.FMan.ExperimentTypeEnum.kProduct">
            <summary>MS^n experiment where n >= 2.</summary>
        </member>
        <member name="F:Sciex.FMan.ExperimentTypeEnum.kPrecursor">
            <summary>Precursor experiment.</summary>
        </member>
        <member name="F:Sciex.FMan.ExperimentTypeEnum.kNeutralLoss">
            <summary>Neutral loss (or gain) experiment.</summary>
        </member>
        <member name="F:Sciex.FMan.ExperimentTypeEnum.kSIM">
            <summary>Single ion monitoring.</summary>
        </member>
        <member name="F:Sciex.FMan.ExperimentTypeEnum.kMRM">
            <summary>Multiple reaction monitoring.</summary>
        </member>
        <member name="T:Sciex.FMan.SpectrumTypeEnum">
            <summary>
            This enumeration defines the type of data generated for a given experiment.
            </summary>
        </member>
        <member name="F:Sciex.FMan.SpectrumTypeEnum.kScan">
            <summary>Profile scan data.</summary>
        </member>
        <member name="F:Sciex.FMan.SpectrumTypeEnum.kSIM">
            <summary>Single ion monitoring.</summary>
        </member>
        <member name="F:Sciex.FMan.SpectrumTypeEnum.kMRM">
            <summary>Multiple reaction monitoring.</summary>
        </member>
        <member name="T:Sciex.FMan.IdaExperimentType">
            <summary>
            This enumeration defines the IDA type for a given experiment.
            </summary>
        </member>
        <member name="F:Sciex.FMan.IdaExperimentType.kNotIda">
            <summary>Experiment is not IDA.</summary>
        </member>
        <member name="F:Sciex.FMan.IdaExperimentType.kSurvey">
            <summary>IDA survey.</summary>
        </member>
        <member name="F:Sciex.FMan.IdaExperimentType.kConfirmation">
            <summary>IDA confirmation (for example QTrap ER).</summary>
        </member>
        <member name="F:Sciex.FMan.IdaExperimentType.kDependent">
            <summary>Dependent product.</summary>
        </member>
        <member name="T:Sciex.FMan.IGroupedSamples">
            <summary>
            This interface is potentially supported by objects which implement IFMan if samples
            can be logically grouped and ordered within a group. For example if multiple samples
            can reside in one physical file these samples may be considered to be grouped.
            </summary>
        </member>
        <member name="M:Sciex.FMan.IGroupedSamples.GetNumSamples(Sciex.FMan.FManSample)">
            <summary>
            Given a sample, returns the number of samples in the same group.
            </summary>
            <param name="sample">Sample.</param>
            <returns>Number of samples in group.</returns>
        </member>
        <member name="M:Sciex.FMan.IGroupedSamples.GetSampleIndex(Sciex.FMan.FManSample)">
            <summary>
            Given a sample, returns the index of this sample within its group.
            </summary>
            <param name="sample">Sample.</param>
            <returns>Index of specified sample.</returns>
        </member>
        <member name="M:Sciex.FMan.IGroupedSamples.CreateSample(Sciex.FMan.FManSample,System.Int32)">
            <summary>
            Given a sample associated with a particular group, returns a new sample for
            the same group with the specified group index. The "index" should run from
            zero to "GetNumSamples(sample) - 1".
            </summary>
            <param name="sample">Sample.</param>
            <param name="index">Index of new sample in group.</param>
            <returns>New sample.</returns>
        </member>
        <member name="T:Sciex.FMan.ParametersXmlHelper">
            <summary>
            This class is used to add information to an XML document corresponding to 
            the various instrument parameters for a method.
            </summary>
        </member>
        <member name="M:Sciex.FMan.ParametersXmlHelper.#ctor(Clearcore2.Utility.IO.InfoXml.CreateInfoXml)">
            <summary>
            Constructor.
            </summary>
            <param name="createXml">Used to populate XML.</param>
        </member>
        <member name="M:Sciex.FMan.ParametersXmlHelper.AddExperimentInfo(Sciex.FMan.MSExperiment,System.Xml.XmlNode)">
            <summary>
            Adds information to the provided node for cycle-dependent parameters, experiment
            parameters and any other parameters which are the same for all mass ranges for 
            the experiment.
            </summary>
            <param name="experiment">Experiment.</param>
            <param name="exptNode">Node to which info is added.</param>
        </member>
        <member name="M:Sciex.FMan.ParametersXmlHelper.ParseMassRangeParameters(Sciex.FMan.MSExperiment)">
            <summary>
            This method parses through all compound-dependent parameters for all mass ranges 
            adding each unique parameter to one of two dictionaries. The "fExperimentParameters"
            dictionary holds a "ConvertParameter" object for each parameter name for which
            the same start and stop values are used for all mass ranges. The "fMassRangeParameters"
            dicionary holds a ConvertParameter object for all parameters for which the same
            start and stop are NOT used for all mass ranges.
            </summary>
        </member>
        <member name="M:Sciex.FMan.ParametersXmlHelper.AddCycleDependentParameters(Sciex.FMan.MSExperiment,System.Xml.XmlNode)">
            <summary>
            Adds information for any cycle-dependent parameters for the experiment.
            </summary>
            <param name="experiment">The experiment.</param>
            <param name="exptNode">Node to which info is added.</param>
        </member>
        <member name="M:Sciex.FMan.ParametersXmlHelper.AddNonCycleDependentParameters(Sciex.FMan.MSExperiment,System.Xml.XmlNode)">
            <summary>
            Adds information for any parameters from "experiment" which are not cycle
            dependent (i.e. for which the start and stop values are the same).
            </summary>
            <param name="experiment">The experiment.</param>
            <param name="exptNode">Node to which info is added.</param>
        </member>
        <member name="M:Sciex.FMan.ParametersXmlHelper.AddConstantMassRangeParameters(System.Xml.XmlNode)">
            <summary>
            Adds information for any mass-range parameters which are the same for all mass ranges.
            </summary>
            <param name="exptNode">Node to which info is added.</param>
        </member>
        <member name="M:Sciex.FMan.ParametersXmlHelper.AddParametersTable(System.Collections.Generic.SortedList{System.String,Sciex.FMan.ParametersXmlHelper.ConvertParameter},System.String,System.Xml.XmlNode)">
            <summary>
            Adds information for the provided parameters dictionary to the XML.
            </summary>
            <param name="parameters">List of parameters.</param>
            <param name="sectionName">Name of section in XML.</param>
            <param name="exptNode">Node to which info is added.</param>
        </member>
        <member name="M:Sciex.FMan.ParametersXmlHelper.AllSameStartStop(System.Collections.Generic.SortedList{System.String,Sciex.FMan.ParametersXmlHelper.ConvertParameter})">
            <summary>
            Returns true iff the "SameStartStop" property is true for all parameters in the
            provided dictionary. Note that this means that for each parameter the start and
            stop are the same, but not necessarily that the starts and stops are the same
            between parameters.
            </summary>
            <param name="parameters">List of parameters.</param>
            <returns>True if all parameters have same start and stop.</returns>
        </member>
        <member name="M:Sciex.FMan.ParametersXmlHelper.GetSimOrMrmHeaders">
            <summary>
            Returns a list of extra column names (for any compound dependent parameters) for the
            mass ranges for the current experiment.
            </summary>
            <returns>List of mass range table column names.</returns>
        </member>
        <member name="M:Sciex.FMan.ParametersXmlHelper.GetSimOrMrmMassRangeFields(Sciex.FMan.MassRange)">
            <summary>
            Returns a list of extra column fields (for any compound dependent parameters) for
            the specified mass range for the current experiment.
            </summary>
            <param name="massRange">Mass range.</param>
            <returns>List of mass range table field values.</returns>
        </member>
        <member name="M:Sciex.FMan.ParametersXmlHelper.AddScanMassRangeInfo(System.Xml.XmlNode,Sciex.FMan.MassRange)">
            <summary>
            Adds any mass range parameters (for the provided full-scan range).
            </summary>
            <param name="keyValues">Key-values to which we add parameters (if any).</param>
            <param name="massRange">Mass range.</param>
        </member>
        <member name="T:Sciex.FMan.ParametersXmlHelper.ConvertParameter">
            <summary>
            This class tracks a single InstrumentParameter and also keeps track of whether
            for multiple mass ranges the same start and stop value is used by the parameter
            for all ranges.
            </summary>
        </member>
        <member name="M:Sciex.FMan.ParametersXmlHelper.ConvertParameter.#ctor(Sciex.FMan.InstrumentParameter)">
            <summary>
            Constructor.
            </summary>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:Sciex.FMan.ParametersXmlHelper.ConvertParameter.Merge(Sciex.FMan.InstrumentParameter)">
            <summary>
            "Merges" the provided parameter, which just means that we keep track of
            whether the same start and stop value is used for all parameters.
            </summary>
            <param name="parameter">Parameter to merge.</param>
        </member>
        <member name="P:Sciex.FMan.ParametersXmlHelper.ConvertParameter.Parameter">
            <summary>
            Returns our parameter.
            </summary>
        </member>
        <member name="P:Sciex.FMan.ParametersXmlHelper.ConvertParameter.SameStartStop">
            <summary>
            Returns true iff the start and stop value for our parameter are the same
            across all mass ranges.
            </summary>
        </member>
        <member name="T:Sciex.FMan.IRealTimeFManUpdate">
            <summary>
            This interface is used to update a sample which is being acquired in real
            time. Objects which implement IFMan MAY also implement this interface.
            </summary>
        </member>
        <member name="M:Sciex.FMan.IRealTimeFManUpdate.RealTimeUpdate(Sciex.FMan.FManSample)">
            <summary>
            Updates the provided sample. If there is new data we return true.
            </summary>
            <param name="sample">Sample to update.</param>
            <returns>True if there is new data.</returns>
        </member>
        <member name="T:Sciex.FMan.CalculateXicSum">
            <summary>
            This class is used to calculate an XIC. See the CalculateSum() method for details.
            </summary>
        </member>
        <member name="M:Sciex.FMan.CalculateXicSum.CalculateSum(Clearcore2.Data.CommonInterfaces.IRawXYData,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            This method calculates the sum of the data points over the specified mass
            range (startX to endX) for an XIC calculation. The provided "data" object
            MUST have its x-values in increasing order. If "simpleSum" is true then the
            data points within the range are summed as-is. Otherwise a weighted sum is
            calculated in which the first and last data points contribute a fractional
            proportion of their intensity. The simple method is not recommended in 
            general since it can give inconsistent results if the x-values are not the
            same between all cycles or samples, however it is provided for backwards
            compatibility. Note that the x-range is expanded using the step size
            (otherwise, for example, we would always get a zero result if startX and
            endX were equal).
            </summary>
            <param name="data">Data for which to calculate sum.</param>
            <param name="startX">Starting x-value for sum.</param>
            <param name="endX">Ending x-value for sum.</param>
            <param name="startStep">Step size of data near "startX".</param>
            <param name="endStep">Step size of data near "endX".</param>
            <param name="simpleSum">Use simple method?</param>
            <returns>The calculated sum.</returns>
        </member>
        <member name="M:Sciex.FMan.CalculateXicSum.CalculateSimpleSum(Clearcore2.Data.CommonInterfaces.IRawXYData,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculates XIC sum using the simple method - see CalculateSum() for details.
            </summary>
        </member>
        <member name="M:Sciex.FMan.CalculateXicSum.CalculateWeightedSum(Clearcore2.Data.CommonInterfaces.IRawXYData,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculates XIC sum using the weighted method - see CalculateSum() for details.
            </summary>
        </member>
        <member name="T:Sciex.FMan.IGetGetIntensitySum">
            <summary>
            This interface is used to obtain a reference to an IGetIntensitySum implementation.
            Objects which implement IFMan should also implement this interface if they have an
            optimised way of obtaining an XIC and TIC. For details see IGetIntensitySum.
            </summary>
        </member>
        <member name="M:Sciex.FMan.IGetGetIntensitySum.GetIntensitySumInterface(Sciex.FMan.FManSample,System.Int32,System.Int32)">
            <summary>
            Returns an object implementing IGetIntensitySum. It is also valid to return null
            if optimisation is supported for some samples but not for the specified one.
            </summary>
            <param name="sample">Sample to use.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <returns>IGetIntensitySum implementor or null.</returns>
        </member>
        <member name="T:Sciex.FMan.IGetIntensitySum">
            <summary>
            This interface is used by the ChromatogramHelper class to potentially calculate XICs
            and TICs in an optimised way. If the IFMan object supports IGetGetIntensitySum it uses 
            the methods on this IGetIntensitySum interface to perform the calculation. Otherwise it 
            requests a full spectrum using IFMan.CreateMassSpectrum() and populates it for each cycle 
            using FManMassSpectrum.SetToSpectrum. For example if TOF data is stored natively as time
            (not mass), it is more efficient to implement this interface so that the points do not
            need to be converted from time to mass. Some implementations may also have a way of
            retriving only the requested XIC mass range rather than the entire available range.
            </summary>
        </member>
        <member name="M:Sciex.FMan.IGetIntensitySum.Init(Sciex.FMan.FManSample,System.Int32,System.Int32)">
            <summary>
            This method is called before TIC calculation begins. Note that the same 
            values for the sample, period and experiment will be passed to GetSum.
            </summary>
            <param name="sample">Sample to use.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
        </member>
        <member name="M:Sciex.FMan.IGetIntensitySum.Init(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Double[],System.Double[])">
            <summary>
            This method is called before full-scan XIC calculation begins. Note that the same 
            values for the sample, period and experiment will be passed to GetSum.
            </summary>
            <param name="sample">Sample to use.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="startMasses">List of start masses.</param>
            <param name="endMasses">List of end masses.</param>
        </member>
        <member name="M:Sciex.FMan.IGetIntensitySum.Init(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32[])">
            <summary>
            This method is called before indexed XIC calculation begins. Note that the same 
            values for the sample, period and experiment will be passed to GetSum.
            </summary>
            <param name="sample">Sample to use.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="massIndices">List of XIC indices.</param>
        </member>
        <member name="M:Sciex.FMan.IGetIntensitySum.Finish(Sciex.FMan.FManSample,System.Int32,System.Int32)">
            <summary>
            This method is called after XIC calculation finishes.
            </summary>
            <param name="sample">Sample to use.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
        </member>
        <member name="M:Sciex.FMan.IGetIntensitySum.InitForCycle(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32)">
            <summary>
            This method is called before a given TIC cycle is processed. This is followed 
            by one or more calls to GetSum.
            </summary>
            <param name="sample">Sample to use.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="cycle">Cycle index.</param>
        </member>
        <member name="M:Sciex.FMan.IGetIntensitySum.InitForCycle(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Double[],System.Double[])">
            <summary>
            This method is called before a given full scan cycle is processed. This is followed 
            by one or more calls to GetSum (for each range in list provided here).
            </summary>
            <param name="sample">Sample to use.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="cycle">Cycle index.</param>
            <param name="startMasses">List of start masses.</param>
            <param name="endMasses">List of end masses.</param>
        </member>
        <member name="M:Sciex.FMan.IGetIntensitySum.InitForCycle(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32[])">
            <summary>
            This method is called before a given indexed scan cycle is processed. This is followed 
            by one or more calls to GetSum (for each range in list provided here).
            </summary>
            <param name="sample">Sample to use.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="cycle">Cycle index.</param>
            <param name="massIndices">List of XIC indices.</param>
        </member>
        <member name="M:Sciex.FMan.IGetIntensitySum.GetSum(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32)">
            <summary>
            This method is called to obtain the TIC intensity sum for a given cycle.
            </summary>
            <param name="sample">Sample to use.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="cycle">Cycle number.</param>
            <returns>The sum.</returns>
        </member>
        <member name="M:Sciex.FMan.IGetIntensitySum.GetSum(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            This method is called to obtain the intensity sum for a given cycle over the
            specified mass range. Note that multiple calls may be made to this method for the 
            same cycle (but a different mass range, see InitForCycle).
            </summary>
            <param name="sample">Sample to use.</param>
            <param name="period">Period index.</param>
            <param name="experiment">Experiment index.</param>
            <param name="cycle">Cycle number.</param>
            <param name="startMass">Start mass to sum.</param>
            <param name="endMass">End mass to sum.</param>
            <returns>The sum.</returns>
        </member>
        <member name="M:Sciex.FMan.IGetIntensitySum.GetSum(Sciex.FMan.FManSample,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            For a description of this method and the parameters, see the overloaded method. This
            method is similar except that it applies to SIM or MRM data as opposed to full-scan data.
            </summary>
        </member>
        <member name="T:Sciex.FMan.FManWavelengthSpectrum">
            <summary>
            This subclass of FManXYData is used to create a wavelength spectrum where the
            x-axis is wavelength in nm and the y-axis is intensity or absorbance. This
            class itself is still abstract, so subclasses are responsible for overriding
            the SetToSpectrum() method to create the actual data.
            </summary>
        </member>
        <member name="M:Sciex.FMan.FManWavelengthSpectrum.#ctor(Sciex.FMan.IFMan)">
            <summary>
            Constructor.
            </summary>
            <param name="fman">Used to get info, etc.</param>
        </member>
        <member name="M:Sciex.FMan.FManWavelengthSpectrum.#ctor(Sciex.FMan.FManWavelengthSpectrum)">
            <summary>
            Copy constructor.
            </summary>
            <param name="toCopy">The object to copy.</param>
        </member>
        <member name="M:Sciex.FMan.FManWavelengthSpectrum.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor used when de-serialising.
            </summary>
            <param name="info">Object with data.</param>
            <param name="context">Not used.</param>
        </member>
        <member name="M:Sciex.FMan.FManWavelengthSpectrum.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialises this object.
            </summary>
            <param name="info">Object which holds data to write.</param>
            <param name="context">Not used.</param>
        </member>
        <member name="M:Sciex.FMan.FManWavelengthSpectrum.SetToSpectrum(Sciex.FMan.FManSample,System.Int32)">
            <summary>
            Sets our XY data to a wavelength spectrum for the specified sample and spectrum
            index.
            </summary>
            <param name="sample">Sample to use.</param>
            <param name="spectrumIndex">Spectrum index.</param>
        </member>
        <member name="M:Sciex.FMan.FManWavelengthSpectrum.SetToSpectrum(Sciex.FMan.FManSample,System.Int32,System.Int32)">
            <summary>
            Sets our XY data to a wavelength spectrum for the specified sample and spectrum
            index range. The spectrum is averaged over the range.
            </summary>
            <param name="sample">Sample to use.</param>
            <param name="startIndex">Start spectrum index.</param>
            <param name="endIndex">End spectrum index.</param>
        </member>
        <member name="M:Sciex.FMan.FManWavelengthSpectrum.ValidateSetToSpectrum(Sciex.FMan.FManSample,System.Int32,System.Int32)">
            <summary>
            This method validates that it's possible to obtain a wavelength spectrum for the
            provided sample and index range. If not an exception is thrown.
            </summary>
            <param name="sample">Sample to use.</param>
            <param name="startIndex">Start spectrum index.</param>
            <param name="endIndex">End spectrum index.</param>
        </member>
        <member name="M:Sciex.FMan.FManWavelengthSpectrum.GetStepSizeInternal(System.Double)">
            <summary>
            Returns our step size (just a constant).
            </summary>
            <param name="xValue">X-value at which to get step, but not used here.</param>
            <returns>The step size.</returns>
        </member>
        <member name="M:Sciex.FMan.FManWavelengthSpectrum.SetStepSize(System.Double)">
            <summary>
            Sets our step size to the specified value.
            </summary>
            <param name="stepSize">The step size.</param>
        </member>
        <member name="M:Sciex.FMan.FManWavelengthSpectrum.SetStepSize(System.Double[])">
            <summary>
            Sets our step size to the maximum difference between adjacent x-values
            (wavelengths). We except that this difference will be constant, but if there
            are small differences between the steps we use the largest.
            </summary>
            <param name="xValues">List of wavelengths.</param>
        </member>
        <member name="M:Sciex.FMan.FManWavelengthSpectrum.GetDefaultDescription(Sciex.FMan.FManSample,Sciex.FMan.DADMethod,Sciex.FMan.WavelengthSpectrumInfo)">
            <summary>
            Returns a string describing the requested wavelength spectrum.
            </summary>
            <param name="sample">Sample.</param>
            <param name="dadMethod">DAD method object.</param>
            <param name="info">Info object.</param>
            <returns>The description.</returns>
        </member>
        <member name="P:Sciex.FMan.FManWavelengthSpectrum.Info">
            <summary>
            This method hides the "Info" method of our base class in order to return a
            subclass of FManDataInfo, namely WavelengthSpectrumInfo.
            </summary>
        </member>
        <member name="P:Sciex.FMan.FManWavelengthSpectrum.ConstantStepSizeInternal">
            <summary>
            Overridden to always return true since we assume a constant step size.
            </summary>
        </member>
        <member name="T:Sciex.FMan.ChromatogramTypeEnum">
            <summary>
            Defines the various types of chromatograms supported by the ChromatogramInfo 
            class: total ion chromatograms (TICs), extracted ion chromatograms (XICs),
            base-peak chromatograms (BPCs), analogue-to-digital convereter data (ADCs),
            total wavelength chromatograms (TWC)and extracted wavelength chromatograms (XWCs) 
            (the last two for diode arrays).
            </summary>
        </member>
        <member name="F:Sciex.FMan.ChromatogramTypeEnum.kTIC">
            <summary></summary>
        </member>
        <member name="F:Sciex.FMan.ChromatogramTypeEnum.kXIC">
            <summary></summary>
        </member>
        <member name="F:Sciex.FMan.ChromatogramTypeEnum.kBPC">
            <summary></summary>
        </member>
        <member name="F:Sciex.FMan.ChromatogramTypeEnum.kADC">
            <summary></summary>
        </member>
        <member name="F:Sciex.FMan.ChromatogramTypeEnum.kTWC">
            <summary></summary>
        </member>
        <member name="F:Sciex.FMan.ChromatogramTypeEnum.kXWC">
            <summary></summary>
        </member>
        <member name="T:Sciex.FMan.ChromatogramInfo">
            <summary>
            This class defines information about a particular chromatogram
            (period and experiment, chromatogram type, etc). Note that some
            of the properties only apply to certain chromatogram types: For
            example the "XICStartMass" only applies for XICs.
            </summary>
        </member>
        <member name="F:Sciex.FMan.ChromatogramInfo.fChroType">
            <summary>
            type of chromatogram
            </summary>
        </member>
        <member name="F:Sciex.FMan.ChromatogramInfo.fScanXIC">
            <summary>
            is this a scan XIC?
            </summary>
        </member>
        <member name="M:Sciex.FMan.ChromatogramInfo.#ctor(System.Int32,System.Int32,System.Double)">
            <summary>
            Constructor. For all chromatogram types other than TIC, callers
            must finish initialising this object by calling one of the
            "Set" methods such has SetXICInfo.
            </summary>
            <param name="periodIndex">Period index.</param>
            <param name="experimentIndex">Experiment index.</param>
            <param name="countsConversionFactor">See the CountsConversionFactor property.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This constructor is used when creating this object from a stream.
            </summary>
            <param name="info">Object from which we get data.</param>
            <param name="context">Not used.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Persists this object to the provided stream.
            </summary>
            <param name="info">Object to which we write data.</param>
            <param name="context">Not used.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramInfo.SetScanXICInfo(System.Double,System.Double)">
            <summary>
            This method sets XIC-specific information for an XIC extracted
            from full-scan data.
            </summary>
            <param name="startMass">Start mass for XIC.</param>
            <param name="endMass">End mass for XIC.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramInfo.SetIndexedXICInfo(System.Int32)">
            <summary>
            This method sets XIC-specific information for an XIC extracted
            from so called zero-width data (SIM or MRM).
            </summary>
            <param name="massIndex">Index of mass.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramInfo.SetBPCInfo(System.Double,System.Double[],System.Double[],System.Double[])">
            <summary>
            This method sets BPC-specific information. In particular the
            calller provides an array of base peak masses.
            </summary>
            <param name="massTolerance">Mass tolerance for BPC calculation.</param>
            <param name="basePeaks">Base peak masses.</param>
            <param name="startMasses">BPC start masses if limited mass range; null if not.</param>
            <param name="endMasses">BPC end masses if limited range; null if not.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramInfo.SetBPCMasses(System.Double[])">
            <summary>
            Sets the base peak masses. This method should only be called AFTER a call to 
            SetBPCInfo. This method is provided in case the base peak masses are not 
            known initially (and null is passed to SetBPCInfo).
            </summary>
            <param name="basePeaks">Base peak masses.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramInfo.SetADCInfo(System.Int32)">
            <summary>
            This method sets ADC-specific information.
            </summary>
            <param name="channelIndex">Index of ADC channel.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramInfo.SetTWCInfo">
            <summary>
            This method sets this object to a TWC.
            </summary>
        </member>
        <member name="M:Sciex.FMan.ChromatogramInfo.SetXWCInfo(System.Double,System.Double)">
            <summary>
            This method sets information specific to an XWC.
            </summary>
            <param name="startWavelength">Starting wavelength.</param>
            <param name="endWavelength">Ending wavelength.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramInfo.SetCycleRange(System.Int32,System.Int32)">
            <summary>
            Sets the cycle range used for a limited range chromatogram calculation.
            The starting cycle must be greater than or equal to zero; the ending
            cycle can be -1 to indicate "all".
            </summary>
            <param name="startCycle">Start cycle.</param>
            <param name="endCycle">End cycle or -1.</param>
        </member>
        <member name="M:Sciex.FMan.ChromatogramInfo.GetBasePeakMass(System.Int32)">
            <summary>
            Returns the base peak mass with the given index. (If this chromatogram does
            not represent a BPC an exception is generated.)
            </summary>
            <param name="index">Index of base peak mass.</param>
            <returns>The base peak mass.</returns>
        </member>
        <member name="M:Sciex.FMan.ChromatogramInfo.GetBasePeakMassRangeStart(System.Int32)">
            <summary>
            Given a mass range index (from zero to NumBasePeakMassRanges - 1), returns the 
            corresponding start mass.
            </summary>
            <param name="index">Index of mass range.</param>
            <returns>The mass range start mass.</returns>
        </member>
        <member name="M:Sciex.FMan.ChromatogramInfo.GetBasePeakMassRangeEnd(System.Int32)">
            <summary>
            Given a mass range index (from zero to NumBasePeakMassRanges - 1), returns the 
            corresponding end mass.
            </summary>
            <param name="index">Index of mass range.</param>
            <returns>The mass range end mass.</returns>
        </member>
        <member name="P:Sciex.FMan.ChromatogramInfo.StartCycle">
            <summary>
            Returns the first cycle used for the chromatogram calculation.
            </summary>
        </member>
        <member name="P:Sciex.FMan.ChromatogramInfo.EndCycle">
            <summary>
            Returns the last cycle used for the chromatogram calculation; there is a
            special case in that a return value of -1 means that all cycles were used.
            This should always be the case for multiple period TICs.
            </summary>
        </member>
        <member name="P:Sciex.FMan.ChromatogramInfo.ChromatogramType">
            <summary>
            Returns the type of chromatogram associated with this data.
            </summary>
        </member>
        <member name="P:Sciex.FMan.ChromatogramInfo.IsMassSpec">
            <summary>
            Returns true if this info object represents mass spec data (TIC, XIC or BPC) and
            false otherwise (ADC, TWC and XWC).
            </summary>
        </member>
        <member name="P:Sciex.FMan.ChromatogramInfo.IsDAD">
            <summary>
            Returns true if this info object represents DAD data (TWX or XWC) and false otherwise.
            </summary>
        </member>
        <member name="P:Sciex.FMan.ChromatogramInfo.IsScanXIC">
            <summary>
            Returns whether or not this chromatogram represents an XIC calculated
            from full-scan data. If not, AND our ChromatogramType is kXIC, we
            represent an XIC calculated from zero-width data such as SIM or MRM.
            </summary>
        </member>
        <member name="P:Sciex.FMan.ChromatogramInfo.XICStartMass">
            <summary>
            Returns the start mass for this scan XIC. (If this chromatogram does
            not represent a scan XIC an exception is generated.)
            </summary>
        </member>
        <member name="P:Sciex.FMan.ChromatogramInfo.XICEndMass">
            <summary>
            Returns the end mass for this scan XIC. (If this chromatogram does
            not represent a scan XIC an exception is generated.)
            </summary>
        </member>
        <member name="P:Sciex.FMan.ChromatogramInfo.XICMassIndex">
            <summary>
            Returns the mass index for this indexed XIC. (If this chromatogram does
            not represent an indexed XIC an exception is generated.)
            </summary>
        </member>
        <member name="P:Sciex.FMan.ChromatogramInfo.BPCMassTolerance">
            <summary>
            Returns the mass tolerance used in the construction of the BPC. (If this 
            chromatogram does not represent a BPC an exception is generated.) To
            set the value use the FManChromatogram.BPCMassTolerance property.
            </summary>
        </member>
        <member name="P:Sciex.FMan.ChromatogramInfo.BasePeakMasses">
            <summary>
            Returns the base peak masses; if this chromatogram does not represent a BPC
            an exception is generated.
            </summary>
        </member>
        <member name="P:Sciex.FMan.ChromatogramInfo.NumBasePeakMasses">
            <summary>
            Returns the number of base peak masses. (If this chromatogram does
            not represent a BPC an exception is generated.)
            </summary>
        </member>
        <member name="P:Sciex.FMan.ChromatogramInfo.BasePeakMassRangeStarts">
            <summary>
            Returns the base peak start masses used in the calculation of a limited mass
            range BPC. A return value of null indicates that the entire available mass
            range was used. Callers should not modify the values in the array.
            </summary>
        </member>
        <member name="P:Sciex.FMan.ChromatogramInfo.BasePeakMassRangeEnds">
            <summary>
            Returns the base peak end masses used in the calculation of a limited mass
            range BPC. A return value of null indicates that the entire avaialble mass
            range was used. Callers should not modify the values in the array.
            </summary>
        </member>
        <member name="P:Sciex.FMan.ChromatogramInfo.NumBasePeakMassRanges">
            <summary>
            Returns the number of base peak mass RANGES used in the calculation of a limited
            mass range BPC (not that this is not the number of base peak masses themselves).
            A return value of zero indicates that the entire available mass range was used.
            </summary>
        </member>
        <member name="P:Sciex.FMan.ChromatogramInfo.ADCChannelIndex">
            <summary>
            Returns the ADC channel number associated with this ADC chromatogram.
            (If this chromatogram does not represent an ADC an exception is generated.)
            </summary>
        </member>
        <member name="P:Sciex.FMan.ChromatogramInfo.XWCStartWavelength">
            <summary>
            Returns the start wavelength for this XWC. (If this chromatogram does
            not represent an XWC an exception is generated.)
            </summary>
        </member>
        <member name="P:Sciex.FMan.ChromatogramInfo.XWCEndWavelength">
            <summary>
            Returns the end wavelength for this scan XWC. (If this chromatogram does
            not represent an XWC an exception is generated.)
            </summary>
        </member>
        <member name="T:Sciex.FMan.CreateSampleXml">
            <summary>
            This class is used to create an XML document which contains sample information
            for a specified sample. The XML follows the Sciex.Utility.IO.InfoXml schema.
            Most clients should never need to use this class directly since this information
            is typically obtained by a call to IFMan.GetSampleXml(). This public class is
            provided so that implementations of IFMan can create a subclass of CreateSampleXml
            which adds additional information. In this case PopulateDocument() should be
            overridden.
            </summary>
        </member>
        <member name="M:Sciex.FMan.CreateSampleXml.#ctor(Sciex.FMan.FManSample,Sciex.FMan.SampleInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="sample">Sample for which to get info.</param>
            <param name="info">Sample info.</param>
        </member>
        <member name="M:Sciex.FMan.CreateSampleXml.Create">
            <summary>
            This method creates and populates the XML document.
            </summary>
            <returns>The new XML document.</returns>
        </member>
        <member name="M:Sciex.FMan.CreateSampleXml.PopulateDocument">
            <summary>
            Populates our XML document. Subclasses can override this method if they will
            add additional information to the XML.
            </summary>
        </member>
        <member name="M:Sciex.FMan.CreateSampleXml.AddMainSampleInfo">
            <summary>
            This method adds the "main" sample information to our document. This includes
            the sample name, sample ID, etc. It also includes custom fields.
            </summary>
        </member>
        <member name="M:Sciex.FMan.CreateSampleXml.AddAcquisitionInfo">
            <summary>
            This methods adds acquisition info to our document.
            </summary>
        </member>
        <member name="M:Sciex.FMan.CreateSampleXml.AddAcquisitionInfo(System.Xml.XmlNode)">
            <summary>
            Adds the acquisition information to the provided key-values node.
            </summary>
            <param name="keyValues">Key-values node for info.</param>
        </member>
        <member name="M:Sciex.FMan.CreateSampleXml.AddQuantInfo">
            <summary>
            This method adds quantitation info to our document.
            </summary>
        </member>
        <member name="P:Sciex.FMan.CreateSampleXml.Sample">
            <summary>
            Returns our sample.
            </summary>
        </member>
        <member name="P:Sciex.FMan.CreateSampleXml.CreateXml">
            <summary>
            Returns our helper object used to create the XML.
            </summary>
        </member>
        <member name="T:Sciex.FMan.GetErrorMessageIfInvalidISelectSamples">
            <summary>
            A delegate of this type can be provided to ISelectSample.SelectSample() 
            or ISelectSample.SelectSamples() to validate that the selected samples
            are valid. Return null or empty if all is fine otherwise an error message. 
            If "filter" is true the delegate is being called to filter samples completely 
            from the UI AND there will be exactly one sample in the provided list. In 
            this case the error message is not displayed to the user - return non-null, 
            non-empty to remove the sample. Otherwise the delegate is being called to 
            validate selected samples before the dialog is closed and any resulting 
            message IS shown to the user (and there may be more than one sample). It 
            will usually be more efficient to only perform the check at the validation 
            stage. NOTE: Some implementation may only call this method with a "filter"
            value of false, so it should not always be assumed that checking can be
            done at the filtering stage.
            </summary>
            <param name="filter">Filtering or validation stage?</param>
            <param name="fman">IFMan object.</param>
            <param name="samples">Current samples selected by user.</param>
            <returns>Null or empty if all is fine, otherwise error message for user.</returns>
        </member>
        <member name="T:Sciex.FMan.ISelectSampleUIControl">
            <summary>
            Objects implementing this interface manage a UI control which is suitable for
            embedding in custom UI for allowing the user to select samples.
            </summary>
        </member>
        <member name="M:Sciex.FMan.ISelectSampleUIControl.GetValidationMessage">
            <summary>
            If the UI is in an invalid state (for example the user has not selected a sample),
            this method returns an error message suitable for displaying to the user. If
            everything is valid the return value is null or empty.
            </summary>
            <returns>Error message if invalid, otherwise null or empty.</returns>
        </member>
        <member name="P:Sciex.FMan.ISelectSampleUIControl.UIControl">
            <summary>
            A Control object suitable for embedded in custom UI. Callers should call
            Dispose() for the control (which will happen by default if the control is
            embedded in a container and the container is disposed). NOTE: Callers can
            cast the return value to a Systems.Windows.Forms.Control instance.
            </summary>
        </member>
        <member name="P:Sciex.FMan.ISelectSampleUIControl.SelectedSamples">
            <summary>
            Returns the currently selected samples in the UI.
            </summary>
        </member>
        <member name="P:Sciex.FMan.ISelectSampleUIControl.CurrentDirectory">
            <summary>
            Returns the current directory which is active in the UI. For some implementations
            (for example those which interact with a database rather than the file system)
            the return value may be null.
            </summary>
        </member>
        <member name="T:Sciex.FMan.ISelectSampleProvider">
            <summary>
            This interface is used to attach a UI provider (which implements ISelectSample) to
            an IFMan object (or rather to a specific concrete implementation). Although not usually
            needed, objects implementing this interface can also implement ICloneable to make a
            copy when an IFMan is cloned - otherwise both IFMan objects will use the same provider.
            </summary>
        </member>
        <member name="M:Sciex.FMan.ISelectSampleProvider.Init(Sciex.FMan.IFMan,System.String)">
            <summary>
            In some cases an object implementing this interface is created dynamically. In
            this case the implementation must have a parameterless constructor; this Init()
            method is used to attach the implementing IFMan object. Any data specified by
            the caller (or configuration file) is also provided.
            </summary>
            <param name="fman">IFMan object for which to provide UI.</param>
            <param name="data">Custom data (if any).</param>
        </member>
        <member name="P:Sciex.FMan.ISelectSampleProvider.SelectSample">
            <summary>
            Returns the interface used to display sample selection UI.
            </summary>
        </member>
    </members>
</doc>
